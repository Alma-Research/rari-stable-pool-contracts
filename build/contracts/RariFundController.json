{
  "contractName": "RariFundController",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This library handles deposits to and withdrawals from the liquidity pools that power RariFund as well as currency exchanges via 0x.\",\"methods\":{\"approveTo0x(address,uint256)\":{\"details\":\"Approves tokens to 0x without spending gas on every deposit.\",\"params\":{\"amount\":\"The amount of tokens to be approved.\",\"erc20Contract\":\"The ERC20 contract of the token to be approved.\"},\"return\":\"Boolean indicating success.\"},\"approveToPool(uint8,address,uint256)\":{\"details\":\"Approves tokens to the pool without spending gas on every deposit.\",\"params\":{\"amount\":\"The amount of tokens to be approved.\",\"erc20Contract\":\"The ERC20 contract of the token to be approved.\",\"pool\":\"The index of the pool.\"},\"return\":\"Boolean indicating success.\"},\"depositToPool(uint8,address,uint256)\":{\"details\":\"Deposits funds to the specified pool.\",\"params\":{\"amount\":\"The amount of tokens to be deposited.\",\"erc20Contract\":\"The ERC20 contract of the token to be deposited.\",\"pool\":\"The index of the pool.\"},\"return\":\"Boolean indicating success.\"},\"getPoolBalance(uint8,address)\":{\"details\":\"Returns the calling address's balance of the specified currency in the specified pool. Ideally, we can add the view modifier, but Compound's `getUnderlyingBalance` function (called by `CompoundPoolController.getBalance`) potentially modifies the state.\",\"params\":{\"erc20Contract\":\"The ERC20 contract of the token.\",\"pool\":\"The index of the pool.\"}},\"marketSell0xOrdersFillOrKill(LibOrder.Order[],bytes[],uint256,uint256)\":{\"details\":\"Fills 0x exchange orders up to a certain amount of input and up to a certain price. We should be able to make this function external and use calldata for all parameters, but Solidity does not support calldata structs (https://github.com/ethereum/solidity/issues/5479).\",\"params\":{\"orders\":\"The limit orders to be filled in ascending order of price.\",\"protocolFee\":\"The protocol fee in ETH to pay to 0x.\",\"signatures\":\"The signatures for the orders.\",\"takerAssetFillAmount\":\"The amount of the taker asset to sell (excluding taker fees).\"},\"return\":\"Array containing the input amount sold and output amount bought.\"},\"withdrawAllFromPool(uint8,address)\":{\"details\":\"Withdraws all funds from the specified pool.\",\"params\":{\"erc20Contract\":\"The ERC20 contract of the token to be withdrawn.\",\"pool\":\"The index of the pool.\"},\"return\":\"Boolean indicating success.\"},\"withdrawFromPool(uint8,address,uint256)\":{\"details\":\"Withdraws funds from the specified pool.\",\"params\":{\"amount\":\"The amount of tokens to be withdrawn.\",\"erc20Contract\":\"The ERC20 contract of the token to be withdrawn.\",\"pool\":\"The index of the pool.\"},\"return\":\"Boolean indicating success.\"}},\"title\":\"RariFundController\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/david/rari-contracts/contracts/lib/RariFundController.sol\":\"RariFundController\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/david/rari-contracts/contracts/external/compound/CErc20.sol\":{\"keccak256\":\"0x2e7d8dbcb8fb612cfc778730e69c5bf4ae23de619dca26ad3ffebf37e7099ba8\",\"urls\":[\"bzz-raw://44b712aa72ad1fe6e3f9350398dd20efebf2e3ab5bf3cc308d69d6d070de9d94\",\"dweb:/ipfs/QmYvpTUDbbmP7v43umDpcUdSrawk85cFJ888BWM5yoVrQJ\"]},\"/home/david/rari-contracts/contracts/external/dydx/Getters.sol\":{\"keccak256\":\"0x9ad597244dec4278c43ee39d89fe23d00e09133f37455941594c9a5cabed6382\",\"urls\":[\"bzz-raw://27b9638a4c24a9d26ec778cb96c8f0f1cc9e087e76cc9f6dc6f8a2a318c07a52\",\"dweb:/ipfs/QmaM8Kc1RR1TBPHdVXeewzCWUM4BDYLiSVA3NYGrYSAq4Q\"]},\"/home/david/rari-contracts/contracts/external/dydx/Operation.sol\":{\"keccak256\":\"0x679036ca898bc5516b8f63f44c07fbe8ebe3ce233eb215a2b1c4c4a6d502786a\",\"urls\":[\"bzz-raw://fd63c5daf3333935f1444ce5c4c671c6faa8e4106cd96b14b6309a6116b5d3a2\",\"dweb:/ipfs/QmWunGGWG3QNMcUMxnjU2kfkrSYdA3T2vsJPnuYtYqQbVj\"]},\"/home/david/rari-contracts/contracts/external/dydx/SoloMargin.sol\":{\"keccak256\":\"0x2e0cec52c5b88a240816bc5d7ca062f08490ac3dd8bfd75c4b564f9c91584079\",\"urls\":[\"bzz-raw://25362d56c5e96e872cb7089a8c9761b01583254ecaff39213fd8ccb87b77be1c\",\"dweb:/ipfs/QmVFcfToWp8ECu5yK9VrXEUs1fzemBHdJDpo9ABRsErKRv\"]},\"/home/david/rari-contracts/contracts/external/dydx/lib/Account.sol\":{\"keccak256\":\"0x835464a7d38af8c8825e933589db0c4287b838b268126069309bcfb308f87c12\",\"urls\":[\"bzz-raw://bf42139cc2a5fd9b453942a919374c3286dda133faf4716e18f172eef6bccc5c\",\"dweb:/ipfs/QmVdKxBkkANe9dYPBUUDkNXZsYETyXnsJcRG2kyDChgqsJ\"]},\"/home/david/rari-contracts/contracts/external/dydx/lib/Actions.sol\":{\"keccak256\":\"0xc4cd95970a4bb457f0c821c5e80d69460a62aff68f0eb409b7a1cb7a7b08401b\",\"urls\":[\"bzz-raw://c4ac4146b7622bb33b2c47329ceef7db27b469695e14073cf4c1351f2e932ef8\",\"dweb:/ipfs/QmRpHWeAFBcjfdPGeq3PoufmQ2TQmN4iKuCBzcRJJbLx3A\"]},\"/home/david/rari-contracts/contracts/external/dydx/lib/Types.sol\":{\"keccak256\":\"0x69e8b86b4fce20739c4fd65c8285388c099e8c9580e25652c72d8bade4df7a31\",\"urls\":[\"bzz-raw://cfdf9c9956f8b22e3084d780d331d6f8ae75d57cf058a55a2391a206e8d2e2e6\",\"dweb:/ipfs/QmVe4D9DXdAepZaCP3bx6WECQZU5NwFiko6VAPzi59MD8X\"]},\"/home/david/rari-contracts/contracts/lib/RariFundController.sol\":{\"keccak256\":\"0x40afb43fb2c098e85aa09e9ad8fc2dff322c5068f347b7864ff80dd6bd1d0e9a\",\"urls\":[\"bzz-raw://bb59d666dfd513faae5a09a950a332731d0d6aa9bd60090f4170c069ba1da732\",\"dweb:/ipfs/QmSncqEGMpkRn31pSyqCmipkYxRCJN3CjzxMvUcA4Zek3K\"]},\"/home/david/rari-contracts/contracts/lib/exchanges/ZeroExExchangeController.sol\":{\"keccak256\":\"0x4f21cbaf1c4c0f083f92d1dd71c118ba67e1583f5efccf5e6e360c847a046ac6\",\"urls\":[\"bzz-raw://e53431be659bc0adda86ad9f77ca091517867f86ddca8f03187d0ddebedd2e45\",\"dweb:/ipfs/QmaHnZMtjYycA65QwHwZWQKz3u8z7FQsweSb9LWyEeHHh4\"]},\"/home/david/rari-contracts/contracts/lib/pools/CompoundPoolController.sol\":{\"keccak256\":\"0x767b39b947ab3ab4d66ccdc746a37077b187f254f9dd80c72c558ff92caf3b8f\",\"urls\":[\"bzz-raw://bf484398620a78b3fc99a19e414fe7c422054f3aa5f444fac5c4f7a7cec6dc32\",\"dweb:/ipfs/Qmds9rvf9oW3dDKE8iRF55LYHrJTzVW39HaWKGviPUL2C5\"]},\"/home/david/rari-contracts/contracts/lib/pools/DydxPoolController.sol\":{\"keccak256\":\"0x11d214593b648679c7906c67bc0ef6e61c51efe8b9afdee5fbe84845920e0802\",\"urls\":[\"bzz-raw://1979772221b629d37a97177deced90c9e5b4c258e682b37f633a2b1af4fb4ccc\",\"dweb:/ipfs/QmT9iZ67Wde4JhF3KWWgUQjkXqQbs9mQKXNfVbxWKHW7NE\"]},\"@0x/contracts-exchange-libs/contracts/src/LibFillResults.sol\":{\"keccak256\":\"0xedb2f1e66e7ece2302b4dd19d0ef29a0ffeefddae7e9a81f7104155ac3cbb75b\",\"urls\":[\"bzz-raw://9a490801ffde73bb98aa3de52ef2d615894d188820ebe4c8cd340f5cd33462ad\",\"dweb:/ipfs/QmUTSaJ6GTvNoYCmpd9dv2mz25vakoLS9tQpiF1ohAUMFV\"]},\"@0x/contracts-exchange-libs/contracts/src/LibMath.sol\":{\"keccak256\":\"0xc331418f75cd832accf9dc439be811e10d99f1d2de3a9c0321fd3f127cdf1e54\",\"urls\":[\"bzz-raw://8a090ac0a55200b6f5624c41fff2ad21e5c673b7fcd0faf1bc88017087bbb1b2\",\"dweb:/ipfs/QmWhxuazHstpSCYDQJscHnAh6ngW7SHKT79t6yQHaJHgmi\"]},\"@0x/contracts-exchange-libs/contracts/src/LibMathRichErrors.sol\":{\"keccak256\":\"0xd2d047534facd6051467dd7a22d7ee9fd4e54e63bb5a5fae2511eac7332fad3d\",\"urls\":[\"bzz-raw://5e0aeedd55c996fd72004a14f5c528ed60b46631ca9599bbb7925c8342ca3be4\",\"dweb:/ipfs/QmNi1ozt4sYmn4pCobjU7FQ4KGUvK77pCyWUtbD18uQgVm\"]},\"@0x/contracts-exchange-libs/contracts/src/LibOrder.sol\":{\"keccak256\":\"0x1b7b1e1a2dff4249c6f6c500000342a805f372131797b6d7314435204a651ad4\",\"urls\":[\"bzz-raw://19c11b77022ccfa530af75f236ea00ecb92aa5476f96abbde268163660b3906b\",\"dweb:/ipfs/Qmf1MtwPLpocsBArn8Npyzu4AtMqSagYTuee8JdbMXXwHM\"]},\"@0x/contracts-exchange-libs/contracts/src/LibZeroExTransaction.sol\":{\"keccak256\":\"0x15e9dddfeb5b17b6d44a6be19b3f5f2cf2a2af24174cd623fcd731fb5204635a\",\"urls\":[\"bzz-raw://9014066b0fcf65ba9ecec88fc41e3413ef27c039159abd1203f0a48bb61e498d\",\"dweb:/ipfs/QmRAF6q5XrQV7pPZM1aaahRHAMba9hh6iUeRgW2fzFgn87\"]},\"@0x/contracts-exchange/contracts/src/interfaces/IAssetProxyDispatcher.sol\":{\"keccak256\":\"0x5aa3bcc134f9ff77da4f5ba42a17a62391f5adafd605658dcdcdd7c352d52e25\",\"urls\":[\"bzz-raw://92d355e026a2635f561621e7c835eac53ea15c40375bacc78f57c9c67b9793c4\",\"dweb:/ipfs/QmeiYbPmb3yBQ66V1HRKfDUoPGof6AxWsPQfJLfau4j7d4\"]},\"@0x/contracts-exchange/contracts/src/interfaces/IExchange.sol\":{\"keccak256\":\"0x208c082d30b28d322d5828ba2a6b880b4366c3f9d45853456424bbc036ede0cb\",\"urls\":[\"bzz-raw://d0e8dd59721cdacc192c5d44123cb84bcc78cdb067873e616f6a4f2533868418\",\"dweb:/ipfs/Qmb6QJTLz8QTyFVYPFjRRL7TwovSdALe3kk43fUoYZs1cg\"]},\"@0x/contracts-exchange/contracts/src/interfaces/IExchangeCore.sol\":{\"keccak256\":\"0xbccc362e85d592e0cc73108c3f7d8f66d58e449e42dbcc099442984446264b36\",\"urls\":[\"bzz-raw://383ae2d931d565fce7f046904601e1c54446c859a046af90c3d2591efe45a3f9\",\"dweb:/ipfs/QmTrfsEGAr38zgNYTHLjCuHfa7nw2hA64qvP8tLSMDgAjT\"]},\"@0x/contracts-exchange/contracts/src/interfaces/IMatchOrders.sol\":{\"keccak256\":\"0x57e052667a28152057a1ab25b958b55d9c79afe95ea5ab645692bad18e5504b3\",\"urls\":[\"bzz-raw://de35bf6f6ab53af3dcb6b09999840adbc161c1f59623940670f552b59a28b147\",\"dweb:/ipfs/QmebunP1nLEWkMPqbFY8iQewkaUUZH5xVAs3erGerqf264\"]},\"@0x/contracts-exchange/contracts/src/interfaces/IProtocolFees.sol\":{\"keccak256\":\"0x46928eb127258c64e030b298c935371eacc8beb8abc7ff09869d6f6ae99fa5a8\",\"urls\":[\"bzz-raw://b49ac75bdaec7a4767c15ad09640282ce1656b8e4112882a65b669d89474b5fe\",\"dweb:/ipfs/QmeRbdDvipy5x5MmSMiVXDT1pH3FeiT5v5ek7zNZom3378\"]},\"@0x/contracts-exchange/contracts/src/interfaces/ISignatureValidator.sol\":{\"keccak256\":\"0xfaff6f59dc8d9ab1003f8408e104d10d261208187e349153c075da0b71f400cd\",\"urls\":[\"bzz-raw://10290e91a633564fc0b1e732aec3321a3bf60122b79069f90e8ce037dd8799b5\",\"dweb:/ipfs/QmaTZxNZkimMxsjTCS47sJgnfaZkG4gcTgawLAadxjkjFv\"]},\"@0x/contracts-exchange/contracts/src/interfaces/ITransactions.sol\":{\"keccak256\":\"0x323b06d8e93e8fd96e563070bdccac7c760437326a845d75a0b1cc9224cbcda8\",\"urls\":[\"bzz-raw://3b2a2c7585783a8555d43817d7813e6465718d31fd6084e4f4c2c5d2560b8909\",\"dweb:/ipfs/QmQoiknyN4HvVvGQKbBqniD1Y2nc4R7KmXFNip7tGs5GvT\"]},\"@0x/contracts-exchange/contracts/src/interfaces/ITransferSimulator.sol\":{\"keccak256\":\"0x15a3952999620388de42961b069f2ebde0c5900d31a10a4b8d7dc6c315d1ef7e\",\"urls\":[\"bzz-raw://6324f0cfee0ea4a0cf68858fd634b7e9c085faa75d298fc582f3c76ce4400400\",\"dweb:/ipfs/QmVeyHXXGuUHKAu9c8MU8SwEcD3omsdogK86xcE7435gE6\"]},\"@0x/contracts-exchange/contracts/src/interfaces/IWrapperFunctions.sol\":{\"keccak256\":\"0xe463eb4df5a24faff9aa0eb5b957fb6249f86dd52d42c53fd21212926efc6fb0\",\"urls\":[\"bzz-raw://96d0862b48d996587122077eecb6b136a5dfa0d3de1e531dd665e9d5a4686732\",\"dweb:/ipfs/QmSBMvMxEhHJZDj5aWeSjSoV5QWCTyCNnzBTX9yuuU6nLL\"]},\"@0x/contracts-utils/contracts/src/LibEIP712.sol\":{\"keccak256\":\"0xe19c3cbc71fbea0fdb45c1763306550015d940bea9dbec5f3fd2edfe2165d673\",\"urls\":[\"bzz-raw://267d263f0453352a1ac8d8085a13c4976fb8c964eff8d3aab0a84173d1438efb\",\"dweb:/ipfs/QmbaRw85MYYP3KTmQ68gYdEnFyMqD7frwjxxwsj4j4JCr1\"]},\"@0x/contracts-utils/contracts/src/LibRichErrors.sol\":{\"keccak256\":\"0xe3ce6ded2fea3cc80998ca4d364bda530e273af0ba1c78d22a6cdadb6f64186e\",\"urls\":[\"bzz-raw://8239629dbcee9797a8f8157f03c2b78827b446787b4d53b3033a3e1ab538ad0b\",\"dweb:/ipfs/QmbttkX94CxMkS6t1K4He5bNwGKCRUhKqTt9pNsAL5ynst\"]},\"@0x/contracts-utils/contracts/src/LibSafeMath.sol\":{\"keccak256\":\"0xd0da9ac1905381832f6612774cb7eced3b4b60459d6bafa59f5424955b44c935\",\"urls\":[\"bzz-raw://ede4bbe2dac43c6cc4e3b7a22285e00d55b31fb8cc00b375c6ac4714298b7e6d\",\"dweb:/ipfs/QmWbN5qbJSNYrMMZMugaH5itTVSexe9yPsCPuArQVCLUgi\"]},\"@0x/contracts-utils/contracts/src/LibSafeMathRichErrors.sol\":{\"keccak256\":\"0xcf6adae04bd7af8e41fcd40ad148cc3d1cd5596bd42b01961b735c9b416a6572\",\"urls\":[\"bzz-raw://103791140e631e9d670bbc99e5f8e546f56061c5d49de97754006ce2c252d61e\",\"dweb:/ipfs/QmeRMyYFSk7n1sLzRSGqxcoX1sKQSdAQya6bRy6nseu6xX\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0x6f2c9955d65c522b80f4b8792f076512d2df947d2112cbc4d98a4781ed42ede2\",\"urls\":[\"bzz-raw://7d8ec81683520c06baeef3f7e06cd82bd6fd5fa611f26857f475f6c829540aff\",\"dweb:/ipfs/QmTDkFzKnrpiV1UKnSoiZAHPuguWzokrr4pFbSPvyaSo56\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]}},\"version\":1}",
  "bytecode": "0x612ed3610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100875760003560e01c8063a293d62c11610065578063a293d62c14610102578063db2138a014610122578063e889537b1461014f578063f0c6bcc31461016f57610087565b80637268315d1461008c5780638fe6b38d146100c257806393063500146100e2575b600080fd5b81801561009857600080fd5b506100ac6100a7366004611f1c565b61019c565b6040516100b99190612b5e565b60405180910390f35b8180156100ce57600080fd5b506100ac6100dd366004611d64565b61022c565b8180156100ee57600080fd5b506100ac6100fd366004611f4c565b610254565b81801561010e57600080fd5b506100ac61011d366004611f4c565b6102c6565b81801561012e57600080fd5b5061014261013d366004611f1c565b610328565b6040516100b99190612cdb565b81801561015b57600080fd5b506100ac61016a366004611f4c565b610357565b81801561017b57600080fd5b5061018f61018a366004611e32565b6103b9565b6040516100b99190612b50565b600060ff83166101d9576101af826103d6565b6101d45760405162461bcd60e51b81526004016101cb90612c0d565b60405180910390fd5b610222565b8260ff166001141561020a576101ee82610591565b6101d45760405162461bcd60e51b81526004016101cb90612c9d565b60405162461bcd60e51b81526004016101cb90612cad565b5060015b92915050565b600061023883836106de565b6102225760405162461bcd60e51b81526004016101cb90612c1d565b600060ff841661028957610268838361080c565b6102845760405162461bcd60e51b81526004016101cb90612bcd565b6102bb565b8360ff166001141561020a5761029f83836109c6565b6102845760405162461bcd60e51b81526004016101cb90612bfd565b5060015b9392505050565b600060ff84166102f6576102da8383610a74565b6102845760405162461bcd60e51b81526004016101cb90612b9d565b8360ff166001141561020a5761030c8383610b6f565b6102845760405162461bcd60e51b81526004016101cb90612bed565b600060ff83166103425761033b82610c4c565b9050610226565b8260ff166001141561020a5761033b82610d35565b600060ff84166103875761036b8383610ecb565b6102845760405162461bcd60e51b81526004016101cb90612c0d565b8360ff166001141561020a5761039d8383610ffd565b6102845760405162461bcd60e51b81526004016101cb90612c9d565b6103c1611722565b6103cd858585856110ab565b95945050505050565b6000806103e2836111d1565b90506103ec611740565b506040805180820182523081526000602082015281516001808252818401909352909160609190816020015b610420611740565b815260200190600190039081610418579050509050818160008151811061044357fe5b6020026020010181905250610456611757565b604080516080810190915260018082526020820190815260200160018152602001600081525090506060610488611780565b506040805161010081018252600180825260006020830181905282840186905260608084018a9052608084018290523060a085015260c084019190915260e083018590528351828152808501909452919290816020015b6104e7611780565b8152602001906001900390816104df579050509050818160008151811061050a57fe5b602090810291909101015260405163a67a6a4560e01b8152731e0447b19bb6ecfdae1e4ae1694b0c3659614e4e9063a67a6a459061054e9088908590600401612af9565b600060405180830381600087803b15801561056857600080fd5b505af115801561057c573d6000803e3d6000fd5b5050505060019750505050505050505b919050565b60008061059d83611245565b90506000816001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016105cd9190612ab5565b60206040518083038186803b1580156105e557600080fd5b505afa1580156105f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061061d9190810190611efe565b9050600081116106325760009250505061058c565b60405163db006a7560e01b81526000906001600160a01b0384169063db006a7590610661908590600401612cdb565b602060405180830381600087803b15801561067b57600080fd5b505af115801561068f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106b39190810190611efe565b905080156106d35760405162461bcd60e51b81526004016101cb90612c5d565b506001949350505050565b604051636eb1769f60e11b8152600090839082906001600160a01b0383169063dd62ed3e906107279030907395e6f48254609a6ee006f7d493c8e5fb97094cef90600401612ac3565b60206040518083038186803b15801561073f57600080fd5b505afa158015610753573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506107779190810190611efe565b9050808410156107c5576107c07395e6f48254609a6ee006f7d493c8e5fb97094cef6107a9838763ffffffff61131f16565b6001600160a01b038516919063ffffffff61136116565b6106d3565b808411156106d3576106d37395e6f48254609a6ee006f7d493c8e5fb97094cef6107f5868463ffffffff61131f16565b6001600160a01b038516919063ffffffff61146d16565b600080610818846111d1565b9050610822611740565b506040805180820182523081526000602082015281516001808252818401909352909160609190816020015b610856611740565b81526020019060019003908161084e579050509050818160008151811061087957fe5b602002602001018190525061088c611757565b604080516080810190915260018152602081016000815260200160008152602001879052905060606108bc611780565b5060408051610100810182526000808252602082018190528183018590526060808301899052608083018290523060a084015260c083019190915260e08201849052825160018082528185019094529192909190816020015b61091d611780565b815260200190600190039081610915579050509050818160008151811061094057fe5b602090810291909101015260405163a67a6a4560e01b8152731e0447b19bb6ecfdae1e4ae1694b0c3659614e4e9063a67a6a45906109849088908590600401612af9565b600060405180830381600087803b15801561099e57600080fd5b505af11580156109b2573d6000803e3d6000fd5b5060019d9c50505050505050505050505050565b6000806109d284611245565b90506000816001600160a01b031663a0712d68856040518263ffffffff1660e01b8152600401610a029190612cdb565b602060405180830381600087803b158015610a1c57600080fd5b505af1158015610a30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a549190810190611efe565b905080156106d35760405162461bcd60e51b81526004016101cb90612c6d565b604051636eb1769f60e11b8152600090839082906001600160a01b0383169063dd62ed3e90610abd903090731e0447b19bb6ecfdae1e4ae1694b0c3659614e4e90600401612ac3565b60206040518083038186803b158015610ad557600080fd5b505afa158015610ae9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610b0d9190810190611efe565b905080841015610b3f576107c0731e0447b19bb6ecfdae1e4ae1694b0c3659614e4e6107a9838763ffffffff61131f16565b808411156106d3576106d3731e0447b19bb6ecfdae1e4ae1694b0c3659614e4e6107f5868463ffffffff61131f16565b600080610b7b84611245565b604051636eb1769f60e11b815290915084906000906001600160a01b0383169063dd62ed3e90610bb19030908790600401612ac3565b60206040518083038186803b158015610bc957600080fd5b505afa158015610bdd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610c019190810190611efe565b905080851015610c2457610c1f836107a9838863ffffffff61131f16565b610c40565b80851115610c4057610c40836107f5878463ffffffff61131f16565b50600195945050505050565b600080610c58836111d1565b9050610c62611740565b50604080518082018252308152600060208201529051636a8194e760e01b815260609081908190731e0447b19bb6ecfdae1e4ae1694b0c3659614e4e90636a8194e790610cb3908790600401612ccd565b60006040518083038186803b158015610ccb57600080fd5b505afa158015610cdf573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d079190810190611d9e565b80519295509093509150819086908110610d1d57fe5b60200260200101516020015195505050505050919050565b600080610d4183611245565b9050806001600160a01b031663a6afed956040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610d7e57600080fd5b505af1158015610d92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610db69190810190611efe565b506102bf670de0b6b3a7640000610ebf836001600160a01b031663182df0f56040518163ffffffff1660e01b815260040160206040518083038186803b158015610dff57600080fd5b505afa158015610e13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610e379190810190611efe565b6040516370a0823160e01b81526001600160a01b038616906370a0823190610e63903090600401612ab5565b60206040518083038186803b158015610e7b57600080fd5b505afa158015610e8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610eb39190810190611efe565b9063ffffffff6114fd16565b9063ffffffff61153716565b600080610ed7846111d1565b9050610ee1611740565b506040805180820182523081526000602082015281516001808252818401909352909160609190816020015b610f15611740565b815260200190600190039081610f0d5790505090508181600081518110610f3857fe5b6020026020010181905250610f4b611757565b60408051608081019091526000808252602082019081526020016000815260200187905290506060610f7b611780565b506040805161010081018252600180825260006020830181905282840186905260608084018a9052608084018290523060a085015260c084019190915260e083018590528351828152808501909452919290816020015b610fda611780565b815260200190600190039081610fd2579050509050818160008151811061094057fe5b60008061100984611245565b90506000816001600160a01b031663852a12e3856040518263ffffffff1660e01b81526004016110399190612cdb565b602060405180830381600087803b15801561105357600080fd5b505af1158015611067573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061108b9190810190611efe565b905080156106d35760405162461bcd60e51b81526004016101cb90612bad565b6110b3611722565b60008551116110d45760405162461bcd60e51b81526004016101cb90612b7d565b83518551146110f55760405162461bcd60e51b81526004016101cb90612c4d565b600083116111155760405162461bcd60e51b81526004016101cb90612c7d565b61111d6117d2565b60405163a6c3bf3360e01b81527361935cbdd02287b511119ddb11aeb42f1593b7ef9063a6c3bf3390859061115a908a9089908b90600401612b1e565b60a0604051808303818588803b15801561117357600080fd5b505af1158015611187573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052506111ac9190810190611ee0565b6040805180820190915260208083015182529151918101919091529695505050505050565b600073a0b86991c6218b36c1d19d4a2e9eb0ce3606eb486001600160a01b03831614156112005750600261058c565b736b175474e89094c44da98b954eedeac495271d0f6001600160a01b038316141561122d5750600361058c565b60405162461bcd60e51b81526004016101cb90612c2d565b6000736b175474e89094c44da98b954eedeac495271d0f6001600160a01b03831614156112875750735d3a536e4d6dbd6114cc1ead35777bab948e364361058c565b73a0b86991c6218b36c1d19d4a2e9eb0ce3606eb486001600160a01b03831614156112c757507339aa39c021dfbae8fac545936693ac917d5e756361058c565b73dac17f958d2ee523a2206206994597c13d831ec76001600160a01b0383161415611307575073f650c3d88d12db855b8bf7d11be6c55a4e07dcc961058c565b60405162461bcd60e51b81526004016101cb90612b8d565b60006102bf83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611579565b600061140b82604051806060016040528060298152602001612e6860299139604051636eb1769f60e11b81526001600160a01b0388169063dd62ed3e906113ae9030908a90600401612ac3565b60206040518083038186803b1580156113c657600080fd5b505afa1580156113da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506113fe9190810190611efe565b919063ffffffff61157916565b60405190915061146790859063095ea7b360e01b906114309087908690602401612ade565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526115a5565b50505050565b600061140b82856001600160a01b031663dd62ed3e30876040518363ffffffff1660e01b81526004016114a1929190612ac3565b60206040518083038186803b1580156114b957600080fd5b505afa1580156114cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506114f19190810190611efe565b9063ffffffff61168a16565b60008261150c57506000610226565b8282028284828161151957fe5b04146102bf5760405162461bcd60e51b81526004016101cb90612c3d565b60006102bf83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506116af565b6000818484111561159d5760405162461bcd60e51b81526004016101cb9190612b6c565b505050900390565b6115b7826001600160a01b03166116e6565b6115d35760405162461bcd60e51b81526004016101cb90612cbd565b60006060836001600160a01b0316836040516115ef9190612aa9565b6000604051808303816000865af19150503d806000811461162c576040519150601f19603f3d011682016040523d82523d6000602084013e611631565b606091505b5091509150816116535760405162461bcd60e51b81526004016101cb90612bdd565b805115611467578080602001905161166e9190810190611ec2565b6114675760405162461bcd60e51b81526004016101cb90612c8d565b6000828201838110156102bf5760405162461bcd60e51b81526004016101cb90612bbd565b600081836116d05760405162461bcd60e51b81526004016101cb9190612b6c565b5060008385816116dc57fe5b0495945050505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061171a57508115155b949350505050565b60405180604001604052806002906020820280388339509192915050565b604080518082019091526000808252602082015290565b604080516080810190915260008082526020820190815260200160008152602001600081525090565b6040805161010081018252600080825260208201529081016117a0611757565b8152602001600081526020016000815260200160006001600160a01b0316815260200160008152602001606081525090565b6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b803561022681612e2f565b805161022681612e2f565b600082601f83011261182857600080fd5b815161183b61183682612d10565b612ce9565b9150818183526020840193506020810190508385602084028201111561186057600080fd5b60005b8381101561188c5781611876888261180c565b8452506020928301929190910190600101611863565b5050505092915050565b600082601f8301126118a757600080fd5b81356118b561183682612d10565b81815260209384019390925082018360005b8381101561188c57813586016118dd8882611a3f565b84525060209283019291909101906001016118c7565b600082601f83011261190457600080fd5b813561191261183682612d10565b81815260209384019390925082018360005b8381101561188c578135860161193a8882611b11565b8452506020928301929190910190600101611924565b600082601f83011261196157600080fd5b815161196f61183682612d10565b9150818183526020840193506020810190508385604084028201111561199457600080fd5b60005b8381101561188c57816119aa8882611cb6565b84525060209092019160409190910190600101611997565b600082601f8301126119d357600080fd5b81516119e161183682612d10565b91508181835260208401935060208101905083856040840282011115611a0657600080fd5b60005b8381101561188c5781611a1c8882611cfd565b84525060209092019160409190910190600101611a09565b805161022681612e43565b600082601f830112611a5057600080fd5b8135611a5e61183682612d31565b91508082526020830160208301858383011115611a7a57600080fd5b611a85838284612dd6565b50505092915050565b600060a08284031215611aa057600080fd5b611aaa60a0612ce9565b90506000611ab88484611d4e565b8252506020611ac984848301611d4e565b6020830152506040611add84828501611d4e565b6040830152506060611af184828501611d4e565b6060830152506080611b0584828501611d4e565b60808301525092915050565b60006101c08284031215611b2457600080fd5b611b2f6101c0612ce9565b90506000611b3d8484611801565b8252506020611b4e84848301611801565b6020830152506040611b6284828501611801565b6040830152506060611b7684828501611801565b6060830152506080611b8a84828501611d43565b60808301525060a0611b9e84828501611d43565b60a08301525060c0611bb284828501611d43565b60c08301525060e0611bc684828501611d43565b60e083015250610100611bdb84828501611d43565b61010083015250610120611bf184828501611d43565b6101208301525061014082013567ffffffffffffffff811115611c1357600080fd5b611c1f84828501611a3f565b6101408301525061016082013567ffffffffffffffff811115611c4157600080fd5b611c4d84828501611a3f565b6101608301525061018082013567ffffffffffffffff811115611c6f57600080fd5b611c7b84828501611a3f565b610180830152506101a082013567ffffffffffffffff811115611c9d57600080fd5b611ca984828501611a3f565b6101a08301525092915050565b600060408284031215611cc857600080fd5b611cd26040612ce9565b90506000611ce08484611a34565b8252506020611cf184848301611d38565b60208301525092915050565b600060408284031215611d0f57600080fd5b611d196040612ce9565b90506000611d278484611a34565b8252506020611cf184848301611d4e565b805161022681612e4c565b803561022681612e55565b805161022681612e55565b803561022681612e5e565b60008060408385031215611d7757600080fd5b6000611d838585611801565b9250506020611d9485828601611d43565b9150509250929050565b600080600060608486031215611db357600080fd5b835167ffffffffffffffff811115611dca57600080fd5b611dd686828701611817565b935050602084015167ffffffffffffffff811115611df357600080fd5b611dff86828701611950565b925050604084015167ffffffffffffffff811115611e1c57600080fd5b611e28868287016119c2565b9150509250925092565b60008060008060808587031215611e4857600080fd5b843567ffffffffffffffff811115611e5f57600080fd5b611e6b878288016118f3565b945050602085013567ffffffffffffffff811115611e8857600080fd5b611e9487828801611896565b9350506040611ea587828801611d43565b9250506060611eb687828801611d43565b91505092959194509250565b600060208284031215611ed457600080fd5b600061171a8484611a34565b600060a08284031215611ef257600080fd5b600061171a8484611a8e565b600060208284031215611f1057600080fd5b600061171a8484611d4e565b60008060408385031215611f2f57600080fd5b6000611f3b8585611d59565b9250506020611d9485828601611801565b600080600060608486031215611f6157600080fd5b6000611f6d8686611d59565b9350506020611f7e86828701611801565b9250506040611e2886828701611d43565b60006102bf83836121ff565b60006102bf838361285e565b6000611fb3838361294a565b505060400190565b60006102bf838361296e565b6000611fd38383612aa0565b505060200190565b611fe481612d75565b82525050565b6000611ff582612d62565b611fff8185612d6c565b93508360208202850161201185612d59565b8060005b8581101561204b578484038952815161202e8582611f8f565b945061203983612d59565b60209a909a0199925050600101612015565b5091979650505050505050565b600061206382612d62565b61206d8185612d6c565b93508360208202850161207f85612d59565b8060005b8581101561204b578484038952815161209c8582611f9b565b94506120a783612d59565b60209a909a0199925050600101612083565b60006120c482612d62565b6120ce8185612d6c565b93506120d983612d59565b8060005b838110156121075781516120f18882611fa7565b97506120fc83612d59565b9250506001016120dd565b509495945050505050565b600061211d82612d62565b6121278185612d6c565b93508360208202850161213985612d59565b8060005b8581101561204b57848403895281516121568582611fbb565b945061216183612d59565b60209a909a019992505060010161213d565b61217c81612d66565b612186818461058c565b925061219182612d5f565b8060005b838110156121bf5781516121a98782611fc7565b96506121b483612d59565b925050600101612195565b505050505050565b611fe481612d80565b60006121db82612d62565b6121e5818561058c565b93506121f5818560208601612de2565b9290920192915050565b600061220a82612d62565b6122148185612d6c565b9350612224818560208601612de2565b61222d81612e0e565b9093019392505050565b611fe481612dc0565b611fe481612dcb565b6000612256603683612d6c565b7f4174206c65617374206f6e65206f7264657220616e64206d61746368696e672081527539b4b3b730ba3ab9329034b9903932b8bab4b932b21760511b602082015260400192915050565b60006122ae604383612d6c565b7f537570706f7274656420436f6d706f756e642063546f6b656e2061646472657381527f73206e6f7420666f756e6420666f72207468697320746f6b656e20616464726560208201526239b99760e91b604082015260600192915050565b6000612319602283612d6c565b7f417070726f76616c206f6620746f6b656e7320746f2064596458206661696c65815261321760f11b602082015260400192915050565b600061235d604c83612d6c565b7f4572726f722063616c6c696e672072656465656d556e6465726c79696e67206f81527f6e20436f6d706f756e642063546f6b656e3a206572726f7220636f6465206e6f60208201526b07420657175616c20746f20360a41b604082015260600192915050565b60006123d1601b83612d6c565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000815260200192915050565b600061240a601783612d6c565b7f4465706f73697420746f2064596458206661696c65642e000000000000000000815260200192915050565b6000612443602083612d6c565b7f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815260200192915050565b600061247c602683612d6c565b7f417070726f76616c206f6620746f6b656e7320746f20436f6d706f756e64206681526530b4b632b21760d11b602082015260400192915050565b60006124c4601b83612d6c565b7f4465706f73697420746f20436f6d706f756e64206661696c65642e0000000000815260200192915050565b60006124fd601c83612d6c565b7f5769746864726177616c2066726f6d2064596458206661696c65642e00000000815260200192915050565b6000612536602083612d6c565b7f417070726f76616c206f6620746f6b656e7320746f203078206661696c65642e815260200192915050565b600061256f603783612d6c565b7f537570706f727465642064596458206d61726b6574206e6f7420666f756e642081527f666f72207468697320746f6b656e20616464726573732e000000000000000000602082015260400192915050565b60006125ce602183612d6c565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f8152607760f81b602082015260400192915050565b6000612611603183612d6c565b7f4d69736d61746368206265747765656e206e756d626572206f66206f72646572815270399030b7321039b4b3b730ba3ab932b99760791b602082015260400192915050565b6000612664604283612d6c565b7f4572726f722063616c6c696e672072656465656d206f6e20436f6d706f756e6481527f2063546f6b656e3a206572726f7220636f6465206e6f7420657175616c20746f602082015261020360f41b604082015260600192915050565b60006126ce604083612d6c565b7f4572726f722063616c6c696e67206d696e74206f6e20436f6d706f756e64206381527f546f6b656e3a206572726f7220636f6465206e6f7420657175616c20746f2030602082015260400192915050565b600061272d602f83612d6c565b7f54616b65722061737365742066696c6c20616d6f756e74206d7573742062652081526e33b932b0ba32b9103a3430b710181760891b602082015260400192915050565b600061277e602a83612d6c565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e8152691bdd081cdd58d8d9595960b21b602082015260400192915050565b60006127ca602083612d6c565b7f5769746864726177616c2066726f6d20436f6d706f756e64206661696c65642e815260200192915050565b6000612803601383612d6c565b7224b73b30b634b2103837b7b61034b73232bc1760691b815260200192915050565b6000612832601f83612d6c565b7f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400815260200192915050565b80516000906101608401906128738582612237565b5060208301516128866020860182612aa0565b5060408301516128996040860182612900565b5060608301516128ac60c0860182612aa0565b5060808301516128bf60e0860182612aa0565b5060a08301516128d3610100860182611fdb565b5060c08301516128e7610120860182612aa0565b5060e08301518482036101408601526103cd82826121ff565b8051608083019061291184826121c7565b5060208201516129246020850182612240565b5060408201516129376040850182612240565b5060608201516114676060850182612aa0565b8051604083019061295b8482611fdb565b5060208201516114676020850182612aa0565b80516000906101c08401906129838582611fdb565b5060208301516129966020860182611fdb565b5060408301516129a96040860182611fdb565b5060608301516129bc6060860182611fdb565b5060808301516129cf6080860182612aa0565b5060a08301516129e260a0860182612aa0565b5060c08301516129f560c0860182612aa0565b5060e0830151612a0860e0860182612aa0565b50610100830151612a1d610100860182612aa0565b50610120830151612a32610120860182612aa0565b50610140830151848203610140860152612a4c82826121ff565b915050610160830151848203610160860152612a6882826121ff565b915050610180830151848203610180860152612a8482826121ff565b9150506101a08301518482036101a08601526103cd82826121ff565b611fe481612d5f565b60006102bf82846121d0565b602081016102268284611fdb565b60408101612ad18285611fdb565b6102bf6020830184611fdb565b60408101612aec8285611fdb565b6102bf6020830184612aa0565b60408082528101612b0a81856120b9565b9050818103602083015261171a8184612058565b60608082528101612b2f8186612112565b9050612b3e6020830185612aa0565b81810360408301526103cd8184611fea565b604081016102268284612173565b6020810161022682846121c7565b602080825281016102bf81846121ff565b6020808252810161022681612249565b60208082528101610226816122a1565b602080825281016102268161230c565b6020808252810161022681612350565b60208082528101610226816123c4565b60208082528101610226816123fd565b6020808252810161022681612436565b602080825281016102268161246f565b60208082528101610226816124b7565b60208082528101610226816124f0565b6020808252810161022681612529565b6020808252810161022681612562565b60208082528101610226816125c1565b6020808252810161022681612604565b6020808252810161022681612657565b60208082528101610226816126c1565b6020808252810161022681612720565b6020808252810161022681612771565b60208082528101610226816127bd565b60208082528101610226816127f6565b6020808252810161022681612825565b60408101610226828461294a565b602081016102268284612aa0565b60405181810167ffffffffffffffff81118282101715612d0857600080fd5b604052919050565b600067ffffffffffffffff821115612d2757600080fd5b5060209081020190565b600067ffffffffffffffff821115612d4857600080fd5b506020601f91909101601f19160190565b60200190565b90565b5190565b50600290565b90815260200190565b600061022682612dae565b151590565b8061058c81612e18565b8061058c81612e25565b6fffffffffffffffffffffffffffffffff1690565b6001600160a01b031690565b60ff1690565b600061022682612d85565b600061022682612d8f565b82818337506000910152565b60005b83811015612dfd578181015183820152602001612de5565b838111156114675750506000910152565b601f01601f191690565b60098110612e2257fe5b50565b60028110612e2257fe5b612e3881612d75565b8114612e2257600080fd5b612e3881612d80565b612e3881612d99565b612e3881612d5f565b612e3881612dba56fe5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa365627a7a723158200b0029607c60ddb7a8d052667dca4d1b9c037bf82f216675c01a20ec7a1138f66c6578706572696d656e74616cf564736f6c63430005110040",
  "deployedBytecode": "",
  "sourceMap": "1129:5135:14:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24",
  "deployedSourceMap": "1129:5135:14:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4343:400;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4343:400:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5023:225;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5023:225:14;;;;;;;;:::i;2958:408::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2958:408:14;;;;;;;;:::i;2226:430::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2226:430:14;;;;;;;;:::i;1595:302::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1595:302:14;;;;;;;;:::i;:::-;;;;;;;;3671:423;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3671:423:14;;;;;;;;:::i;5946:315::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5946:315:14;;;;;;;;:::i;:::-;;;;;;;;4343:400;4425:4;4446:9;;;4442:271;;4465:45;4496:13;4465:30;:45::i;:::-;4457:86;;;;-1:-1:-1;;;4457:86:14;;;;;;;;;;;;;;;;;4442:271;;;4563:4;:9;;4571:1;4563:9;4559:154;;;4582:49;4617:13;4582:34;:49::i;:::-;4574:94;;;;-1:-1:-1;;;4574:94:14;;;;;;;;4559:154;4684:29;;-1:-1:-1;;;4684:29:14;;;;;;;;4559:154;-1:-1:-1;4731:4:14;4343:400;;;;;:::o;5023:225::-;5101:4;5126:55;5159:13;5174:6;5126:32;:55::i;:::-;5118:100;;;;-1:-1:-1;;;5118:100:14;;;;;;;;2958:408;3050:4;3071:9;;;3067:269;;3090:49;3117:13;3132:6;3090:26;:49::i;:::-;3082:85;;;;-1:-1:-1;;;3082:85:14;;;;;;;;;3067:269;;;3187:4;:9;;3195:1;3187:9;3183:153;;;3206:53;3237:13;3252:6;3206:30;:53::i;:::-;3198:93;;;;-1:-1:-1;;;3198:93:14;;;;;;;;3183:153;-1:-1:-1;3354:4:14;2958:408;;;;;;:::o;2226:430::-;2318:4;2339:9;;;2335:291;;2358:49;2385:13;2400:6;2358:26;:49::i;:::-;2350:96;;;;-1:-1:-1;;;2350:96:14;;;;;;;;2335:291;2466:4;:9;;2474:1;2466:9;2462:164;;;2485:53;2516:13;2531:6;2485:30;:53::i;:::-;2477:104;;;;-1:-1:-1;;;2477:104:14;;;;;;;;1595:302;1672:7;1696:9;;;1692:197;;1714:44;1744:13;1714:29;:44::i;:::-;1707:51;;;;1692:197;1778:4;:9;;1786:1;1778:9;1774:115;;;1796:48;1830:13;1796:33;:48::i;3671:423::-;3766:4;3787:9;;;3783:281;;3806:50;3834:13;3849:6;3806:27;:50::i;:::-;3798:91;;;;-1:-1:-1;;;3798:91:14;;;;;;;;3783:281;3909:4;:9;;3917:1;3909:9;3905:159;;;3928:54;3960:13;3975:6;3928:31;:54::i;:::-;3920:99;;;;-1:-1:-1;;;3920:99:14;;;;;;;;5946:315;6110:17;;:::i;:::-;6147:106;6199:6;6207:10;6219:20;6241:11;6147:51;:106::i;:::-;6140:113;5946:315;-1:-1:-1;;;;;5946:315:14:o;6092:988:17:-;6154:4;6171:16;6190:26;6202:13;6190:11;:26::i;:::-;6171:45;;6295:27;;:::i;:::-;-1:-1:-1;6325:30:17;;;;;;;;6346:4;6325:30;;-1:-1:-1;6325:30:17;;;;6399:21;;6418:1;6399:21;;;;;;;;;6325:30;;6366;;6399:21;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6366:54;;6445:7;6431:8;6440:1;6431:11;;;;;;;;;;;;;:21;;;;6465:36;;:::i;:::-;6504:84;;;;;;;;;6522:4;6504:84;;;;;;;;;;;6557:27;6504:84;;;;6586:1;6504:84;;;6465:123;;6599:22;6634:32;;:::i;:::-;-1:-1:-1;6669:220:17;;;;;;;;6702:27;6669:220;;;-1:-1:-1;6669:220:17;;;;;;;;;;;;;;;;;;;;;;;;;6833:4;6669:220;;;;;;;;;;;;;;;;;6940:27;;;;;;;;;;;6669:220;;6940:27;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6902:65;;6991:6;6978:7;6986:1;6978:10;;;;;;;;;;;;;;;;;:19;7010:38;;-1:-1:-1;;;7010:38:17;;1203:42;;7010:19;;:38;;7030:8;;7040:7;;7010:38;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7010:38:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7010:38:17;;;;7068:4;7061:11;;;;;;;;;6092:988;;;;:::o;4660:502:16:-;4722:4;4739:13;4762:32;4780:13;4762:17;:32::i;:::-;4739:56;;4806:15;4824:6;-1:-1:-1;;;;;4824:16:16;;4849:4;4824:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4824:31:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4824:31:16;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4824:31:16;;;;;;;;;4806:49;;4881:1;4870:7;:12;4866:30;;4891:5;4884:12;;;;;;4866:30;5003:22;;-1:-1:-1;;;5003:22:16;;4980:20;;-1:-1:-1;;;;;5003:13:16;;;;;:22;;5017:7;;5003:22;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5003:22:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5003:22:16;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5003:22:16;;;;;;;;;4980:45;-1:-1:-1;5044:17:16;;5036:96;;;;-1:-1:-1;;;5036:96:16;;;;;;;;;-1:-1:-1;5150:4:16;;4660:502;-1:-1:-1;;;;4660:502:16:o;1674:459:15:-;1832:52;;-1:-1:-1;;;1832:52:15;;1748:4;;1787:13;;1748:4;;-1:-1:-1;;;;;1832:15:15;;;;;:52;;1856:4;;1345:42;;1832:52;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1832:52:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1832:52:15;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1832:52:15;;;;;;;;;1812:72;;1908:9;1899:6;:18;1895:208;;;1919:72;1345:42;1969:21;:9;1983:6;1969:21;:13;:21;:::i;:::-;-1:-1:-1;;;;;1919:27:15;;;:72;;:27;:72;:::i;:::-;1895:208;;;2020:9;2011:6;:18;2007:96;;;2031:72;1345:42;2081:21;:6;2092:9;2081:21;:10;:21;:::i;:::-;-1:-1:-1;;;;;2031:27:15;;;:72;;:27;:72;:::i;3609:1003:17:-;3683:4;3700:16;3719:26;3731:13;3719:11;:26::i;:::-;3700:45;;3824:27;;:::i;:::-;-1:-1:-1;3854:30:17;;;;;;;;3875:4;3854:30;;-1:-1:-1;3854:30:17;;;;3928:21;;3947:1;3928:21;;;;;;;;;3854:30;;3895;;3928:21;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3895:54;;3974:7;3960:8;3969:1;3960:11;;;;;;;;;;;;;:21;;;;3994:36;;:::i;:::-;4033:88;;;;;;;;;4051:4;4033:88;;;;;-1:-1:-1;4033:88:17;;;;4086:26;4033:88;;;;;;;3994:127;-1:-1:-1;4132:22:17;4167:32;;:::i;:::-;-1:-1:-1;4202:219:17;;;;;;;;-1:-1:-1;4202:219:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;4365:4;4202:219;;;;;;;;;;;;;;;;;4472:27;;4497:1;4472:27;;;;;;;;;4202:219;;;;4472:27;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4434:65;;4523:6;4510:7;4518:1;4510:10;;;;;;;;;;;;;;;;;:19;4542:38;;-1:-1:-1;;;4542:38:17;;1203:42;;4542:19;;:38;;4562:8;;4572:7;;4542:38;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4542:38:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;4600:4:17;;3609:1003;-1:-1:-1;;;;;;;;;;;;;3609:1003:17:o;3487:331:16:-;3561:4;3578:13;3601:32;3619:13;3601:17;:32::i;:::-;3578:56;;3645:18;3666:6;-1:-1:-1;;;;;3666:11:16;;3678:6;3666:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3666:19:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3666:19:16;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3666:19:16;;;;;;;;;3645:40;-1:-1:-1;3704:15:16;;3696:92;;;;-1:-1:-1;;;3696:92:16;;;;;;;;2826:459:17;2984:52;;-1:-1:-1;;;2984:52:17;;2900:4;;2939:13;;2900:4;;-1:-1:-1;;;;;2984:15:17;;;;;:52;;3008:4;;1203:42;;2984:52;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2984:52:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2984:52:17;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2984:52:17;;;;;;;;;2964:72;;3060:9;3051:6;:18;3047:208;;;3071:72;1203:42;3121:21;:9;3135:6;3121:21;:13;:21;:::i;3047:208::-;3172:9;3163:6;:18;3159:96;;;3183:72;1203:42;3233:21;:6;3244:9;3233:21;:10;:21;:::i;2646:509:16:-;2720:4;2737:22;2762:32;2780:13;2762:17;:32::i;:::-;2872:46;;-1:-1:-1;;;2872:46:16;;2737:57;;-1:-1:-1;2827:13:16;;2805:12;;-1:-1:-1;;;;;2872:15:16;;;;;:46;;2896:4;;2737:57;;2872:46;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2872:46:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2872:46:16;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2872:46:16;;;;;;;;;2852:66;;2942:9;2933:6;:18;2929:196;;;2953:66;2981:14;2997:21;:9;3011:6;2997:21;:13;:21;:::i;2953:66::-;2929:196;;;3048:9;3039:6;:18;3035:90;;;3059:66;3087:14;3103:21;:6;3114:9;3103:21;:10;:21;:::i;3059:66::-;-1:-1:-1;3143:4:16;;2646:509;-1:-1:-1;;;;;2646:509:16:o;2041:497:17:-;2107:7;2127:16;2146:26;2158:13;2146:11;:26::i;:::-;2127:45;;2251:27;;:::i;:::-;-1:-1:-1;2281:30:17;;;;;;;;2302:4;2281:30;;-1:-1:-1;2281:30:17;;;;2451:39;;-1:-1:-1;;;2451:39:17;;2324:23;;;;;;1203:42;;2451:30;;:39;;2281:30;;2451:39;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2451:39:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2451:39:17;;;;;;39:16:-1;36:1;17:17;2:54;101:4;2451:39:17;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;2451:39:17;;;;;;;;;2510:14;;2428:62;;-1:-1:-1;2428:62:17;;-1:-1:-1;2428:62:17;-1:-1:-1;2428:62:17;;2515:8;;2510:14;;;;;;;;;;;;:20;;;2503:27;;;;;;;2041:497;;;:::o;2079:271:16:-;2140:7;2160:13;2183:32;2201:13;2183:17;:32::i;:::-;2160:56;;2227:6;-1:-1:-1;;;;;2227:21:16;;:23;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2227:23:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2227:23:16;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2227:23:16;;;;;;;;;;2268:74;2337:4;2268:64;2304:6;-1:-1:-1;;;;;2304:25:16;;:27;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2304:27:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2304:27:16;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2304:27:16;;;;;;;;;2268:31;;-1:-1:-1;;;2268:31:16;;-1:-1:-1;;;;;2268:16:16;;;;;:31;;2293:4;;2268:31;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2268:31:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2268:31:16;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2268:31:16;;;;;;;;;:35;:64;:35;:64;:::i;:::-;:68;:74;:68;:74;:::i;4877:1006:17:-;4952:4;4969:16;4988:26;5000:13;4988:11;:26::i;:::-;4969:45;;5093:27;;:::i;:::-;-1:-1:-1;5123:30:17;;;;;;;;5144:4;5123:30;;-1:-1:-1;5123:30:17;;;;5197:21;;5216:1;5197:21;;;;;;;;;5123:30;;5164;;5197:21;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5164:54;;5243:7;5229:8;5238:1;5229:11;;;;;;;;;;;;;:21;;;;5263:36;;:::i;:::-;5302:89;;;;;;;;;-1:-1:-1;5302:89:17;;;;;;;;;;;5356:26;5302:89;;;;;;;5263:128;-1:-1:-1;5402:22:17;5437:32;;:::i;:::-;-1:-1:-1;5472:220:17;;;;;;;;5505:27;5472:220;;;-1:-1:-1;5472:220:17;;;;;;;;;;;;;;;;;;;;;;;;;5636:4;5472:220;;;;;;;;;;;;;;;;;5743:27;;;;;;;;;;;5472:220;;5743:27;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5705:65;;5794:6;5781:7;5789:1;5781:10;;;;;;;4087:360:16;4162:4;4179:13;4202:32;4220:13;4202:17;:32::i;:::-;4179:56;;4246:20;4269:6;-1:-1:-1;;;;;4269:23:16;;4293:6;4269:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4269:31:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4269:31:16;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4269:31:16;;;;;;;;;4246:54;-1:-1:-1;4319:17:16;;4311:106;;;;-1:-1:-1;;;4311:106:16;;;;;;;;2651:734:15;2815:17;;:::i;:::-;2869:1;2853:6;:13;:17;2845:84;;;;-1:-1:-1;;;2845:84:15;;;;;;;;;2965:10;:17;2948:6;:13;:34;2940:96;;;;-1:-1:-1;;;2940:96:15;;;;;;;;;3078:1;3055:20;:24;3047:84;;;;-1:-1:-1;;;3047:84:15;;;;;;;;;3142:45;;:::i;:::-;3190:97;;-1:-1:-1;;;3190:97:15;;1174:42;;3190:36;;3233:11;;3190:97;;3246:6;;3254:20;;3276:10;;3190:97;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3190:97:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3190:97:15;;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3190:97:15;;;;;;;;;3298:79;;;;;;;;;3306:34;;;;;3298:79;;3342:34;;3298:79;;;;;;;;2651:734;-1:-1:-1;;;;;;2651:734:15:o;1503:347:17:-;1569:7;1610:42;-1:-1:-1;;;;;1593:59:17;;;1589:73;;;-1:-1:-1;1661:1:17;1654:8;;1589:73;1702:42;-1:-1:-1;;;;;1685:59:17;;;1681:161;;;-1:-1:-1;1753:1:17;1746:8;;1681:161;1777:65;;-1:-1:-1;;;1777:65:17;;;;;;;;1170:606:16;1242:7;1283:42;-1:-1:-1;;;;;1266:59:16;;;1262:114;;;-1:-1:-1;1334:42:16;1327:49;;1262:114;1423:42;-1:-1:-1;;;;;1406:59:16;;;1402:114;;;-1:-1:-1;1474:42:16;1467:49;;1402:114;1565:42;-1:-1:-1;;;;;1548:59:16;;;1544:224;;;-1:-1:-1;1616:42:16;1609:49;;1544:224;1691:77;;-1:-1:-1;;;1691:77:16;;;;;;;;1274:134:42;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;1956:327:46:-;2052:20;2075:95;2119:5;2075:95;;;;;;;;;;;;;;;;;:39;;-1:-1:-1;;;2075:39:46;;-1:-1:-1;;;;;2075:15:46;;;;;:39;;2099:4;;2106:7;;2075:39;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2075:39:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2075:39:46;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2075:39:46;;;;;;;;;:43;:95;;:43;:95;:::i;:::-;2206:69;;2052:118;;-1:-1:-1;2180:96:46;;2199:5;;-1:-1:-1;;;2229:22:46;2206:69;;2253:7;;2052:118;;2206:69;;;;;;;;-1:-1:-1;;26:21;;;22:32;6:49;;2206:69:46;;;49:4:-1;25:18;;61:17;;-1:-1;;;;;182:15;-1:-1;;;;;;2206:69:46;;;179:29:-1;;;;160:49;;;2180:18:46;:96::i;:::-;1956:327;;;;:::o;1668:282::-;1764:20;1787:50;1831:5;1787;-1:-1:-1;;;;;1787:15:46;;1811:4;1818:7;1787:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1787:39:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1787:39:46;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1787:39:46;;;;;;;;;:43;:50;:43;:50;:::i;2159:459:42:-;2217:7;2458:6;2454:45;;-1:-1:-1;2487:1:42;2480:8;;2454:45;2521:5;;;2525:1;2521;:5;:1;2544:5;;;;;:10;2536:56;;;;-1:-1:-1;;;2536:56:42;;;;;;;;3073:130;3131:7;3157:39;3161:1;3164;3157:39;;;;;;;;;;;;;;;;;:3;:39::i;1732:187::-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:42;;;;;;;;;;-1:-1:-1;;;1888:5:42;;;1732:187::o;2666:1095:46:-;3261:27;3269:5;-1:-1:-1;;;;;3261:25:46;;:27::i;:::-;3253:71;;;;-1:-1:-1;;;3253:71:46;;;;;;;;;3395:12;3409:23;3444:5;-1:-1:-1;;;;;3436:19:46;3456:4;3436:25;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3394:67:46;;;;3479:7;3471:52;;;;-1:-1:-1;;;3471:52:46;;;;;;;;;3538:17;;:21;3534:221;;3678:10;3667:30;;;;;;;;;;;;;;3659:85;;;;-1:-1:-1;;;3659:85:46;;;;;;;;834:176:42;892:7;923:5;;;946:6;;;;938:46;;;;-1:-1:-1;;;938:46:42;;;;;;;;3718:338;3804:7;3904:12;3897:5;3889:28;;;;-1:-1:-1;;;3889:28:42;;;;;;;;;;;3927:9;3943:1;3939;:5;;;;;;;3718:338;-1:-1:-1;;;;;3718:338:42:o;686:610:47:-;746:4;1207:20;;1052:66;1246:23;;;;;;:42;;-1:-1:-1;1273:15:47;;;1246:42;1238:51;686:610;-1:-1:-1;;;;686:610:47:o;1129:5135:14:-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;-1:-1;1129:5135:14;;;-1:-1:-1;;1129:5135:14:o;:::-;;;;;;;;;;-1:-1:-1;1129:5135:14;;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;1129:5135:14;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;1129:5135:14;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1129:5135:14;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;72:20;;97:33;72:20;97:33;;142:134;220:13;;238:33;220:13;238:33;;301:722;;429:3;422:4;414:6;410:17;406:27;396:2;;447:1;444;437:12;396:2;477:6;471:13;499:80;514:64;571:6;514:64;;;499:80;;;490:89;;596:5;621:6;614:5;607:21;651:4;643:6;639:17;629:27;;673:4;668:3;664:14;657:21;;726:6;773:3;765:4;757:6;753:17;748:3;744:27;741:36;738:2;;;790:1;787;780:12;738:2;815:1;800:217;825:6;822:1;819:13;800:217;;;883:3;905:48;949:3;937:10;905:48;;;893:61;;-1:-1;977:4;968:14;;;;996;;;;;847:1;840:9;800:217;;;804:14;389:634;;;;;;;;1047:693;;1169:3;1162:4;1154:6;1150:17;1146:27;1136:2;;1187:1;1184;1177:12;1136:2;1224:6;1211:20;1246:85;1261:69;1323:6;1261:69;;1246:85;1359:21;;;1403:4;1391:17;;;;1237:94;;-1:-1;1416:14;;1391:17;1511:1;1496:238;1521:6;1518:1;1515:13;1496:238;;;1604:3;1591:17;1583:6;1579:30;1628:42;1666:3;1654:10;1628:42;;;1616:55;;-1:-1;1694:4;1685:14;;;;1713;;;;;1543:1;1536:9;1496:238;;1780:735;;1916:3;1909:4;1901:6;1897:17;1893:27;1883:2;;1934:1;1931;1924:12;1883:2;1971:6;1958:20;1993:99;2008:83;2084:6;2008:83;;1993:99;2120:21;;;2164:4;2152:17;;;;1984:108;;-1:-1;2177:14;;2152:17;2272:1;2257:252;2282:6;2279:1;2276:13;2257:252;;;2365:3;2352:17;2344:6;2340:30;2389:56;2441:3;2429:10;2389:56;;;2377:69;;-1:-1;2469:4;2460:14;;;;2488;;;;;2304:1;2297:9;2257:252;;2550:773;;2695:3;2688:4;2680:6;2676:17;2672:27;2662:2;;2713:1;2710;2703:12;2662:2;2743:6;2737:13;2765:97;2780:81;2854:6;2780:81;;2765:97;2756:106;;2879:5;2904:6;2897:5;2890:21;2934:4;2926:6;2922:17;2912:27;;2956:4;2951:3;2947:14;2940:21;;3009:6;3056:3;3048:4;3040:6;3036:17;3031:3;3027:27;3024:36;3021:2;;;3073:1;3070;3063:12;3021:2;3098:1;3083:234;3108:6;3105:1;3102:13;3083:234;;;3166:3;3188:65;3249:3;3237:10;3188:65;;;3176:78;;-1:-1;3277:4;3268:14;;;;3305:4;3296:14;;;;;3130:1;3123:9;3083:234;;3358:773;;3503:3;3496:4;3488:6;3484:17;3480:27;3470:2;;3521:1;3518;3511:12;3470:2;3551:6;3545:13;3573:97;3588:81;3662:6;3588:81;;3573:97;3564:106;;3687:5;3712:6;3705:5;3698:21;3742:4;3734:6;3730:17;3720:27;;3764:4;3759:3;3755:14;3748:21;;3817:6;3864:3;3856:4;3848:6;3844:17;3839:3;3835:27;3832:36;3829:2;;;3881:1;3878;3871:12;3829:2;3906:1;3891:234;3916:6;3913:1;3910:13;3891:234;;;3974:3;3996:65;4057:3;4045:10;3996:65;;;3984:78;;-1:-1;4085:4;4076:14;;;;4113:4;4104:14;;;;;3938:1;3931:9;3891:234;;4139:128;4214:13;;4232:30;4214:13;4232:30;;4275:432;;4372:3;4365:4;4357:6;4353:17;4349:27;4339:2;;4390:1;4387;4380:12;4339:2;4427:6;4414:20;4449:60;4464:44;4501:6;4464:44;;4449:60;4440:69;;4529:6;4522:5;4515:21;4565:4;4557:6;4553:17;4598:4;4591:5;4587:16;4633:3;4624:6;4619:3;4615:16;4612:25;4609:2;;;4650:1;4647;4640:12;4609:2;4660:41;4694:6;4689:3;4684;4660:41;;;4332:375;;;;;;;;4755:1033;;4884:4;4872:9;4867:3;4863:19;4859:30;4856:2;;;4902:1;4899;4892:12;4856:2;4920:20;4935:4;4920:20;;;4911:29;-1:-1;5008:1;5040:60;5096:3;5076:9;5040:60;;;5015:86;;-1:-1;5180:2;5213:60;5269:3;5245:22;;;5213:60;;;5206:4;5199:5;5195:16;5188:86;5122:163;5343:2;5376:60;5432:3;5423:6;5412:9;5408:22;5376:60;;;5369:4;5362:5;5358:16;5351:86;5295:153;5506:2;5539:60;5595:3;5586:6;5575:9;5571:22;5539:60;;;5532:4;5525:5;5521:16;5514:86;5458:153;5672:3;5706:60;5762:3;5753:6;5742:9;5738:22;5706:60;;;5699:4;5692:5;5688:16;5681:86;5621:157;4850:938;;;;;5823:2714;;5931:6;5919:9;5914:3;5910:19;5906:32;5903:2;;;5951:1;5948;5941:12;5903:2;5969:22;5984:6;5969:22;;;5960:31;-1:-1;6049:1;6081:49;6126:3;6106:9;6081:49;;;6056:75;;-1:-1;6200:2;6233:49;6278:3;6254:22;;;6233:49;;;6226:4;6219:5;6215:16;6208:75;6152:142;6359:2;6392:49;6437:3;6428:6;6417:9;6413:22;6392:49;;;6385:4;6378:5;6374:16;6367:75;6304:149;6512:2;6545:49;6590:3;6581:6;6570:9;6566:22;6545:49;;;6538:4;6531:5;6527:16;6520:75;6463:143;6668:3;6702:49;6747:3;6738:6;6727:9;6723:22;6702:49;;;6695:4;6688:5;6684:16;6677:75;6616:147;6825:3;6859:49;6904:3;6895:6;6884:9;6880:22;6859:49;;;6852:4;6845:5;6841:16;6834:75;6773:147;6974:3;7008:49;7053:3;7044:6;7033:9;7029:22;7008:49;;;7001:4;6994:5;6990:16;6983:75;6930:139;7123:3;7157:49;7202:3;7193:6;7182:9;7178:22;7157:49;;;7150:4;7143:5;7139:16;7132:75;7079:139;7285:3;7321:49;7366:3;7357:6;7346:9;7342:22;7321:49;;;7312:6;7305:5;7301:18;7294:77;7228:154;7432:3;7468:49;7513:3;7504:6;7493:9;7489:22;7468:49;;;7459:6;7452:5;7448:18;7441:77;7392:137;7617:3;7606:9;7602:19;7589:33;7642:18;7634:6;7631:30;7628:2;;;7674:1;7671;7664:12;7628:2;7711:54;7761:3;7752:6;7741:9;7737:22;7711:54;;;7702:6;7695:5;7691:18;7684:82;7539:238;7865:3;7854:9;7850:19;7837:33;7890:18;7882:6;7879:30;7876:2;;;7922:1;7919;7912:12;7876:2;7959:54;8009:3;8000:6;7989:9;7985:22;7959:54;;;7950:6;7943:5;7939:18;7932:82;7787:238;8116:3;8105:9;8101:19;8088:33;8141:18;8133:6;8130:30;8127:2;;;8173:1;8170;8163:12;8127:2;8210:54;8260:3;8251:6;8240:9;8236:22;8210:54;;;8201:6;8194:5;8190:18;8183:82;8035:241;8367:3;8356:9;8352:19;8339:33;8392:18;8384:6;8381:30;8378:2;;;8424:1;8421;8414:12;8378:2;8461:54;8511:3;8502:6;8491:9;8487:22;8461:54;;;8452:6;8445:5;8441:18;8434:82;8286:241;5897:2640;;;;;8567:490;;8684:4;8672:9;8667:3;8663:19;8659:30;8656:2;;;8702:1;8699;8692:12;8656:2;8720:20;8735:4;8720:20;;;8711:29;-1:-1;8790:1;8822:57;8875:3;8855:9;8822:57;;;8797:83;;-1:-1;8942:2;8975:60;9031:3;9007:22;;;8975:60;;;8968:4;8961:5;8957:16;8950:86;8901:146;8650:407;;;;;9087:490;;9204:4;9192:9;9187:3;9183:19;9179:30;9176:2;;;9222:1;9219;9212:12;9176:2;9240:20;9255:4;9240:20;;;9231:29;-1:-1;9310:1;9342:57;9395:3;9375:9;9342:57;;;9317:83;;-1:-1;9462:2;9495:60;9551:3;9527:22;;;9495:60;;9584:134;9662:13;;9680:33;9662:13;9680:33;;9725:130;9792:20;;9817:33;9792:20;9817:33;;9862:134;9940:13;;9958:33;9940:13;9958:33;;10003:126;10068:20;;10093:31;10068:20;10093:31;;10136:366;;;10257:2;10245:9;10236:7;10232:23;10228:32;10225:2;;;10273:1;10270;10263:12;10225:2;10308:1;10325:53;10370:7;10350:9;10325:53;;;10315:63;;10287:97;10415:2;10433:53;10478:7;10469:6;10458:9;10454:22;10433:53;;;10423:63;;10394:98;10219:283;;;;;;10509:990;;;;10767:2;10755:9;10746:7;10742:23;10738:32;10735:2;;;10783:1;10780;10773:12;10735:2;10818:24;;10862:18;10851:30;;10848:2;;;10894:1;10891;10884:12;10848:2;10914:89;10995:7;10986:6;10975:9;10971:22;10914:89;;;10904:99;;10797:212;11061:2;11050:9;11046:18;11040:25;11085:18;11077:6;11074:30;11071:2;;;11117:1;11114;11107:12;11071:2;11137:106;11235:7;11226:6;11215:9;11211:22;11137:106;;;11127:116;;11019:230;11301:2;11290:9;11286:18;11280:25;11325:18;11317:6;11314:30;11311:2;;;11357:1;11354;11347:12;11311:2;11377:106;11475:7;11466:6;11455:9;11451:22;11377:106;;;11367:116;;11259:230;10729:770;;;;;;11506:937;;;;;11735:3;11723:9;11714:7;11710:23;11706:33;11703:2;;;11752:1;11749;11742:12;11703:2;11787:31;;11838:18;11827:30;;11824:2;;;11870:1;11867;11860:12;11824:2;11890:97;11979:7;11970:6;11959:9;11955:22;11890:97;;;11880:107;;11766:227;12052:2;12041:9;12037:18;12024:32;12076:18;12068:6;12065:30;12062:2;;;12108:1;12105;12098:12;12062:2;12128:83;12203:7;12194:6;12183:9;12179:22;12128:83;;;12118:93;;12003:214;12248:2;12266:53;12311:7;12302:6;12291:9;12287:22;12266:53;;;12256:63;;12227:98;12356:2;12374:53;12419:7;12410:6;12399:9;12395:22;12374:53;;;12364:63;;12335:98;11697:746;;;;;;;;12450:257;;12562:2;12550:9;12541:7;12537:23;12533:32;12530:2;;;12578:1;12575;12568:12;12530:2;12613:1;12630:61;12683:7;12663:9;12630:61;;12714:322;;12858:3;12846:9;12837:7;12833:23;12829:33;12826:2;;;12875:1;12872;12865:12;12826:2;12910:1;12927:93;13012:7;12992:9;12927:93;;13043:263;;13158:2;13146:9;13137:7;13133:23;13129:32;13126:2;;;13174:1;13171;13164:12;13126:2;13209:1;13226:64;13282:7;13262:9;13226:64;;13313:362;;;13432:2;13420:9;13411:7;13407:23;13403:32;13400:2;;;13448:1;13445;13438:12;13400:2;13483:1;13500:51;13543:7;13523:9;13500:51;;;13490:61;;13462:95;13588:2;13606:53;13651:7;13642:6;13631:9;13627:22;13606:53;;13682:487;;;;13818:2;13806:9;13797:7;13793:23;13789:32;13786:2;;;13834:1;13831;13824:12;13786:2;13869:1;13886:51;13929:7;13909:9;13886:51;;;13876:61;;13848:95;13974:2;13992:53;14037:7;14028:6;14017:9;14013:22;13992:53;;;13982:63;;13953:98;14082:2;14100:53;14145:7;14136:6;14125:9;14121:22;14100:53;;14177:177;;14288:60;14344:3;14336:6;14288:60;;14363:253;;14512:98;14606:3;14598:6;14512:98;;14625:249;;14748:86;14830:3;14822:6;14748:86;;;-1:-1;;14863:4;14854:14;;14741:133;14883:233;;15022:88;15106:3;15098:6;15022:88;;15125:189;;15220:54;15270:3;15262:6;15220:54;;;-1:-1;;15303:4;15294:14;;15213:101;15322:103;15395:24;15413:5;15395:24;;;15390:3;15383:37;15377:48;;;15579:888;;15734:59;15787:5;15734:59;;;15806:91;15890:6;15885:3;15806:91;;;15799:98;;15920:3;15962:4;15954:6;15950:17;15945:3;15941:27;15989:61;16044:5;15989:61;;;16070:7;16098:1;16083:345;16108:6;16105:1;16102:13;16083:345;;;16170:9;16164:4;16160:20;16155:3;16148:33;16215:6;16209:13;16237:74;16306:4;16291:13;16237:74;;;16229:82;;16328:65;16386:6;16328:65;;;16416:4;16407:14;;;;;16318:75;-1:-1;;16130:1;16123:9;16083:345;;;-1:-1;16441:4;;15713:754;-1:-1;;;;;;;15713:754;16542:1040;;16735:78;16807:5;16735:78;;;16826:110;16929:6;16924:3;16826:110;;;16819:117;;16959:3;17001:4;16993:6;16989:17;16984:3;16980:27;17028:80;17102:5;17028:80;;;17128:7;17156:1;17141:402;17166:6;17163:1;17160:13;17141:402;;;17228:9;17222:4;17218:20;17213:3;17206:33;17273:6;17267:13;17295:112;17402:4;17387:13;17295:112;;;17287:120;;17424:84;17501:6;17424:84;;;17531:4;17522:14;;;;;17414:94;-1:-1;;17188:1;17181:9;17141:402;;17645:834;;17826:72;17892:5;17826:72;;;17911:104;18008:6;18003:3;17911:104;;;17904:111;;18036:74;18104:5;18036:74;;;18130:7;18158:1;18143:314;18168:6;18165:1;18162:13;18143:314;;;18235:6;18229:13;18256:99;18351:3;18336:13;18256:99;;;18249:106;;18372:78;18443:6;18372:78;;;18362:88;-1:-1;;18190:1;18183:9;18143:314;;;-1:-1;18470:3;;17805:674;-1:-1;;;;;17805:674;18546:1000;;18729:73;18796:5;18729:73;;;18815:105;18913:6;18908:3;18815:105;;;18808:112;;18943:3;18985:4;18977:6;18973:17;18968:3;18964:27;19012:75;19081:5;19012:75;;;19107:7;19135:1;19120:387;19145:6;19142:1;19139:13;19120:387;;;19207:9;19201:4;19197:20;19192:3;19185:33;19252:6;19246:13;19274:102;19371:4;19356:13;19274:102;;;19266:110;;19393:79;19465:6;19393:79;;;19495:4;19486:14;;;;;19383:89;-1:-1;;19167:1;19160:9;19120:387;;19587:684;19728:52;19774:5;19728:52;;;19793:92;19878:6;19873:3;19793:92;;;19786:99;;19906:54;19954:5;19906:54;;;19980:7;20008:1;19993:266;20018:6;20015:1;20012:13;19993:266;;;20085:6;20079:13;20106:71;20173:3;20158:13;20106:71;;;20099:78;;20194:58;20245:6;20194:58;;;20184:68;-1:-1;;20040:1;20033:9;19993:266;;;19997:14;19707:564;;;;;;20279:94;20346:21;20361:5;20346:21;;20499:356;;20627:38;20659:5;20627:38;;;20677:88;20758:6;20753:3;20677:88;;;20670:95;;20770:52;20815:6;20810:3;20803:4;20796:5;20792:16;20770:52;;;20834:16;;;;;20607:248;-1:-1;;20607:248;20862:315;;20958:34;20986:5;20958:34;;;21004:60;21057:6;21052:3;21004:60;;;20997:67;;21069:52;21114:6;21109:3;21102:4;21095:5;21091:16;21069:52;;;21142:29;21164:6;21142:29;;;21133:39;;;;20938:239;-1:-1;;;20938:239;21184:142;21270:50;21314:5;21270:50;;21333:156;21426:57;21477:5;21426:57;;22008:391;;22168:67;22232:2;22227:3;22168:67;;;22268:34;22248:55;;-1:-1;;;22332:2;22323:12;;22316:46;22390:2;22381:12;;22154:245;-1:-1;;22154:245;22408:441;;22568:67;22632:2;22627:3;22568:67;;;22668:34;22648:55;;22737:34;22732:2;22723:12;;22716:56;-1:-1;;;22801:2;22792:12;;22785:27;22840:2;22831:12;;22554:295;-1:-1;;22554:295;22858:371;;23018:67;23082:2;23077:3;23018:67;;;23118:34;23098:55;;-1:-1;;;23182:2;23173:12;;23166:26;23220:2;23211:12;;23004:225;-1:-1;;23004:225;23238:450;;23398:67;23462:2;23457:3;23398:67;;;23498:34;23478:55;;23567:34;23562:2;23553:12;;23546:56;-1:-1;;;23631:2;23622:12;;23615:36;23679:2;23670:12;;23384:304;-1:-1;;23384:304;23697:327;;23857:67;23921:2;23916:3;23857:67;;;23957:29;23937:50;;24015:2;24006:12;;23843:181;-1:-1;;23843:181;24033:323;;24193:67;24257:2;24252:3;24193:67;;;24293:25;24273:46;;24347:2;24338:12;;24179:177;-1:-1;;24179:177;24365:332;;24525:67;24589:2;24584:3;24525:67;;;24625:34;24605:55;;24688:2;24679:12;;24511:186;-1:-1;;24511:186;24706:375;;24866:67;24930:2;24925:3;24866:67;;;24966:34;24946:55;;-1:-1;;;25030:2;25021:12;;25014:30;25072:2;25063:12;;24852:229;-1:-1;;24852:229;25090:327;;25250:67;25314:2;25309:3;25250:67;;;25350:29;25330:50;;25408:2;25399:12;;25236:181;-1:-1;;25236:181;25426:328;;25586:67;25650:2;25645:3;25586:67;;;25686:30;25666:51;;25745:2;25736:12;;25572:182;-1:-1;;25572:182;25763:332;;25923:67;25987:2;25982:3;25923:67;;;26023:34;26003:55;;26086:2;26077:12;;25909:186;-1:-1;;25909:186;26104:392;;26264:67;26328:2;26323:3;26264:67;;;26364:34;26344:55;;26433:25;26428:2;26419:12;;26412:47;26487:2;26478:12;;26250:246;-1:-1;;26250:246;26505:370;;26665:67;26729:2;26724:3;26665:67;;;26765:34;26745:55;;-1:-1;;;26829:2;26820:12;;26813:25;26866:2;26857:12;;26651:224;-1:-1;;26651:224;26884:386;;27044:67;27108:2;27103:3;27044:67;;;27144:34;27124:55;;-1:-1;;;27208:2;27199:12;;27192:41;27261:2;27252:12;;27030:240;-1:-1;;27030:240;27279:440;;27439:67;27503:2;27498:3;27439:67;;;27539:34;27519:55;;27608:34;27603:2;27594:12;;27587:56;-1:-1;;;27672:2;27663:12;;27656:26;27710:2;27701:12;;27425:294;-1:-1;;27425:294;27728:401;;27888:67;27952:2;27947:3;27888:67;;;27988:34;27968:55;;28057:34;28052:2;28043:12;;28036:56;28120:2;28111:12;;27874:255;-1:-1;;27874:255;28138:384;;28298:67;28362:2;28357:3;28298:67;;;28398:34;28378:55;;-1:-1;;;28462:2;28453:12;;28446:39;28513:2;28504:12;;28284:238;-1:-1;;28284:238;28531:379;;28691:67;28755:2;28750:3;28691:67;;;28791:34;28771:55;;-1:-1;;;28855:2;28846:12;;28839:34;28901:2;28892:12;;28677:233;-1:-1;;28677:233;28919:332;;29079:67;29143:2;29138:3;29079:67;;;29179:34;29159:55;;29242:2;29233:12;;29065:186;-1:-1;;29065:186;29260:319;;29420:67;29484:2;29479:3;29420:67;;;-1:-1;;;29500:42;;29570:2;29561:12;;29406:173;-1:-1;;29406:173;29588:331;;29748:67;29812:2;29807:3;29748:67;;;29848:33;29828:54;;29910:2;29901:12;;29734:185;-1:-1;;29734:185;29988:1611;30205:23;;29988:1611;;30131:6;30122:16;;;30234:76;30126:3;30205:23;30234:76;;;30153:163;30394:4;30387:5;30383:16;30377:23;30406:63;30463:4;30458:3;30454:14;30440:12;30406:63;;;30326:149;30550:4;30543:5;30539:16;30533:23;30562:117;30673:4;30668:3;30664:14;30650:12;30562:117;;;30485:200;30769:4;30762:5;30758:16;30752:23;30781:63;30838:4;30833:3;30829:14;30815:12;30781:63;;;30695:155;30936:4;30929:5;30925:16;30919:23;30948:63;31005:4;31000:3;30996:14;30982:12;30948:63;;;30860:157;31098:4;31091:5;31087:16;31081:23;31110:65;31167:6;31162:3;31158:16;31144:12;31110:65;;;31027:154;31264:4;31257:5;31253:16;31247:23;31276:65;31333:6;31328:3;31324:16;31310:12;31276:65;;;31191:156;31420:4;31413:5;31409:16;31403:23;31474:3;31468:4;31464:14;31455:6;31450:3;31446:16;31439:40;31494:67;31556:4;31542:12;31494:67;;31665:817;31868:23;;31802:4;31793:14;;;31897:57;31797:3;31868:23;31897:57;;;31822:138;32041:4;32034:5;32030:16;32024:23;32053:83;32130:4;32125:3;32121:14;32107:12;32053:83;;;31970:172;32214:4;32207:5;32203:16;32197:23;32226:80;32300:4;32295:3;32291:14;32277:12;32226:80;;;32152:160;32386:4;32379:5;32375:16;32369:23;32398:63;32455:4;32450:3;32446:14;32432:12;32398:63;;32538:473;32742:23;;32675:4;32666:14;;;32771:63;32670:3;32742:23;32771:63;;;32695:145;32915:4;32908:5;32904:16;32898:23;32927:63;32984:4;32979:3;32975:14;32961:12;32927:63;;33586:2766;33795:23;;33586:2766;;33719:6;33710:16;;;33824:63;33714:3;33795:23;33824:63;;;33741:152;33974:4;33967:5;33963:16;33957:23;33986:63;34043:4;34038:3;34034:14;34020:12;33986:63;;;33903:152;34143:4;34136:5;34132:16;34126:23;34155:63;34212:4;34207:3;34203:14;34189:12;34155:63;;;34065:159;34306:4;34299:5;34295:16;34289:23;34318:63;34375:4;34370:3;34366:14;34352:12;34318:63;;;34234:153;34472:4;34465:5;34461:16;34455:23;34484:63;34541:4;34536:3;34532:14;34518:12;34484:63;;;34397:156;34638:4;34631:5;34627:16;34621:23;34650:63;34707:4;34702:3;34698:14;34684:12;34650:63;;;34563:156;34796:4;34789:5;34785:16;34779:23;34808:63;34865:4;34860:3;34856:14;34842:12;34808:63;;;34729:148;34954:4;34947:5;34943:16;34937:23;34966:63;35023:4;35018:3;35014:14;35000:12;34966:63;;;34887:148;35125:6;35118:5;35114:18;35108:25;35139:65;35196:6;35191:3;35187:16;35173:12;35139:65;;;35045:165;35283:6;35276:5;35272:18;35266:25;35297:65;35354:6;35349:3;35345:16;35331:12;35297:65;;;35220:148;35451:6;35444:5;35440:18;35434:25;35507:3;35501:4;35497:14;35488:6;35483:3;35479:16;35472:40;35527:67;35589:4;35575:12;35527:67;;;35519:75;;35378:228;35689:6;35682:5;35678:18;35672:25;35745:3;35739:4;35735:14;35726:6;35721:3;35717:16;35710:40;35765:67;35827:4;35813:12;35765:67;;;35757:75;;35616:228;35930:6;35923:5;35919:18;35913:25;35986:3;35980:4;35976:14;35967:6;35962:3;35958:16;35951:40;36006:67;36068:4;36054:12;36006:67;;;35998:75;;35854:231;36171:6;36164:5;36160:18;36154:25;36227:3;36221:4;36217:14;36208:6;36203:3;36199:16;36192:40;36247:67;36309:4;36295:12;36247:67;;36359:103;36432:24;36450:5;36432:24;;36835:262;;36979:93;37068:3;37059:6;36979:93;;37104:213;37222:2;37207:18;;37236:71;37211:9;37280:6;37236:71;;37324:324;37470:2;37455:18;;37484:71;37459:9;37528:6;37484:71;;;37566:72;37634:2;37623:9;37619:18;37610:6;37566:72;;37655:324;37801:2;37786:18;;37815:71;37790:9;37859:6;37815:71;;;37897:72;37965:2;37954:9;37950:18;37941:6;37897:72;;37986:788;38316:2;38330:47;;;38301:18;;38391:144;38301:18;38521:6;38391:144;;;38383:152;;38583:9;38577:4;38573:20;38568:2;38557:9;38553:18;38546:48;38608:156;38759:4;38750:6;38608:156;;38781:827;39103:2;39117:47;;;39088:18;;39178:146;39088:18;39310:6;39178:146;;;39170:154;;39335:72;39403:2;39392:9;39388:18;39379:6;39335:72;;;39455:9;39449:4;39445:20;39440:2;39429:9;39425:18;39418:48;39480:118;39593:4;39584:6;39480:118;;39615:321;39787:2;39772:18;;39801:125;39776:9;39899:6;39801:125;;39943:217;40063:2;40048:18;;40077:73;40052:9;40123:6;40077:73;;40167:301;40305:2;40319:47;;;40290:18;;40380:78;40290:18;40444:6;40380:78;;40475:407;40666:2;40680:47;;;40651:18;;40741:131;40651:18;40741:131;;40889:407;41080:2;41094:47;;;41065:18;;41155:131;41065:18;41155:131;;41303:407;41494:2;41508:47;;;41479:18;;41569:131;41479:18;41569:131;;41717:407;41908:2;41922:47;;;41893:18;;41983:131;41893:18;41983:131;;42131:407;42322:2;42336:47;;;42307:18;;42397:131;42307:18;42397:131;;42545:407;42736:2;42750:47;;;42721:18;;42811:131;42721:18;42811:131;;42959:407;43150:2;43164:47;;;43135:18;;43225:131;43135:18;43225:131;;43373:407;43564:2;43578:47;;;43549:18;;43639:131;43549:18;43639:131;;43787:407;43978:2;43992:47;;;43963:18;;44053:131;43963:18;44053:131;;44201:407;44392:2;44406:47;;;44377:18;;44467:131;44377:18;44467:131;;44615:407;44806:2;44820:47;;;44791:18;;44881:131;44791:18;44881:131;;45029:407;45220:2;45234:47;;;45205:18;;45295:131;45205:18;45295:131;;45443:407;45634:2;45648:47;;;45619:18;;45709:131;45619:18;45709:131;;45857:407;46048:2;46062:47;;;46033:18;;46123:131;46033:18;46123:131;;46271:407;46462:2;46476:47;;;46447:18;;46537:131;46447:18;46537:131;;46685:407;46876:2;46890:47;;;46861:18;;46951:131;46861:18;46951:131;;47099:407;47290:2;47304:47;;;47275:18;;47365:131;47275:18;47365:131;;47513:407;47704:2;47718:47;;;47689:18;;47779:131;47689:18;47779:131;;47927:407;48118:2;48132:47;;;48103:18;;48193:131;48103:18;48193:131;;48341:407;48532:2;48546:47;;;48517:18;;48607:131;48517:18;48607:131;;48755:407;48946:2;48960:47;;;48931:18;;49021:131;48931:18;49021:131;;49169:301;49331:2;49316:18;;49345:115;49320:9;49433:6;49345:115;;49477:213;49595:2;49580:18;;49609:71;49584:9;49653:6;49609:71;;49933:256;49995:2;49989:9;50021:17;;;50096:18;50081:34;;50117:22;;;50078:62;50075:2;;;50153:1;50150;50143:12;50075:2;50169;50162:22;49973:216;;-1:-1;49973:216;50196:304;;50355:18;50347:6;50344:30;50341:2;;;50387:1;50384;50377:12;50341:2;-1:-1;50422:4;50410:17;;;50475:15;;50278:222;51809:317;;51948:18;51940:6;51937:30;51934:2;;;51980:1;51977;51970:12;51934:2;-1:-1;52111:4;52047;52024:17;;;;-1:-1;;52020:33;52101:15;;51871:255;52133:156;52262:4;52253:14;;52210:79;52831:97;52915:3;52901:27;52935:142;53043:12;;53014:63;53577:108;-1:-1;53671:4;;53649:36;54713:183;54836:19;;;54885:4;54876:14;;54829:67;56169:91;;56231:24;56249:5;56231:24;;56267:85;56333:13;56326:21;;56309:43;56359:136;56436:5;56442:48;56436:5;56442:48;;56502:150;56586:5;56592:55;56586:5;56592:55;;56810:113;56883:34;56872:46;;56855:68;56930:121;-1:-1;;;;;56992:54;;56975:76;57137:81;57208:4;57197:16;;57180:38;57225:136;;57317:39;57350:5;57317:39;;57368:150;;57467:46;57507:5;57467:46;;57677:145;57758:6;57753:3;57748;57735:30;-1:-1;57814:1;57796:16;;57789:27;57728:94;57831:268;57896:1;57903:101;57917:6;57914:1;57911:13;57903:101;;;57984:11;;;57978:18;57965:11;;;57958:39;57939:2;57932:10;57903:101;;;58019:6;58016:1;58013:13;58010:2;;;-1:-1;;58084:1;58066:16;;58059:27;57880:219;58107:97;58195:2;58175:14;-1:-1;;58171:28;;58155:49;58212:106;58296:1;58289:5;58286:12;58276:2;;58302:9;58276:2;58270:48;;58325:113;58416:1;58409:5;58406:12;58396:2;;58422:9;58562:117;58631:24;58649:5;58631:24;;;58624:5;58621:35;58611:2;;58670:1;58667;58660:12;58686:111;58752:21;58767:5;58752:21;;58804:117;58873:24;58891:5;58873:24;;58928:117;58997:24;59015:5;58997:24;;59052:113;59119:22;59135:5;59119:22;",
  "source": "/**\r\n * @file\r\n * @author David Lucid <david@rari.capital>\r\n *\r\n * @section LICENSE\r\n *\r\n * All rights reserved to David Lucid of David Lucid LLC.\r\n * Any disclosure, reproduction, distribution or other use of this code by any individual or entity other than David Lucid of David Lucid LLC, unless given explicit permission by David Lucid of David Lucid LLC, is prohibited.\r\n *\r\n * @section DESCRIPTION\r\n *\r\n * This file includes the Ethereum contract code for RariFundController, our library handling deposits to and withdrawals from the liquidity pools that power RariFund as well as currency exchanges via 0x.\r\n */\r\n\r\npragma solidity ^0.5.7;\r\npragma experimental ABIEncoderV2;\r\n\r\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\r\n\r\nimport \"@0x/contracts-exchange-libs/contracts/src/LibOrder.sol\";\r\n\r\nimport \"./pools/DydxPoolController.sol\";\r\nimport \"./pools/CompoundPoolController.sol\";\r\nimport \"./exchanges/ZeroExExchangeController.sol\";\r\n\r\n/**\r\n * @title RariFundController\r\n * @dev This library handles deposits to and withdrawals from the liquidity pools that power RariFund as well as currency exchanges via 0x.\r\n */\r\nlibrary RariFundController {\r\n    using SafeMath for uint256;\r\n\r\n    /**\r\n     * @dev Returns the calling address's balance of the specified currency in the specified pool.\r\n     * Ideally, we can add the view modifier, but Compound's `getUnderlyingBalance` function (called by `CompoundPoolController.getBalance`) potentially modifies the state.\r\n     * @param pool The index of the pool.\r\n     * @param erc20Contract The ERC20 contract of the token.\r\n     */\r\n    function getPoolBalance(uint8 pool, address erc20Contract) external returns (uint256) {\r\n        if (pool == 0) return DydxPoolController.getBalance(erc20Contract);\r\n        else if (pool == 1) return CompoundPoolController.getBalance(erc20Contract);\r\n        else revert(\"Invalid pool index.\");\r\n    }\r\n\r\n    /**\r\n     * @dev Approves tokens to the pool without spending gas on every deposit.\r\n     * @param pool The index of the pool.\r\n     * @param erc20Contract The ERC20 contract of the token to be approved.\r\n     * @param amount The amount of tokens to be approved.\r\n     * @return Boolean indicating success.\r\n     */\r\n    function approveToPool(uint8 pool, address erc20Contract, uint256 amount) external returns (bool) {\r\n        if (pool == 0) require(DydxPoolController.approve(erc20Contract, amount), \"Approval of tokens to dYdX failed.\");\r\n        else if (pool == 1) require(CompoundPoolController.approve(erc20Contract, amount), \"Approval of tokens to Compound failed.\");\r\n        else revert(\"Invalid pool index.\");\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Deposits funds to the specified pool.\r\n     * @param pool The index of the pool.\r\n     * @param erc20Contract The ERC20 contract of the token to be deposited.\r\n     * @param amount The amount of tokens to be deposited.\r\n     * @return Boolean indicating success.\r\n     */\r\n    function depositToPool(uint8 pool, address erc20Contract, uint256 amount) external returns (bool) {\r\n        if (pool == 0) require(DydxPoolController.deposit(erc20Contract, amount), \"Deposit to dYdX failed.\");\r\n        else if (pool == 1) require(CompoundPoolController.deposit(erc20Contract, amount), \"Deposit to Compound failed.\");\r\n        else revert(\"Invalid pool index.\");\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Withdraws funds from the specified pool.\r\n     * @param pool The index of the pool.\r\n     * @param erc20Contract The ERC20 contract of the token to be withdrawn.\r\n     * @param amount The amount of tokens to be withdrawn.\r\n     * @return Boolean indicating success.\r\n     */\r\n    function withdrawFromPool(uint8 pool, address erc20Contract, uint256 amount) external returns (bool) {\r\n        if (pool == 0) require(DydxPoolController.withdraw(erc20Contract, amount), \"Withdrawal from dYdX failed.\");\r\n        else if (pool == 1) require(CompoundPoolController.withdraw(erc20Contract, amount), \"Withdrawal from Compound failed.\");\r\n        else revert(\"Invalid pool index.\");\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Withdraws all funds from the specified pool.\r\n     * @param pool The index of the pool.\r\n     * @param erc20Contract The ERC20 contract of the token to be withdrawn.\r\n     * @return Boolean indicating success.\r\n     */\r\n    function withdrawAllFromPool(uint8 pool, address erc20Contract) external returns (bool) {\r\n        if (pool == 0) require(DydxPoolController.withdrawAll(erc20Contract), \"Withdrawal from dYdX failed.\");\r\n        else if (pool == 1) require(CompoundPoolController.withdrawAll(erc20Contract), \"Withdrawal from Compound failed.\");\r\n        else revert(\"Invalid pool index.\");\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Approves tokens to 0x without spending gas on every deposit.\r\n     * @param erc20Contract The ERC20 contract of the token to be approved.\r\n     * @param amount The amount of tokens to be approved.\r\n     * @return Boolean indicating success.\r\n     */\r\n    function approveTo0x(address erc20Contract, uint256 amount) external returns (bool) {\r\n        require(ZeroExExchangeController.approve(erc20Contract, amount), \"Approval of tokens to 0x failed.\");\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Fills 0x exchange orders up to a certain amount of input and up to a certain price.\r\n     * We should be able to make this function external and use calldata for all parameters, but Solidity does not support calldata structs (https://github.com/ethereum/solidity/issues/5479).\r\n     * @param orders The limit orders to be filled in ascending order of price.\r\n     * @param signatures The signatures for the orders.\r\n     * @param takerAssetFillAmount The amount of the taker asset to sell (excluding taker fees).\r\n     * @param protocolFee The protocol fee in ETH to pay to 0x.\r\n     * @return Array containing the input amount sold and output amount bought.\r\n     */\r\n    function marketSell0xOrdersFillOrKill(LibOrder.Order[] memory orders, bytes[] memory signatures, uint256 takerAssetFillAmount, uint256 protocolFee) public returns (uint256[2] memory) {\r\n        return ZeroExExchangeController.marketSellOrdersFillOrKill(orders, signatures, takerAssetFillAmount, protocolFee);\r\n    }\r\n}\r\n",
  "sourcePath": "/home/david/rari-contracts/contracts/lib/RariFundController.sol",
  "ast": {
    "absolutePath": "/home/david/rari-contracts/contracts/lib/RariFundController.sol",
    "exportedSymbols": {
      "RariFundController": [
        4277
      ]
    },
    "id": 4278,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4016,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "621:23:14"
      },
      {
        "id": 4017,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "646:33:14"
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 4018,
        "nodeType": "ImportDirective",
        "scope": 4278,
        "sourceUnit": 7893,
        "src": "683:51:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@0x/contracts-exchange-libs/contracts/src/LibOrder.sol",
        "file": "@0x/contracts-exchange-libs/contracts/src/LibOrder.sol",
        "id": 4019,
        "nodeType": "ImportDirective",
        "scope": 4278,
        "sourceUnit": 6424,
        "src": "738:64:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/david/rari-contracts/contracts/lib/pools/DydxPoolController.sol",
        "file": "./pools/DydxPoolController.sol",
        "id": 4020,
        "nodeType": "ImportDirective",
        "scope": 4278,
        "sourceUnit": 5229,
        "src": "806:40:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/david/rari-contracts/contracts/lib/pools/CompoundPoolController.sol",
        "file": "./pools/CompoundPoolController.sol",
        "id": 4021,
        "nodeType": "ImportDirective",
        "scope": 4278,
        "sourceUnit": 4739,
        "src": "848:44:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/david/rari-contracts/contracts/lib/exchanges/ZeroExExchangeController.sol",
        "file": "./exchanges/ZeroExExchangeController.sol",
        "id": 4022,
        "nodeType": "ImportDirective",
        "scope": 4278,
        "sourceUnit": 4484,
        "src": "894:50:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@title RariFundController\n@dev This library handles deposits to and withdrawals from the liquidity pools that power RariFund as well as currency exchanges via 0x.",
        "fullyImplemented": true,
        "id": 4277,
        "linearizedBaseContracts": [
          4277
        ],
        "name": "RariFundController",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 4025,
            "libraryName": {
              "contractScope": null,
              "id": 4023,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7892,
              "src": "1169:8:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$7892",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1163:27:14",
            "typeName": {
              "id": 4024,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1182:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 4056,
              "nodeType": "Block",
              "src": "1681:216:14",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 4036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4034,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4027,
                      "src": "1696:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4035,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1704:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1696:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 4044,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 4042,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4027,
                        "src": "1778:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 4043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1786:1:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "1778:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "496e76616c696420706f6f6c20696e6465782e",
                            "id": 4051,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1867:21:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f064d32bce73393de16c3915d8ab96d969f494ba73fb82967516763c090099ea",
                              "typeString": "literal_string \"Invalid pool index.\""
                            },
                            "value": "Invalid pool index."
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_f064d32bce73393de16c3915d8ab96d969f494ba73fb82967516763c090099ea",
                              "typeString": "literal_string \"Invalid pool index.\""
                            }
                          ],
                          "id": 4050,
                          "name": "revert",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            8452,
                            8453
                          ],
                          "referencedDeclaration": 8453,
                          "src": "1860:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (string memory) pure"
                          }
                        },
                        "id": 4052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1860:29:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 4053,
                      "nodeType": "ExpressionStatement",
                      "src": "1860:29:14"
                    },
                    "id": 4054,
                    "nodeType": "IfStatement",
                    "src": "1774:115:14",
                    "trueBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4047,
                            "name": "erc20Contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4029,
                            "src": "1830:13:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 4045,
                            "name": "CompoundPoolController",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4738,
                            "src": "1796:22:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_CompoundPoolController_$4738_$",
                              "typeString": "type(library CompoundPoolController)"
                            }
                          },
                          "id": 4046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4560,
                          "src": "1796:33:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) returns (uint256)"
                          }
                        },
                        "id": 4048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1796:48:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 4033,
                      "id": 4049,
                      "nodeType": "Return",
                      "src": "1789:55:14"
                    }
                  },
                  "id": 4055,
                  "nodeType": "IfStatement",
                  "src": "1692:197:14",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4039,
                          "name": "erc20Contract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4029,
                          "src": "1744:13:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 4037,
                          "name": "DydxPoolController",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5228,
                          "src": "1714:18:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_DydxPoolController_$5228_$",
                            "typeString": "type(library DydxPoolController)"
                          }
                        },
                        "id": 4038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getBalance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4843,
                        "src": "1714:29:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view returns (uint256)"
                        }
                      },
                      "id": 4040,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1714:44:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 4033,
                    "id": 4041,
                    "nodeType": "Return",
                    "src": "1707:51:14"
                  }
                }
              ]
            },
            "documentation": "@dev Returns the calling address's balance of the specified currency in the specified pool.\nIdeally, we can add the view modifier, but Compound's `getUnderlyingBalance` function (called by `CompoundPoolController.getBalance`) potentially modifies the state.\n@param pool The index of the pool.\n@param erc20Contract The ERC20 contract of the token.",
            "id": 4057,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPoolBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4030,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4027,
                  "name": "pool",
                  "nodeType": "VariableDeclaration",
                  "scope": 4057,
                  "src": "1619:10:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4026,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1619:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4029,
                  "name": "erc20Contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 4057,
                  "src": "1631:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4028,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1631:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1618:35:14"
            },
            "returnParameters": {
              "id": 4033,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4032,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4057,
                  "src": "1672:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4031,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1672:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1671:9:14"
            },
            "scope": 4277,
            "src": "1595:302:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4100,
              "nodeType": "Block",
              "src": "2324:332:14",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 4070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4068,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4059,
                      "src": "2339:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4069,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2347:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2339:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 4082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 4080,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4059,
                        "src": "2466:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 4081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2474:1:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "2466:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "496e76616c696420706f6f6c20696e6465782e",
                            "id": 4093,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2604:21:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f064d32bce73393de16c3915d8ab96d969f494ba73fb82967516763c090099ea",
                              "typeString": "literal_string \"Invalid pool index.\""
                            },
                            "value": "Invalid pool index."
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_f064d32bce73393de16c3915d8ab96d969f494ba73fb82967516763c090099ea",
                              "typeString": "literal_string \"Invalid pool index.\""
                            }
                          ],
                          "id": 4092,
                          "name": "revert",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            8452,
                            8453
                          ],
                          "referencedDeclaration": 8453,
                          "src": "2597:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (string memory) pure"
                          }
                        },
                        "id": 4094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2597:29:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 4095,
                      "nodeType": "ExpressionStatement",
                      "src": "2597:29:14"
                    },
                    "id": 4096,
                    "nodeType": "IfStatement",
                    "src": "2462:164:14",
                    "trueBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 4086,
                                "name": "erc20Contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4061,
                                "src": "2516:13:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 4087,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4063,
                                "src": "2531:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 4084,
                                "name": "CompoundPoolController",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4738,
                                "src": "2485:22:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_CompoundPoolController_$4738_$",
                                  "typeString": "type(library CompoundPoolController)"
                                }
                              },
                              "id": 4085,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "approve",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4622,
                              "src": "2485:30:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,uint256) returns (bool)"
                              }
                            },
                            "id": 4088,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2485:53:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "417070726f76616c206f6620746f6b656e7320746f20436f6d706f756e64206661696c65642e",
                            "id": 4089,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2540:40:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_4a49a6501a6c65ae8375d33005b9de6a176903adbac5b4851c7f619a410ba9ee",
                              "typeString": "literal_string \"Approval of tokens to Compound failed.\""
                            },
                            "value": "Approval of tokens to Compound failed."
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_4a49a6501a6c65ae8375d33005b9de6a176903adbac5b4851c7f619a410ba9ee",
                              "typeString": "literal_string \"Approval of tokens to Compound failed.\""
                            }
                          ],
                          "id": 4083,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            8450,
                            8451
                          ],
                          "referencedDeclaration": 8451,
                          "src": "2477:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 4090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2477:104:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 4091,
                      "nodeType": "ExpressionStatement",
                      "src": "2477:104:14"
                    }
                  },
                  "id": 4097,
                  "nodeType": "IfStatement",
                  "src": "2335:291:14",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4074,
                              "name": "erc20Contract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4061,
                              "src": "2385:13:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 4075,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4063,
                              "src": "2400:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 4072,
                              "name": "DydxPoolController",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5228,
                              "src": "2358:18:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_DydxPoolController_$5228_$",
                                "typeString": "type(library DydxPoolController)"
                              }
                            },
                            "id": 4073,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4899,
                            "src": "2358:26:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) returns (bool)"
                            }
                          },
                          "id": 4076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2358:49:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "417070726f76616c206f6620746f6b656e7320746f2064596458206661696c65642e",
                          "id": 4077,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2409:36:14",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_1f52d08f29ec649c02f8f778f2c24940d9200027a7cb734562a97ca3c320e185",
                            "typeString": "literal_string \"Approval of tokens to dYdX failed.\""
                          },
                          "value": "Approval of tokens to dYdX failed."
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_1f52d08f29ec649c02f8f778f2c24940d9200027a7cb734562a97ca3c320e185",
                            "typeString": "literal_string \"Approval of tokens to dYdX failed.\""
                          }
                        ],
                        "id": 4071,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          8450,
                          8451
                        ],
                        "referencedDeclaration": 8451,
                        "src": "2350:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 4078,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2350:96:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4079,
                    "nodeType": "ExpressionStatement",
                    "src": "2350:96:14"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 4098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2644:4:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4067,
                  "id": 4099,
                  "nodeType": "Return",
                  "src": "2637:11:14"
                }
              ]
            },
            "documentation": "@dev Approves tokens to the pool without spending gas on every deposit.\n@param pool The index of the pool.\n@param erc20Contract The ERC20 contract of the token to be approved.\n@param amount The amount of tokens to be approved.\n@return Boolean indicating success.",
            "id": 4101,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approveToPool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4064,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4059,
                  "name": "pool",
                  "nodeType": "VariableDeclaration",
                  "scope": 4101,
                  "src": "2249:10:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4058,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2249:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4061,
                  "name": "erc20Contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 4101,
                  "src": "2261:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4060,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2261:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4063,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4101,
                  "src": "2284:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4062,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2284:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2248:51:14"
            },
            "returnParameters": {
              "id": 4067,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4066,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4101,
                  "src": "2318:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4065,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2318:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2317:6:14"
            },
            "scope": 4277,
            "src": "2226:430:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4144,
              "nodeType": "Block",
              "src": "3056:310:14",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 4114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4112,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4103,
                      "src": "3071:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3079:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3071:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 4126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 4124,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4103,
                        "src": "3187:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 4125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3195:1:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "3187:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "496e76616c696420706f6f6c20696e6465782e",
                            "id": 4137,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3314:21:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f064d32bce73393de16c3915d8ab96d969f494ba73fb82967516763c090099ea",
                              "typeString": "literal_string \"Invalid pool index.\""
                            },
                            "value": "Invalid pool index."
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_f064d32bce73393de16c3915d8ab96d969f494ba73fb82967516763c090099ea",
                              "typeString": "literal_string \"Invalid pool index.\""
                            }
                          ],
                          "id": 4136,
                          "name": "revert",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            8452,
                            8453
                          ],
                          "referencedDeclaration": 8453,
                          "src": "3307:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (string memory) pure"
                          }
                        },
                        "id": 4138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3307:29:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 4139,
                      "nodeType": "ExpressionStatement",
                      "src": "3307:29:14"
                    },
                    "id": 4140,
                    "nodeType": "IfStatement",
                    "src": "3183:153:14",
                    "trueBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 4130,
                                "name": "erc20Contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4105,
                                "src": "3237:13:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 4131,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4107,
                                "src": "3252:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 4128,
                                "name": "CompoundPoolController",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4738,
                                "src": "3206:22:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_CompoundPoolController_$4738_$",
                                  "typeString": "type(library CompoundPoolController)"
                                }
                              },
                              "id": 4129,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "deposit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4656,
                              "src": "3206:30:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,uint256) returns (bool)"
                              }
                            },
                            "id": 4132,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3206:53:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "4465706f73697420746f20436f6d706f756e64206661696c65642e",
                            "id": 4133,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3261:29:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_595f4e2dad862232608d33f3f1440d122cf7171d5f76fe0350e02cc357ee7406",
                              "typeString": "literal_string \"Deposit to Compound failed.\""
                            },
                            "value": "Deposit to Compound failed."
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_595f4e2dad862232608d33f3f1440d122cf7171d5f76fe0350e02cc357ee7406",
                              "typeString": "literal_string \"Deposit to Compound failed.\""
                            }
                          ],
                          "id": 4127,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            8450,
                            8451
                          ],
                          "referencedDeclaration": 8451,
                          "src": "3198:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 4134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3198:93:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 4135,
                      "nodeType": "ExpressionStatement",
                      "src": "3198:93:14"
                    }
                  },
                  "id": 4141,
                  "nodeType": "IfStatement",
                  "src": "3067:269:14",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4118,
                              "name": "erc20Contract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4105,
                              "src": "3117:13:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 4119,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4107,
                              "src": "3132:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 4116,
                              "name": "DydxPoolController",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5228,
                              "src": "3090:18:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_DydxPoolController_$5228_$",
                                "typeString": "type(library DydxPoolController)"
                              }
                            },
                            "id": 4117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "deposit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5009,
                            "src": "3090:26:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) returns (bool)"
                            }
                          },
                          "id": 4120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3090:49:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "4465706f73697420746f2064596458206661696c65642e",
                          "id": 4121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3141:25:14",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_386588c52a467cd2ad36fd3a799b9f1192a36908c69c50f9860d317abc7e6653",
                            "typeString": "literal_string \"Deposit to dYdX failed.\""
                          },
                          "value": "Deposit to dYdX failed."
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_386588c52a467cd2ad36fd3a799b9f1192a36908c69c50f9860d317abc7e6653",
                            "typeString": "literal_string \"Deposit to dYdX failed.\""
                          }
                        ],
                        "id": 4115,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          8450,
                          8451
                        ],
                        "referencedDeclaration": 8451,
                        "src": "3082:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 4122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3082:85:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4123,
                    "nodeType": "ExpressionStatement",
                    "src": "3082:85:14"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 4142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3354:4:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4111,
                  "id": 4143,
                  "nodeType": "Return",
                  "src": "3347:11:14"
                }
              ]
            },
            "documentation": "@dev Deposits funds to the specified pool.\n@param pool The index of the pool.\n@param erc20Contract The ERC20 contract of the token to be deposited.\n@param amount The amount of tokens to be deposited.\n@return Boolean indicating success.",
            "id": 4145,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositToPool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4103,
                  "name": "pool",
                  "nodeType": "VariableDeclaration",
                  "scope": 4145,
                  "src": "2981:10:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4102,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2981:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4105,
                  "name": "erc20Contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 4145,
                  "src": "2993:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4104,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2993:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4107,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4145,
                  "src": "3016:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4106,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3016:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2980:51:14"
            },
            "returnParameters": {
              "id": 4111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4110,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4145,
                  "src": "3050:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4109,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3050:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3049:6:14"
            },
            "scope": 4277,
            "src": "2958:408:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4188,
              "nodeType": "Block",
              "src": "3772:322:14",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 4158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4156,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4147,
                      "src": "3787:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3795:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3787:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 4170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 4168,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4147,
                        "src": "3909:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 4169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3917:1:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "3909:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "496e76616c696420706f6f6c20696e6465782e",
                            "id": 4181,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4042:21:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f064d32bce73393de16c3915d8ab96d969f494ba73fb82967516763c090099ea",
                              "typeString": "literal_string \"Invalid pool index.\""
                            },
                            "value": "Invalid pool index."
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_f064d32bce73393de16c3915d8ab96d969f494ba73fb82967516763c090099ea",
                              "typeString": "literal_string \"Invalid pool index.\""
                            }
                          ],
                          "id": 4180,
                          "name": "revert",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            8452,
                            8453
                          ],
                          "referencedDeclaration": 8453,
                          "src": "4035:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (string memory) pure"
                          }
                        },
                        "id": 4182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4035:29:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 4183,
                      "nodeType": "ExpressionStatement",
                      "src": "4035:29:14"
                    },
                    "id": 4184,
                    "nodeType": "IfStatement",
                    "src": "3905:159:14",
                    "trueBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 4174,
                                "name": "erc20Contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4149,
                                "src": "3960:13:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 4175,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4151,
                                "src": "3975:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 4172,
                                "name": "CompoundPoolController",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4738,
                                "src": "3928:22:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_CompoundPoolController_$4738_$",
                                  "typeString": "type(library CompoundPoolController)"
                                }
                              },
                              "id": 4173,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "withdraw",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4690,
                              "src": "3928:31:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,uint256) returns (bool)"
                              }
                            },
                            "id": 4176,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3928:54:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "5769746864726177616c2066726f6d20436f6d706f756e64206661696c65642e",
                            "id": 4177,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3984:34:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_ec332a5b53013c4f77f05d3bafa76ec73388cbfd47878f160db3d755955a2b5a",
                              "typeString": "literal_string \"Withdrawal from Compound failed.\""
                            },
                            "value": "Withdrawal from Compound failed."
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_ec332a5b53013c4f77f05d3bafa76ec73388cbfd47878f160db3d755955a2b5a",
                              "typeString": "literal_string \"Withdrawal from Compound failed.\""
                            }
                          ],
                          "id": 4171,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            8450,
                            8451
                          ],
                          "referencedDeclaration": 8451,
                          "src": "3920:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 4178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3920:99:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 4179,
                      "nodeType": "ExpressionStatement",
                      "src": "3920:99:14"
                    }
                  },
                  "id": 4185,
                  "nodeType": "IfStatement",
                  "src": "3783:281:14",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4162,
                              "name": "erc20Contract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4149,
                              "src": "3834:13:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 4163,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4151,
                              "src": "3849:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 4160,
                              "name": "DydxPoolController",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5228,
                              "src": "3806:18:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_DydxPoolController_$5228_$",
                                "typeString": "type(library DydxPoolController)"
                              }
                            },
                            "id": 4161,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5119,
                            "src": "3806:27:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) returns (bool)"
                            }
                          },
                          "id": 4164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3806:50:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "5769746864726177616c2066726f6d2064596458206661696c65642e",
                          "id": 4165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3858:30:14",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_6ad2a09603baf43d012ec04f1dfee1065eb04e928c14ed37a89e6f209cec55b4",
                            "typeString": "literal_string \"Withdrawal from dYdX failed.\""
                          },
                          "value": "Withdrawal from dYdX failed."
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_6ad2a09603baf43d012ec04f1dfee1065eb04e928c14ed37a89e6f209cec55b4",
                            "typeString": "literal_string \"Withdrawal from dYdX failed.\""
                          }
                        ],
                        "id": 4159,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          8450,
                          8451
                        ],
                        "referencedDeclaration": 8451,
                        "src": "3798:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 4166,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3798:91:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4167,
                    "nodeType": "ExpressionStatement",
                    "src": "3798:91:14"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 4186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4082:4:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4155,
                  "id": 4187,
                  "nodeType": "Return",
                  "src": "4075:11:14"
                }
              ]
            },
            "documentation": "@dev Withdraws funds from the specified pool.\n@param pool The index of the pool.\n@param erc20Contract The ERC20 contract of the token to be withdrawn.\n@param amount The amount of tokens to be withdrawn.\n@return Boolean indicating success.",
            "id": 4189,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawFromPool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4147,
                  "name": "pool",
                  "nodeType": "VariableDeclaration",
                  "scope": 4189,
                  "src": "3697:10:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4146,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3697:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4149,
                  "name": "erc20Contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 4189,
                  "src": "3709:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4148,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3709:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4151,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4189,
                  "src": "3732:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4150,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3732:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3696:51:14"
            },
            "returnParameters": {
              "id": 4155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4154,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4189,
                  "src": "3766:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4153,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3766:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3765:6:14"
            },
            "scope": 4277,
            "src": "3671:423:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4228,
              "nodeType": "Block",
              "src": "4431:312:14",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 4200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4198,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4191,
                      "src": "4446:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4454:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4446:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 4211,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 4209,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4191,
                        "src": "4563:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 4210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4571:1:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "4563:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "496e76616c696420706f6f6c20696e6465782e",
                            "id": 4221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4691:21:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f064d32bce73393de16c3915d8ab96d969f494ba73fb82967516763c090099ea",
                              "typeString": "literal_string \"Invalid pool index.\""
                            },
                            "value": "Invalid pool index."
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_f064d32bce73393de16c3915d8ab96d969f494ba73fb82967516763c090099ea",
                              "typeString": "literal_string \"Invalid pool index.\""
                            }
                          ],
                          "id": 4220,
                          "name": "revert",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            8452,
                            8453
                          ],
                          "referencedDeclaration": 8453,
                          "src": "4684:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (string memory) pure"
                          }
                        },
                        "id": 4222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4684:29:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 4223,
                      "nodeType": "ExpressionStatement",
                      "src": "4684:29:14"
                    },
                    "id": 4224,
                    "nodeType": "IfStatement",
                    "src": "4559:154:14",
                    "trueBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 4215,
                                "name": "erc20Contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4193,
                                "src": "4617:13:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 4213,
                                "name": "CompoundPoolController",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4738,
                                "src": "4582:22:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_CompoundPoolController_$4738_$",
                                  "typeString": "type(library CompoundPoolController)"
                                }
                              },
                              "id": 4214,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "withdrawAll",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4737,
                              "src": "4582:34:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) returns (bool)"
                              }
                            },
                            "id": 4216,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4582:49:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "5769746864726177616c2066726f6d20436f6d706f756e64206661696c65642e",
                            "id": 4217,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4633:34:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_ec332a5b53013c4f77f05d3bafa76ec73388cbfd47878f160db3d755955a2b5a",
                              "typeString": "literal_string \"Withdrawal from Compound failed.\""
                            },
                            "value": "Withdrawal from Compound failed."
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_ec332a5b53013c4f77f05d3bafa76ec73388cbfd47878f160db3d755955a2b5a",
                              "typeString": "literal_string \"Withdrawal from Compound failed.\""
                            }
                          ],
                          "id": 4212,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            8450,
                            8451
                          ],
                          "referencedDeclaration": 8451,
                          "src": "4574:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 4218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4574:94:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 4219,
                      "nodeType": "ExpressionStatement",
                      "src": "4574:94:14"
                    }
                  },
                  "id": 4225,
                  "nodeType": "IfStatement",
                  "src": "4442:271:14",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4204,
                              "name": "erc20Contract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4193,
                              "src": "4496:13:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 4202,
                              "name": "DydxPoolController",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5228,
                              "src": "4465:18:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_DydxPoolController_$5228_$",
                                "typeString": "type(library DydxPoolController)"
                              }
                            },
                            "id": 4203,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdrawAll",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5227,
                            "src": "4465:30:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) returns (bool)"
                            }
                          },
                          "id": 4205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4465:45:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "5769746864726177616c2066726f6d2064596458206661696c65642e",
                          "id": 4206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4512:30:14",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_6ad2a09603baf43d012ec04f1dfee1065eb04e928c14ed37a89e6f209cec55b4",
                            "typeString": "literal_string \"Withdrawal from dYdX failed.\""
                          },
                          "value": "Withdrawal from dYdX failed."
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_6ad2a09603baf43d012ec04f1dfee1065eb04e928c14ed37a89e6f209cec55b4",
                            "typeString": "literal_string \"Withdrawal from dYdX failed.\""
                          }
                        ],
                        "id": 4201,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          8450,
                          8451
                        ],
                        "referencedDeclaration": 8451,
                        "src": "4457:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 4207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4457:86:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4208,
                    "nodeType": "ExpressionStatement",
                    "src": "4457:86:14"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 4226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4731:4:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4197,
                  "id": 4227,
                  "nodeType": "Return",
                  "src": "4724:11:14"
                }
              ]
            },
            "documentation": "@dev Withdraws all funds from the specified pool.\n@param pool The index of the pool.\n@param erc20Contract The ERC20 contract of the token to be withdrawn.\n@return Boolean indicating success.",
            "id": 4229,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawAllFromPool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4191,
                  "name": "pool",
                  "nodeType": "VariableDeclaration",
                  "scope": 4229,
                  "src": "4372:10:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4190,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4372:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4193,
                  "name": "erc20Contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 4229,
                  "src": "4384:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4192,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4384:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4371:35:14"
            },
            "returnParameters": {
              "id": 4197,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4196,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4229,
                  "src": "4425:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4195,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4425:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4424:6:14"
            },
            "scope": 4277,
            "src": "4343:400:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4249,
              "nodeType": "Block",
              "src": "5107:141:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4241,
                            "name": "erc20Contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4231,
                            "src": "5159:13:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 4242,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4233,
                            "src": "5174:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 4239,
                            "name": "ZeroExExchangeController",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4483,
                            "src": "5126:24:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ZeroExExchangeController_$4483_$",
                              "typeString": "type(library ZeroExExchangeController)"
                            }
                          },
                          "id": 4240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "approve",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4358,
                          "src": "5126:32:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) returns (bool)"
                          }
                        },
                        "id": 4243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5126:55:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "417070726f76616c206f6620746f6b656e7320746f203078206661696c65642e",
                        "id": 4244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5183:34:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d8c23b8797dcbff5c0892f5a738dd5c3ed0451530c98460977652d9c6d9fef6",
                          "typeString": "literal_string \"Approval of tokens to 0x failed.\""
                        },
                        "value": "Approval of tokens to 0x failed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d8c23b8797dcbff5c0892f5a738dd5c3ed0451530c98460977652d9c6d9fef6",
                          "typeString": "literal_string \"Approval of tokens to 0x failed.\""
                        }
                      ],
                      "id": 4238,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8450,
                        8451
                      ],
                      "referencedDeclaration": 8451,
                      "src": "5118:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5118:100:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4246,
                  "nodeType": "ExpressionStatement",
                  "src": "5118:100:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 4247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5236:4:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4237,
                  "id": 4248,
                  "nodeType": "Return",
                  "src": "5229:11:14"
                }
              ]
            },
            "documentation": "@dev Approves tokens to 0x without spending gas on every deposit.\n@param erc20Contract The ERC20 contract of the token to be approved.\n@param amount The amount of tokens to be approved.\n@return Boolean indicating success.",
            "id": 4250,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approveTo0x",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4231,
                  "name": "erc20Contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 4250,
                  "src": "5044:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4230,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5044:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4233,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4250,
                  "src": "5067:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4232,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5067:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5043:39:14"
            },
            "returnParameters": {
              "id": 4237,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4236,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4250,
                  "src": "5101:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4235,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5101:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5100:6:14"
            },
            "scope": 4277,
            "src": "5023:225:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4275,
              "nodeType": "Block",
              "src": "6129:132:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4269,
                        "name": "orders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4253,
                        "src": "6199:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Order_$6358_memory_$dyn_memory_ptr",
                          "typeString": "struct LibOrder.Order memory[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4270,
                        "name": "signatures",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4256,
                        "src": "6207:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4271,
                        "name": "takerAssetFillAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4258,
                        "src": "6219:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4272,
                        "name": "protocolFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4260,
                        "src": "6241:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_Order_$6358_memory_$dyn_memory_ptr",
                          "typeString": "struct LibOrder.Order memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4267,
                        "name": "ZeroExExchangeController",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4483,
                        "src": "6147:24:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ZeroExExchangeController_$4483_$",
                          "typeString": "type(library ZeroExExchangeController)"
                        }
                      },
                      "id": 4268,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketSellOrdersFillOrKill",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4420,
                      "src": "6147:51:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_Order_$6358_memory_$dyn_memory_ptr_$_t_array$_t_bytes_memory_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
                        "typeString": "function (struct LibOrder.Order memory[] memory,bytes memory[] memory,uint256,uint256) returns (uint256[2] memory)"
                      }
                    },
                    "id": 4273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6147:106:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                      "typeString": "uint256[2] memory"
                    }
                  },
                  "functionReturnParameters": 4266,
                  "id": 4274,
                  "nodeType": "Return",
                  "src": "6140:113:14"
                }
              ]
            },
            "documentation": "@dev Fills 0x exchange orders up to a certain amount of input and up to a certain price.\nWe should be able to make this function external and use calldata for all parameters, but Solidity does not support calldata structs (https://github.com/ethereum/solidity/issues/5479).\n@param orders The limit orders to be filled in ascending order of price.\n@param signatures The signatures for the orders.\n@param takerAssetFillAmount The amount of the taker asset to sell (excluding taker fees).\n@param protocolFee The protocol fee in ETH to pay to 0x.\n@return Array containing the input amount sold and output amount bought.",
            "id": 4276,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "marketSell0xOrdersFillOrKill",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4253,
                  "name": "orders",
                  "nodeType": "VariableDeclaration",
                  "scope": 4276,
                  "src": "5984:30:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$6358_memory_$dyn_memory_ptr",
                    "typeString": "struct LibOrder.Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 4251,
                      "name": "LibOrder.Order",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 6358,
                      "src": "5984:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$6358_storage_ptr",
                        "typeString": "struct LibOrder.Order"
                      }
                    },
                    "id": 4252,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5984:16:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$6358_storage_$dyn_storage_ptr",
                      "typeString": "struct LibOrder.Order[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4256,
                  "name": "signatures",
                  "nodeType": "VariableDeclaration",
                  "scope": 4276,
                  "src": "6016:25:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4254,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "6016:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 4255,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "6016:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4258,
                  "name": "takerAssetFillAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4276,
                  "src": "6043:28:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4257,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6043:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4260,
                  "name": "protocolFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 4276,
                  "src": "6073:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4259,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6073:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5983:110:14"
            },
            "returnParameters": {
              "id": 4266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4265,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4276,
                  "src": "6110:17:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4262,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6110:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4264,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 4263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6118:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "6110:10:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6109:19:14"
            },
            "scope": 4277,
            "src": "5946:315:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 4278,
        "src": "1129:5135:14"
      }
    ],
    "src": "621:5645:14"
  },
  "legacyAST": {
    "absolutePath": "/home/david/rari-contracts/contracts/lib/RariFundController.sol",
    "exportedSymbols": {
      "RariFundController": [
        4277
      ]
    },
    "id": 4278,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4016,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "621:23:14"
      },
      {
        "id": 4017,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "646:33:14"
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 4018,
        "nodeType": "ImportDirective",
        "scope": 4278,
        "sourceUnit": 7893,
        "src": "683:51:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@0x/contracts-exchange-libs/contracts/src/LibOrder.sol",
        "file": "@0x/contracts-exchange-libs/contracts/src/LibOrder.sol",
        "id": 4019,
        "nodeType": "ImportDirective",
        "scope": 4278,
        "sourceUnit": 6424,
        "src": "738:64:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/david/rari-contracts/contracts/lib/pools/DydxPoolController.sol",
        "file": "./pools/DydxPoolController.sol",
        "id": 4020,
        "nodeType": "ImportDirective",
        "scope": 4278,
        "sourceUnit": 5229,
        "src": "806:40:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/david/rari-contracts/contracts/lib/pools/CompoundPoolController.sol",
        "file": "./pools/CompoundPoolController.sol",
        "id": 4021,
        "nodeType": "ImportDirective",
        "scope": 4278,
        "sourceUnit": 4739,
        "src": "848:44:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/david/rari-contracts/contracts/lib/exchanges/ZeroExExchangeController.sol",
        "file": "./exchanges/ZeroExExchangeController.sol",
        "id": 4022,
        "nodeType": "ImportDirective",
        "scope": 4278,
        "sourceUnit": 4484,
        "src": "894:50:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@title RariFundController\n@dev This library handles deposits to and withdrawals from the liquidity pools that power RariFund as well as currency exchanges via 0x.",
        "fullyImplemented": true,
        "id": 4277,
        "linearizedBaseContracts": [
          4277
        ],
        "name": "RariFundController",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 4025,
            "libraryName": {
              "contractScope": null,
              "id": 4023,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7892,
              "src": "1169:8:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$7892",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1163:27:14",
            "typeName": {
              "id": 4024,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1182:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 4056,
              "nodeType": "Block",
              "src": "1681:216:14",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 4036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4034,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4027,
                      "src": "1696:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4035,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1704:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1696:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 4044,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 4042,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4027,
                        "src": "1778:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 4043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1786:1:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "1778:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "496e76616c696420706f6f6c20696e6465782e",
                            "id": 4051,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1867:21:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f064d32bce73393de16c3915d8ab96d969f494ba73fb82967516763c090099ea",
                              "typeString": "literal_string \"Invalid pool index.\""
                            },
                            "value": "Invalid pool index."
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_f064d32bce73393de16c3915d8ab96d969f494ba73fb82967516763c090099ea",
                              "typeString": "literal_string \"Invalid pool index.\""
                            }
                          ],
                          "id": 4050,
                          "name": "revert",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            8452,
                            8453
                          ],
                          "referencedDeclaration": 8453,
                          "src": "1860:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (string memory) pure"
                          }
                        },
                        "id": 4052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1860:29:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 4053,
                      "nodeType": "ExpressionStatement",
                      "src": "1860:29:14"
                    },
                    "id": 4054,
                    "nodeType": "IfStatement",
                    "src": "1774:115:14",
                    "trueBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4047,
                            "name": "erc20Contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4029,
                            "src": "1830:13:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 4045,
                            "name": "CompoundPoolController",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4738,
                            "src": "1796:22:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_CompoundPoolController_$4738_$",
                              "typeString": "type(library CompoundPoolController)"
                            }
                          },
                          "id": 4046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4560,
                          "src": "1796:33:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) returns (uint256)"
                          }
                        },
                        "id": 4048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1796:48:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 4033,
                      "id": 4049,
                      "nodeType": "Return",
                      "src": "1789:55:14"
                    }
                  },
                  "id": 4055,
                  "nodeType": "IfStatement",
                  "src": "1692:197:14",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4039,
                          "name": "erc20Contract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4029,
                          "src": "1744:13:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 4037,
                          "name": "DydxPoolController",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5228,
                          "src": "1714:18:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_DydxPoolController_$5228_$",
                            "typeString": "type(library DydxPoolController)"
                          }
                        },
                        "id": 4038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getBalance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4843,
                        "src": "1714:29:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view returns (uint256)"
                        }
                      },
                      "id": 4040,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1714:44:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 4033,
                    "id": 4041,
                    "nodeType": "Return",
                    "src": "1707:51:14"
                  }
                }
              ]
            },
            "documentation": "@dev Returns the calling address's balance of the specified currency in the specified pool.\nIdeally, we can add the view modifier, but Compound's `getUnderlyingBalance` function (called by `CompoundPoolController.getBalance`) potentially modifies the state.\n@param pool The index of the pool.\n@param erc20Contract The ERC20 contract of the token.",
            "id": 4057,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPoolBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4030,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4027,
                  "name": "pool",
                  "nodeType": "VariableDeclaration",
                  "scope": 4057,
                  "src": "1619:10:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4026,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1619:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4029,
                  "name": "erc20Contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 4057,
                  "src": "1631:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4028,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1631:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1618:35:14"
            },
            "returnParameters": {
              "id": 4033,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4032,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4057,
                  "src": "1672:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4031,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1672:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1671:9:14"
            },
            "scope": 4277,
            "src": "1595:302:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4100,
              "nodeType": "Block",
              "src": "2324:332:14",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 4070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4068,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4059,
                      "src": "2339:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4069,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2347:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2339:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 4082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 4080,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4059,
                        "src": "2466:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 4081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2474:1:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "2466:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "496e76616c696420706f6f6c20696e6465782e",
                            "id": 4093,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2604:21:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f064d32bce73393de16c3915d8ab96d969f494ba73fb82967516763c090099ea",
                              "typeString": "literal_string \"Invalid pool index.\""
                            },
                            "value": "Invalid pool index."
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_f064d32bce73393de16c3915d8ab96d969f494ba73fb82967516763c090099ea",
                              "typeString": "literal_string \"Invalid pool index.\""
                            }
                          ],
                          "id": 4092,
                          "name": "revert",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            8452,
                            8453
                          ],
                          "referencedDeclaration": 8453,
                          "src": "2597:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (string memory) pure"
                          }
                        },
                        "id": 4094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2597:29:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 4095,
                      "nodeType": "ExpressionStatement",
                      "src": "2597:29:14"
                    },
                    "id": 4096,
                    "nodeType": "IfStatement",
                    "src": "2462:164:14",
                    "trueBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 4086,
                                "name": "erc20Contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4061,
                                "src": "2516:13:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 4087,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4063,
                                "src": "2531:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 4084,
                                "name": "CompoundPoolController",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4738,
                                "src": "2485:22:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_CompoundPoolController_$4738_$",
                                  "typeString": "type(library CompoundPoolController)"
                                }
                              },
                              "id": 4085,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "approve",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4622,
                              "src": "2485:30:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,uint256) returns (bool)"
                              }
                            },
                            "id": 4088,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2485:53:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "417070726f76616c206f6620746f6b656e7320746f20436f6d706f756e64206661696c65642e",
                            "id": 4089,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2540:40:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_4a49a6501a6c65ae8375d33005b9de6a176903adbac5b4851c7f619a410ba9ee",
                              "typeString": "literal_string \"Approval of tokens to Compound failed.\""
                            },
                            "value": "Approval of tokens to Compound failed."
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_4a49a6501a6c65ae8375d33005b9de6a176903adbac5b4851c7f619a410ba9ee",
                              "typeString": "literal_string \"Approval of tokens to Compound failed.\""
                            }
                          ],
                          "id": 4083,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            8450,
                            8451
                          ],
                          "referencedDeclaration": 8451,
                          "src": "2477:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 4090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2477:104:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 4091,
                      "nodeType": "ExpressionStatement",
                      "src": "2477:104:14"
                    }
                  },
                  "id": 4097,
                  "nodeType": "IfStatement",
                  "src": "2335:291:14",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4074,
                              "name": "erc20Contract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4061,
                              "src": "2385:13:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 4075,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4063,
                              "src": "2400:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 4072,
                              "name": "DydxPoolController",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5228,
                              "src": "2358:18:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_DydxPoolController_$5228_$",
                                "typeString": "type(library DydxPoolController)"
                              }
                            },
                            "id": 4073,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4899,
                            "src": "2358:26:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) returns (bool)"
                            }
                          },
                          "id": 4076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2358:49:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "417070726f76616c206f6620746f6b656e7320746f2064596458206661696c65642e",
                          "id": 4077,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2409:36:14",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_1f52d08f29ec649c02f8f778f2c24940d9200027a7cb734562a97ca3c320e185",
                            "typeString": "literal_string \"Approval of tokens to dYdX failed.\""
                          },
                          "value": "Approval of tokens to dYdX failed."
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_1f52d08f29ec649c02f8f778f2c24940d9200027a7cb734562a97ca3c320e185",
                            "typeString": "literal_string \"Approval of tokens to dYdX failed.\""
                          }
                        ],
                        "id": 4071,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          8450,
                          8451
                        ],
                        "referencedDeclaration": 8451,
                        "src": "2350:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 4078,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2350:96:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4079,
                    "nodeType": "ExpressionStatement",
                    "src": "2350:96:14"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 4098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2644:4:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4067,
                  "id": 4099,
                  "nodeType": "Return",
                  "src": "2637:11:14"
                }
              ]
            },
            "documentation": "@dev Approves tokens to the pool without spending gas on every deposit.\n@param pool The index of the pool.\n@param erc20Contract The ERC20 contract of the token to be approved.\n@param amount The amount of tokens to be approved.\n@return Boolean indicating success.",
            "id": 4101,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approveToPool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4064,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4059,
                  "name": "pool",
                  "nodeType": "VariableDeclaration",
                  "scope": 4101,
                  "src": "2249:10:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4058,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2249:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4061,
                  "name": "erc20Contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 4101,
                  "src": "2261:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4060,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2261:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4063,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4101,
                  "src": "2284:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4062,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2284:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2248:51:14"
            },
            "returnParameters": {
              "id": 4067,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4066,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4101,
                  "src": "2318:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4065,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2318:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2317:6:14"
            },
            "scope": 4277,
            "src": "2226:430:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4144,
              "nodeType": "Block",
              "src": "3056:310:14",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 4114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4112,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4103,
                      "src": "3071:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3079:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3071:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 4126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 4124,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4103,
                        "src": "3187:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 4125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3195:1:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "3187:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "496e76616c696420706f6f6c20696e6465782e",
                            "id": 4137,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3314:21:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f064d32bce73393de16c3915d8ab96d969f494ba73fb82967516763c090099ea",
                              "typeString": "literal_string \"Invalid pool index.\""
                            },
                            "value": "Invalid pool index."
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_f064d32bce73393de16c3915d8ab96d969f494ba73fb82967516763c090099ea",
                              "typeString": "literal_string \"Invalid pool index.\""
                            }
                          ],
                          "id": 4136,
                          "name": "revert",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            8452,
                            8453
                          ],
                          "referencedDeclaration": 8453,
                          "src": "3307:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (string memory) pure"
                          }
                        },
                        "id": 4138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3307:29:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 4139,
                      "nodeType": "ExpressionStatement",
                      "src": "3307:29:14"
                    },
                    "id": 4140,
                    "nodeType": "IfStatement",
                    "src": "3183:153:14",
                    "trueBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 4130,
                                "name": "erc20Contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4105,
                                "src": "3237:13:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 4131,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4107,
                                "src": "3252:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 4128,
                                "name": "CompoundPoolController",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4738,
                                "src": "3206:22:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_CompoundPoolController_$4738_$",
                                  "typeString": "type(library CompoundPoolController)"
                                }
                              },
                              "id": 4129,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "deposit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4656,
                              "src": "3206:30:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,uint256) returns (bool)"
                              }
                            },
                            "id": 4132,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3206:53:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "4465706f73697420746f20436f6d706f756e64206661696c65642e",
                            "id": 4133,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3261:29:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_595f4e2dad862232608d33f3f1440d122cf7171d5f76fe0350e02cc357ee7406",
                              "typeString": "literal_string \"Deposit to Compound failed.\""
                            },
                            "value": "Deposit to Compound failed."
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_595f4e2dad862232608d33f3f1440d122cf7171d5f76fe0350e02cc357ee7406",
                              "typeString": "literal_string \"Deposit to Compound failed.\""
                            }
                          ],
                          "id": 4127,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            8450,
                            8451
                          ],
                          "referencedDeclaration": 8451,
                          "src": "3198:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 4134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3198:93:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 4135,
                      "nodeType": "ExpressionStatement",
                      "src": "3198:93:14"
                    }
                  },
                  "id": 4141,
                  "nodeType": "IfStatement",
                  "src": "3067:269:14",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4118,
                              "name": "erc20Contract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4105,
                              "src": "3117:13:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 4119,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4107,
                              "src": "3132:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 4116,
                              "name": "DydxPoolController",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5228,
                              "src": "3090:18:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_DydxPoolController_$5228_$",
                                "typeString": "type(library DydxPoolController)"
                              }
                            },
                            "id": 4117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "deposit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5009,
                            "src": "3090:26:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) returns (bool)"
                            }
                          },
                          "id": 4120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3090:49:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "4465706f73697420746f2064596458206661696c65642e",
                          "id": 4121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3141:25:14",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_386588c52a467cd2ad36fd3a799b9f1192a36908c69c50f9860d317abc7e6653",
                            "typeString": "literal_string \"Deposit to dYdX failed.\""
                          },
                          "value": "Deposit to dYdX failed."
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_386588c52a467cd2ad36fd3a799b9f1192a36908c69c50f9860d317abc7e6653",
                            "typeString": "literal_string \"Deposit to dYdX failed.\""
                          }
                        ],
                        "id": 4115,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          8450,
                          8451
                        ],
                        "referencedDeclaration": 8451,
                        "src": "3082:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 4122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3082:85:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4123,
                    "nodeType": "ExpressionStatement",
                    "src": "3082:85:14"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 4142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3354:4:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4111,
                  "id": 4143,
                  "nodeType": "Return",
                  "src": "3347:11:14"
                }
              ]
            },
            "documentation": "@dev Deposits funds to the specified pool.\n@param pool The index of the pool.\n@param erc20Contract The ERC20 contract of the token to be deposited.\n@param amount The amount of tokens to be deposited.\n@return Boolean indicating success.",
            "id": 4145,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositToPool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4103,
                  "name": "pool",
                  "nodeType": "VariableDeclaration",
                  "scope": 4145,
                  "src": "2981:10:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4102,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2981:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4105,
                  "name": "erc20Contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 4145,
                  "src": "2993:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4104,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2993:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4107,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4145,
                  "src": "3016:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4106,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3016:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2980:51:14"
            },
            "returnParameters": {
              "id": 4111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4110,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4145,
                  "src": "3050:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4109,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3050:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3049:6:14"
            },
            "scope": 4277,
            "src": "2958:408:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4188,
              "nodeType": "Block",
              "src": "3772:322:14",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 4158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4156,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4147,
                      "src": "3787:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3795:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3787:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 4170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 4168,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4147,
                        "src": "3909:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 4169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3917:1:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "3909:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "496e76616c696420706f6f6c20696e6465782e",
                            "id": 4181,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4042:21:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f064d32bce73393de16c3915d8ab96d969f494ba73fb82967516763c090099ea",
                              "typeString": "literal_string \"Invalid pool index.\""
                            },
                            "value": "Invalid pool index."
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_f064d32bce73393de16c3915d8ab96d969f494ba73fb82967516763c090099ea",
                              "typeString": "literal_string \"Invalid pool index.\""
                            }
                          ],
                          "id": 4180,
                          "name": "revert",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            8452,
                            8453
                          ],
                          "referencedDeclaration": 8453,
                          "src": "4035:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (string memory) pure"
                          }
                        },
                        "id": 4182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4035:29:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 4183,
                      "nodeType": "ExpressionStatement",
                      "src": "4035:29:14"
                    },
                    "id": 4184,
                    "nodeType": "IfStatement",
                    "src": "3905:159:14",
                    "trueBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 4174,
                                "name": "erc20Contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4149,
                                "src": "3960:13:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 4175,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4151,
                                "src": "3975:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 4172,
                                "name": "CompoundPoolController",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4738,
                                "src": "3928:22:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_CompoundPoolController_$4738_$",
                                  "typeString": "type(library CompoundPoolController)"
                                }
                              },
                              "id": 4173,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "withdraw",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4690,
                              "src": "3928:31:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,uint256) returns (bool)"
                              }
                            },
                            "id": 4176,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3928:54:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "5769746864726177616c2066726f6d20436f6d706f756e64206661696c65642e",
                            "id": 4177,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3984:34:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_ec332a5b53013c4f77f05d3bafa76ec73388cbfd47878f160db3d755955a2b5a",
                              "typeString": "literal_string \"Withdrawal from Compound failed.\""
                            },
                            "value": "Withdrawal from Compound failed."
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_ec332a5b53013c4f77f05d3bafa76ec73388cbfd47878f160db3d755955a2b5a",
                              "typeString": "literal_string \"Withdrawal from Compound failed.\""
                            }
                          ],
                          "id": 4171,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            8450,
                            8451
                          ],
                          "referencedDeclaration": 8451,
                          "src": "3920:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 4178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3920:99:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 4179,
                      "nodeType": "ExpressionStatement",
                      "src": "3920:99:14"
                    }
                  },
                  "id": 4185,
                  "nodeType": "IfStatement",
                  "src": "3783:281:14",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4162,
                              "name": "erc20Contract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4149,
                              "src": "3834:13:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 4163,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4151,
                              "src": "3849:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 4160,
                              "name": "DydxPoolController",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5228,
                              "src": "3806:18:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_DydxPoolController_$5228_$",
                                "typeString": "type(library DydxPoolController)"
                              }
                            },
                            "id": 4161,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5119,
                            "src": "3806:27:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) returns (bool)"
                            }
                          },
                          "id": 4164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3806:50:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "5769746864726177616c2066726f6d2064596458206661696c65642e",
                          "id": 4165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3858:30:14",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_6ad2a09603baf43d012ec04f1dfee1065eb04e928c14ed37a89e6f209cec55b4",
                            "typeString": "literal_string \"Withdrawal from dYdX failed.\""
                          },
                          "value": "Withdrawal from dYdX failed."
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_6ad2a09603baf43d012ec04f1dfee1065eb04e928c14ed37a89e6f209cec55b4",
                            "typeString": "literal_string \"Withdrawal from dYdX failed.\""
                          }
                        ],
                        "id": 4159,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          8450,
                          8451
                        ],
                        "referencedDeclaration": 8451,
                        "src": "3798:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 4166,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3798:91:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4167,
                    "nodeType": "ExpressionStatement",
                    "src": "3798:91:14"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 4186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4082:4:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4155,
                  "id": 4187,
                  "nodeType": "Return",
                  "src": "4075:11:14"
                }
              ]
            },
            "documentation": "@dev Withdraws funds from the specified pool.\n@param pool The index of the pool.\n@param erc20Contract The ERC20 contract of the token to be withdrawn.\n@param amount The amount of tokens to be withdrawn.\n@return Boolean indicating success.",
            "id": 4189,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawFromPool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4147,
                  "name": "pool",
                  "nodeType": "VariableDeclaration",
                  "scope": 4189,
                  "src": "3697:10:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4146,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3697:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4149,
                  "name": "erc20Contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 4189,
                  "src": "3709:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4148,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3709:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4151,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4189,
                  "src": "3732:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4150,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3732:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3696:51:14"
            },
            "returnParameters": {
              "id": 4155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4154,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4189,
                  "src": "3766:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4153,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3766:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3765:6:14"
            },
            "scope": 4277,
            "src": "3671:423:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4228,
              "nodeType": "Block",
              "src": "4431:312:14",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 4200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4198,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4191,
                      "src": "4446:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4454:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4446:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 4211,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 4209,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4191,
                        "src": "4563:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 4210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4571:1:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "4563:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "496e76616c696420706f6f6c20696e6465782e",
                            "id": 4221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4691:21:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f064d32bce73393de16c3915d8ab96d969f494ba73fb82967516763c090099ea",
                              "typeString": "literal_string \"Invalid pool index.\""
                            },
                            "value": "Invalid pool index."
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_f064d32bce73393de16c3915d8ab96d969f494ba73fb82967516763c090099ea",
                              "typeString": "literal_string \"Invalid pool index.\""
                            }
                          ],
                          "id": 4220,
                          "name": "revert",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            8452,
                            8453
                          ],
                          "referencedDeclaration": 8453,
                          "src": "4684:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (string memory) pure"
                          }
                        },
                        "id": 4222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4684:29:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 4223,
                      "nodeType": "ExpressionStatement",
                      "src": "4684:29:14"
                    },
                    "id": 4224,
                    "nodeType": "IfStatement",
                    "src": "4559:154:14",
                    "trueBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 4215,
                                "name": "erc20Contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4193,
                                "src": "4617:13:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 4213,
                                "name": "CompoundPoolController",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4738,
                                "src": "4582:22:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_CompoundPoolController_$4738_$",
                                  "typeString": "type(library CompoundPoolController)"
                                }
                              },
                              "id": 4214,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "withdrawAll",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4737,
                              "src": "4582:34:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) returns (bool)"
                              }
                            },
                            "id": 4216,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4582:49:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "5769746864726177616c2066726f6d20436f6d706f756e64206661696c65642e",
                            "id": 4217,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4633:34:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_ec332a5b53013c4f77f05d3bafa76ec73388cbfd47878f160db3d755955a2b5a",
                              "typeString": "literal_string \"Withdrawal from Compound failed.\""
                            },
                            "value": "Withdrawal from Compound failed."
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_ec332a5b53013c4f77f05d3bafa76ec73388cbfd47878f160db3d755955a2b5a",
                              "typeString": "literal_string \"Withdrawal from Compound failed.\""
                            }
                          ],
                          "id": 4212,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            8450,
                            8451
                          ],
                          "referencedDeclaration": 8451,
                          "src": "4574:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 4218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4574:94:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 4219,
                      "nodeType": "ExpressionStatement",
                      "src": "4574:94:14"
                    }
                  },
                  "id": 4225,
                  "nodeType": "IfStatement",
                  "src": "4442:271:14",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4204,
                              "name": "erc20Contract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4193,
                              "src": "4496:13:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 4202,
                              "name": "DydxPoolController",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5228,
                              "src": "4465:18:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_DydxPoolController_$5228_$",
                                "typeString": "type(library DydxPoolController)"
                              }
                            },
                            "id": 4203,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdrawAll",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5227,
                            "src": "4465:30:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) returns (bool)"
                            }
                          },
                          "id": 4205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4465:45:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "5769746864726177616c2066726f6d2064596458206661696c65642e",
                          "id": 4206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4512:30:14",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_6ad2a09603baf43d012ec04f1dfee1065eb04e928c14ed37a89e6f209cec55b4",
                            "typeString": "literal_string \"Withdrawal from dYdX failed.\""
                          },
                          "value": "Withdrawal from dYdX failed."
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_6ad2a09603baf43d012ec04f1dfee1065eb04e928c14ed37a89e6f209cec55b4",
                            "typeString": "literal_string \"Withdrawal from dYdX failed.\""
                          }
                        ],
                        "id": 4201,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          8450,
                          8451
                        ],
                        "referencedDeclaration": 8451,
                        "src": "4457:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 4207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4457:86:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4208,
                    "nodeType": "ExpressionStatement",
                    "src": "4457:86:14"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 4226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4731:4:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4197,
                  "id": 4227,
                  "nodeType": "Return",
                  "src": "4724:11:14"
                }
              ]
            },
            "documentation": "@dev Withdraws all funds from the specified pool.\n@param pool The index of the pool.\n@param erc20Contract The ERC20 contract of the token to be withdrawn.\n@return Boolean indicating success.",
            "id": 4229,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawAllFromPool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4191,
                  "name": "pool",
                  "nodeType": "VariableDeclaration",
                  "scope": 4229,
                  "src": "4372:10:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4190,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4372:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4193,
                  "name": "erc20Contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 4229,
                  "src": "4384:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4192,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4384:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4371:35:14"
            },
            "returnParameters": {
              "id": 4197,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4196,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4229,
                  "src": "4425:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4195,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4425:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4424:6:14"
            },
            "scope": 4277,
            "src": "4343:400:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4249,
              "nodeType": "Block",
              "src": "5107:141:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4241,
                            "name": "erc20Contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4231,
                            "src": "5159:13:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 4242,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4233,
                            "src": "5174:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 4239,
                            "name": "ZeroExExchangeController",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4483,
                            "src": "5126:24:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ZeroExExchangeController_$4483_$",
                              "typeString": "type(library ZeroExExchangeController)"
                            }
                          },
                          "id": 4240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "approve",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4358,
                          "src": "5126:32:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) returns (bool)"
                          }
                        },
                        "id": 4243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5126:55:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "417070726f76616c206f6620746f6b656e7320746f203078206661696c65642e",
                        "id": 4244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5183:34:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d8c23b8797dcbff5c0892f5a738dd5c3ed0451530c98460977652d9c6d9fef6",
                          "typeString": "literal_string \"Approval of tokens to 0x failed.\""
                        },
                        "value": "Approval of tokens to 0x failed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d8c23b8797dcbff5c0892f5a738dd5c3ed0451530c98460977652d9c6d9fef6",
                          "typeString": "literal_string \"Approval of tokens to 0x failed.\""
                        }
                      ],
                      "id": 4238,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8450,
                        8451
                      ],
                      "referencedDeclaration": 8451,
                      "src": "5118:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5118:100:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4246,
                  "nodeType": "ExpressionStatement",
                  "src": "5118:100:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 4247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5236:4:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4237,
                  "id": 4248,
                  "nodeType": "Return",
                  "src": "5229:11:14"
                }
              ]
            },
            "documentation": "@dev Approves tokens to 0x without spending gas on every deposit.\n@param erc20Contract The ERC20 contract of the token to be approved.\n@param amount The amount of tokens to be approved.\n@return Boolean indicating success.",
            "id": 4250,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approveTo0x",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4231,
                  "name": "erc20Contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 4250,
                  "src": "5044:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4230,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5044:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4233,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4250,
                  "src": "5067:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4232,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5067:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5043:39:14"
            },
            "returnParameters": {
              "id": 4237,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4236,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4250,
                  "src": "5101:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4235,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5101:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5100:6:14"
            },
            "scope": 4277,
            "src": "5023:225:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4275,
              "nodeType": "Block",
              "src": "6129:132:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4269,
                        "name": "orders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4253,
                        "src": "6199:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Order_$6358_memory_$dyn_memory_ptr",
                          "typeString": "struct LibOrder.Order memory[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4270,
                        "name": "signatures",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4256,
                        "src": "6207:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4271,
                        "name": "takerAssetFillAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4258,
                        "src": "6219:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4272,
                        "name": "protocolFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4260,
                        "src": "6241:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_Order_$6358_memory_$dyn_memory_ptr",
                          "typeString": "struct LibOrder.Order memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4267,
                        "name": "ZeroExExchangeController",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4483,
                        "src": "6147:24:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ZeroExExchangeController_$4483_$",
                          "typeString": "type(library ZeroExExchangeController)"
                        }
                      },
                      "id": 4268,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketSellOrdersFillOrKill",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4420,
                      "src": "6147:51:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_Order_$6358_memory_$dyn_memory_ptr_$_t_array$_t_bytes_memory_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
                        "typeString": "function (struct LibOrder.Order memory[] memory,bytes memory[] memory,uint256,uint256) returns (uint256[2] memory)"
                      }
                    },
                    "id": 4273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6147:106:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                      "typeString": "uint256[2] memory"
                    }
                  },
                  "functionReturnParameters": 4266,
                  "id": 4274,
                  "nodeType": "Return",
                  "src": "6140:113:14"
                }
              ]
            },
            "documentation": "@dev Fills 0x exchange orders up to a certain amount of input and up to a certain price.\nWe should be able to make this function external and use calldata for all parameters, but Solidity does not support calldata structs (https://github.com/ethereum/solidity/issues/5479).\n@param orders The limit orders to be filled in ascending order of price.\n@param signatures The signatures for the orders.\n@param takerAssetFillAmount The amount of the taker asset to sell (excluding taker fees).\n@param protocolFee The protocol fee in ETH to pay to 0x.\n@return Array containing the input amount sold and output amount bought.",
            "id": 4276,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "marketSell0xOrdersFillOrKill",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4253,
                  "name": "orders",
                  "nodeType": "VariableDeclaration",
                  "scope": 4276,
                  "src": "5984:30:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$6358_memory_$dyn_memory_ptr",
                    "typeString": "struct LibOrder.Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 4251,
                      "name": "LibOrder.Order",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 6358,
                      "src": "5984:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$6358_storage_ptr",
                        "typeString": "struct LibOrder.Order"
                      }
                    },
                    "id": 4252,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5984:16:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$6358_storage_$dyn_storage_ptr",
                      "typeString": "struct LibOrder.Order[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4256,
                  "name": "signatures",
                  "nodeType": "VariableDeclaration",
                  "scope": 4276,
                  "src": "6016:25:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4254,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "6016:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 4255,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "6016:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4258,
                  "name": "takerAssetFillAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4276,
                  "src": "6043:28:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4257,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6043:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4260,
                  "name": "protocolFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 4276,
                  "src": "6073:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4259,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6073:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5983:110:14"
            },
            "returnParameters": {
              "id": 4266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4265,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4276,
                  "src": "6110:17:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4262,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6110:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4264,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 4263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6118:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "6110:10:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6109:19:14"
            },
            "scope": 4277,
            "src": "5946:315:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 4278,
        "src": "1129:5135:14"
      }
    ],
    "src": "621:5645:14"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {
    "1": {
      "events": {},
      "links": {},
      "address": "0x52D6bB688A51831E95291d3BF02D0D7dA79Aaa63",
      "transactionHash": "0xd744e5ffdea643cd5f2cbb95c029287a50a92997c8ed2e0f975ed13158971d9a"
    }
  },
  "schemaVersion": "3.2.0",
  "updatedAt": "2020-06-29T14:20:50.558Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "This library handles deposits to and withdrawals from the liquidity pools that power RariFund as well as currency exchanges via 0x.",
    "methods": {
      "approveTo0x(address,uint256)": {
        "details": "Approves tokens to 0x without spending gas on every deposit.",
        "params": {
          "amount": "The amount of tokens to be approved.",
          "erc20Contract": "The ERC20 contract of the token to be approved."
        },
        "return": "Boolean indicating success."
      },
      "approveToPool(uint8,address,uint256)": {
        "details": "Approves tokens to the pool without spending gas on every deposit.",
        "params": {
          "amount": "The amount of tokens to be approved.",
          "erc20Contract": "The ERC20 contract of the token to be approved.",
          "pool": "The index of the pool."
        },
        "return": "Boolean indicating success."
      },
      "depositToPool(uint8,address,uint256)": {
        "details": "Deposits funds to the specified pool.",
        "params": {
          "amount": "The amount of tokens to be deposited.",
          "erc20Contract": "The ERC20 contract of the token to be deposited.",
          "pool": "The index of the pool."
        },
        "return": "Boolean indicating success."
      },
      "getPoolBalance(uint8,address)": {
        "details": "Returns the calling address's balance of the specified currency in the specified pool. Ideally, we can add the view modifier, but Compound's `getUnderlyingBalance` function (called by `CompoundPoolController.getBalance`) potentially modifies the state.",
        "params": {
          "erc20Contract": "The ERC20 contract of the token.",
          "pool": "The index of the pool."
        }
      },
      "marketSell0xOrdersFillOrKill(LibOrder.Order[],bytes[],uint256,uint256)": {
        "details": "Fills 0x exchange orders up to a certain amount of input and up to a certain price. We should be able to make this function external and use calldata for all parameters, but Solidity does not support calldata structs (https://github.com/ethereum/solidity/issues/5479).",
        "params": {
          "orders": "The limit orders to be filled in ascending order of price.",
          "protocolFee": "The protocol fee in ETH to pay to 0x.",
          "signatures": "The signatures for the orders.",
          "takerAssetFillAmount": "The amount of the taker asset to sell (excluding taker fees)."
        },
        "return": "Array containing the input amount sold and output amount bought."
      },
      "withdrawAllFromPool(uint8,address)": {
        "details": "Withdraws all funds from the specified pool.",
        "params": {
          "erc20Contract": "The ERC20 contract of the token to be withdrawn.",
          "pool": "The index of the pool."
        },
        "return": "Boolean indicating success."
      },
      "withdrawFromPool(uint8,address,uint256)": {
        "details": "Withdraws funds from the specified pool.",
        "params": {
          "amount": "The amount of tokens to be withdrawn.",
          "erc20Contract": "The ERC20 contract of the token to be withdrawn.",
          "pool": "The index of the pool."
        },
        "return": "Boolean indicating success."
      }
    },
    "title": "RariFundController"
  },
  "userdoc": {
    "methods": {}
  }
}