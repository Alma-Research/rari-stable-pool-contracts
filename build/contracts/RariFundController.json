{
  "contractName": "RariFundController",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This library handles deposits to and withdrawals from the liquidity pools that power RariFund as well as currency exchanges via 0x.\",\"methods\":{\"approveTo0x(address,uint256)\":{\"details\":\"Approves tokens to 0x without spending gas on every deposit.\",\"params\":{\"amount\":\"The amount of tokens to be approved.\",\"erc20Contract\":\"The ERC20 contract of the token to be approved.\"},\"return\":\"Boolean indicating success.\"},\"approveToPool(uint8,address,uint256)\":{\"details\":\"Approves tokens to the pool without spending gas on every deposit.\",\"params\":{\"amount\":\"The amount of tokens to be approved.\",\"erc20Contract\":\"The ERC20 contract of the token to be approved.\",\"pool\":\"The index of the pool.\"},\"return\":\"Boolean indicating success.\"},\"depositToPool(uint8,address,uint256)\":{\"details\":\"Deposits funds to the specified pool.\",\"params\":{\"amount\":\"The amount of tokens to be deposited.\",\"erc20Contract\":\"The ERC20 contract of the token to be deposited.\",\"pool\":\"The index of the pool.\"},\"return\":\"Boolean indicating success.\"},\"getPoolBalance(uint8,address)\":{\"details\":\"Returns the calling address's balance of the specified currency in the specified pool. Ideally, we can add the view modifier, but Compound's `getUnderlyingBalance` function (called by `CompoundPoolController.getBalance`) potentially modifies the state.\",\"params\":{\"erc20Contract\":\"The ERC20 contract of the token.\",\"pool\":\"The index of the pool.\"}},\"marketSell0xOrdersFillOrKill(LibOrder.Order[],bytes[],uint256,uint256)\":{\"details\":\"Fills 0x exchange orders up to a certain amount of input and up to a certain price. We should be able to make this function external and use calldata for all parameters, but Solidity does not support calldata structs (https://github.com/ethereum/solidity/issues/5479).\",\"params\":{\"orders\":\"The limit orders to be filled in ascending order of price.\",\"protocolFee\":\"The protocol fee in ETH to pay to 0x.\",\"signatures\":\"The signatures for the orders.\",\"takerAssetFillAmount\":\"The amount of the taker asset to sell (excluding taker fees).\"},\"return\":\"Array containing the input amount sold and output amount bought.\"},\"withdrawAllFromPool(uint8,address)\":{\"details\":\"Withdraws all funds from the specified pool.\",\"params\":{\"erc20Contract\":\"The ERC20 contract of the token to be withdrawn.\",\"pool\":\"The index of the pool.\"},\"return\":\"Boolean indicating success.\"},\"withdrawFromPool(uint8,address,uint256)\":{\"details\":\"Withdraws funds from the specified pool.\",\"params\":{\"amount\":\"The amount of tokens to be withdrawn.\",\"erc20Contract\":\"The ERC20 contract of the token to be withdrawn.\",\"pool\":\"The index of the pool.\"},\"return\":\"Boolean indicating success.\"}},\"title\":\"RariFundController\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/david/rari-contracts-launch/contracts/lib/RariFundController.sol\":\"RariFundController\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/david/rari-contracts-launch/contracts/external/compound/CErc20.sol\":{\"keccak256\":\"0xdbaa774f7515e231323d9cf89297aadc6b94893360c916f96d92fb0808427991\",\"urls\":[\"bzz-raw://2432eeb0b1caa5ece2c793a6f416349d5e060c0727d161a7ac5ae1c8871457d6\",\"dweb:/ipfs/QmTXp8vLrwkj5f5JMDC1WX2kp9XXLbMHr78XpkpPeJfWsN\"]},\"/home/david/rari-contracts-launch/contracts/external/dydx/Getters.sol\":{\"keccak256\":\"0x4a9b28daee59e2b87c5beed1076e95fbc96f769e42423bda01ec723b44549d91\",\"urls\":[\"bzz-raw://2cf107cdee5647d069439ba6c5f17d9370d4ae718ebc4f6ae297d123f98af95d\",\"dweb:/ipfs/QmbthqBfbawLZZ9EJmpcdwtFPMMvr7vhcHcxoaBrAXUiiT\"]},\"/home/david/rari-contracts-launch/contracts/external/dydx/Operation.sol\":{\"keccak256\":\"0x202d5c176ebe31605576a91f2bb6c631137331c225a7b067558eee86c4a84974\",\"urls\":[\"bzz-raw://bf9cefea1126cf6eec6ec9bc0cc0c5271fda0d690b7cfe627412371c27f185f1\",\"dweb:/ipfs/QmQN7JgRdvsLGFTZyAsRqbc6BrWFKzLHJRQ7jntVgx6bt6\"]},\"/home/david/rari-contracts-launch/contracts/external/dydx/SoloMargin.sol\":{\"keccak256\":\"0x2b4ffe2834f34174e74388f29e41a6d7613da3c2e31ff3431aa5cab340a786ec\",\"urls\":[\"bzz-raw://9595a5d0ec6882a083c3c051ec56d6254954fbb3649b2c0c77160b30f308b755\",\"dweb:/ipfs/QmeHHCPiwPjtCdRfpFwGrjqjKpuVzuQKbeAbbCRVFFNjjx\"]},\"/home/david/rari-contracts-launch/contracts/external/dydx/lib/Account.sol\":{\"keccak256\":\"0xa6ddfaeadda74522bfc34d1effa41ec16f61c2ca8507357199f28069f8a5a422\",\"urls\":[\"bzz-raw://abe54954f5e3fb6cd6af6d0d94ebba97d257b02875e45788e4c5ae5ef074853f\",\"dweb:/ipfs/QmQ4rBopBUNUYQABMj3g2YQqbSAmKtuQoXgMFp4aMa338v\"]},\"/home/david/rari-contracts-launch/contracts/external/dydx/lib/Actions.sol\":{\"keccak256\":\"0xc26bbe9bf4bac61cb7da76e976d99bfee033dcc7a86f581f1df27ad843efb44b\",\"urls\":[\"bzz-raw://30d88c181b7ea0f1e3c47d7acc5c38efda93fc40e54a1d1e303415be2cf013f9\",\"dweb:/ipfs/QmduNLGfprnVgG3JBr4HcpT67ie547oEZDuVQL7QGub9Lk\"]},\"/home/david/rari-contracts-launch/contracts/external/dydx/lib/Types.sol\":{\"keccak256\":\"0xb8e6b2a30658b94417df2e5922efa6e834963952cb25f6737aaa2375ea26e7a1\",\"urls\":[\"bzz-raw://291775fbd7fc2021e8eb3c5ed0986d58e6192c081a94fd1c11e1af6e6aee9053\",\"dweb:/ipfs/Qmev7mWwXFUYnf68cG3WsuF3SS5mfbiTv2FLZ3zCAoYSby\"]},\"/home/david/rari-contracts-launch/contracts/lib/RariFundController.sol\":{\"keccak256\":\"0xba69c7952d2435879228f8efd5c334a6f9d575ec50ba3fa1d7dfbcf84ec97ad5\",\"urls\":[\"bzz-raw://3abb5bc1c15b92106a1a15d25ad10b2f24263023eb7a3d9956893761fd5d9e91\",\"dweb:/ipfs/QmXb1BBD2iXJ852rJGJXAh9zSLF2uk5UdyvVcgc4bjSPZR\"]},\"/home/david/rari-contracts-launch/contracts/lib/exchanges/ZeroExExchangeController.sol\":{\"keccak256\":\"0xefbefa561d3941e6732b06b136a434dd7ac67dc27485cfd982b8195906cfc1f2\",\"urls\":[\"bzz-raw://6b5da67e651171179e69579f5a4112e8b2bbb75d5c48e6016686b253a2d9f1f1\",\"dweb:/ipfs/Qmb4jZYAWwLea9Joo6Hfi6ZHS592vxnb3khuCGHpiJQBMs\"]},\"/home/david/rari-contracts-launch/contracts/lib/pools/CompoundPoolController.sol\":{\"keccak256\":\"0xe9641f2455374f51ebfd83091165d14d87e5e5ac8ed101cf4c4a33c0da70e541\",\"urls\":[\"bzz-raw://af2a307d07fecf47f82c89e324306755841fea4284b66ed6b03e164f35326585\",\"dweb:/ipfs/Qmb5v3D43MW1VqCC75HP9to1LB382AbFuw6kTLNtduthVu\"]},\"/home/david/rari-contracts-launch/contracts/lib/pools/DydxPoolController.sol\":{\"keccak256\":\"0xca5d05425f8e11e17bd305fd5faf779861586cec82bdea3d4f7a775ba22aebcb\",\"urls\":[\"bzz-raw://868b286469983a8feea14a813cdeaaa07c364a9824c34be2cd6acf96a3b68c42\",\"dweb:/ipfs/QmW2yN6bA1cfkyR4xH8Ypk5nxHBmeJr7TrZ4HjHVEicG6v\"]},\"@0x/contracts-exchange-libs/contracts/src/LibFillResults.sol\":{\"keccak256\":\"0xedb2f1e66e7ece2302b4dd19d0ef29a0ffeefddae7e9a81f7104155ac3cbb75b\",\"urls\":[\"bzz-raw://9a490801ffde73bb98aa3de52ef2d615894d188820ebe4c8cd340f5cd33462ad\",\"dweb:/ipfs/QmUTSaJ6GTvNoYCmpd9dv2mz25vakoLS9tQpiF1ohAUMFV\"]},\"@0x/contracts-exchange-libs/contracts/src/LibMath.sol\":{\"keccak256\":\"0xc331418f75cd832accf9dc439be811e10d99f1d2de3a9c0321fd3f127cdf1e54\",\"urls\":[\"bzz-raw://8a090ac0a55200b6f5624c41fff2ad21e5c673b7fcd0faf1bc88017087bbb1b2\",\"dweb:/ipfs/QmWhxuazHstpSCYDQJscHnAh6ngW7SHKT79t6yQHaJHgmi\"]},\"@0x/contracts-exchange-libs/contracts/src/LibMathRichErrors.sol\":{\"keccak256\":\"0xd2d047534facd6051467dd7a22d7ee9fd4e54e63bb5a5fae2511eac7332fad3d\",\"urls\":[\"bzz-raw://5e0aeedd55c996fd72004a14f5c528ed60b46631ca9599bbb7925c8342ca3be4\",\"dweb:/ipfs/QmNi1ozt4sYmn4pCobjU7FQ4KGUvK77pCyWUtbD18uQgVm\"]},\"@0x/contracts-exchange-libs/contracts/src/LibOrder.sol\":{\"keccak256\":\"0x1b7b1e1a2dff4249c6f6c500000342a805f372131797b6d7314435204a651ad4\",\"urls\":[\"bzz-raw://19c11b77022ccfa530af75f236ea00ecb92aa5476f96abbde268163660b3906b\",\"dweb:/ipfs/Qmf1MtwPLpocsBArn8Npyzu4AtMqSagYTuee8JdbMXXwHM\"]},\"@0x/contracts-exchange-libs/contracts/src/LibZeroExTransaction.sol\":{\"keccak256\":\"0x15e9dddfeb5b17b6d44a6be19b3f5f2cf2a2af24174cd623fcd731fb5204635a\",\"urls\":[\"bzz-raw://9014066b0fcf65ba9ecec88fc41e3413ef27c039159abd1203f0a48bb61e498d\",\"dweb:/ipfs/QmRAF6q5XrQV7pPZM1aaahRHAMba9hh6iUeRgW2fzFgn87\"]},\"@0x/contracts-exchange/contracts/src/interfaces/IAssetProxyDispatcher.sol\":{\"keccak256\":\"0x5aa3bcc134f9ff77da4f5ba42a17a62391f5adafd605658dcdcdd7c352d52e25\",\"urls\":[\"bzz-raw://92d355e026a2635f561621e7c835eac53ea15c40375bacc78f57c9c67b9793c4\",\"dweb:/ipfs/QmeiYbPmb3yBQ66V1HRKfDUoPGof6AxWsPQfJLfau4j7d4\"]},\"@0x/contracts-exchange/contracts/src/interfaces/IExchange.sol\":{\"keccak256\":\"0x208c082d30b28d322d5828ba2a6b880b4366c3f9d45853456424bbc036ede0cb\",\"urls\":[\"bzz-raw://d0e8dd59721cdacc192c5d44123cb84bcc78cdb067873e616f6a4f2533868418\",\"dweb:/ipfs/Qmb6QJTLz8QTyFVYPFjRRL7TwovSdALe3kk43fUoYZs1cg\"]},\"@0x/contracts-exchange/contracts/src/interfaces/IExchangeCore.sol\":{\"keccak256\":\"0xbccc362e85d592e0cc73108c3f7d8f66d58e449e42dbcc099442984446264b36\",\"urls\":[\"bzz-raw://383ae2d931d565fce7f046904601e1c54446c859a046af90c3d2591efe45a3f9\",\"dweb:/ipfs/QmTrfsEGAr38zgNYTHLjCuHfa7nw2hA64qvP8tLSMDgAjT\"]},\"@0x/contracts-exchange/contracts/src/interfaces/IMatchOrders.sol\":{\"keccak256\":\"0x57e052667a28152057a1ab25b958b55d9c79afe95ea5ab645692bad18e5504b3\",\"urls\":[\"bzz-raw://de35bf6f6ab53af3dcb6b09999840adbc161c1f59623940670f552b59a28b147\",\"dweb:/ipfs/QmebunP1nLEWkMPqbFY8iQewkaUUZH5xVAs3erGerqf264\"]},\"@0x/contracts-exchange/contracts/src/interfaces/IProtocolFees.sol\":{\"keccak256\":\"0x46928eb127258c64e030b298c935371eacc8beb8abc7ff09869d6f6ae99fa5a8\",\"urls\":[\"bzz-raw://b49ac75bdaec7a4767c15ad09640282ce1656b8e4112882a65b669d89474b5fe\",\"dweb:/ipfs/QmeRbdDvipy5x5MmSMiVXDT1pH3FeiT5v5ek7zNZom3378\"]},\"@0x/contracts-exchange/contracts/src/interfaces/ISignatureValidator.sol\":{\"keccak256\":\"0xfaff6f59dc8d9ab1003f8408e104d10d261208187e349153c075da0b71f400cd\",\"urls\":[\"bzz-raw://10290e91a633564fc0b1e732aec3321a3bf60122b79069f90e8ce037dd8799b5\",\"dweb:/ipfs/QmaTZxNZkimMxsjTCS47sJgnfaZkG4gcTgawLAadxjkjFv\"]},\"@0x/contracts-exchange/contracts/src/interfaces/ITransactions.sol\":{\"keccak256\":\"0x323b06d8e93e8fd96e563070bdccac7c760437326a845d75a0b1cc9224cbcda8\",\"urls\":[\"bzz-raw://3b2a2c7585783a8555d43817d7813e6465718d31fd6084e4f4c2c5d2560b8909\",\"dweb:/ipfs/QmQoiknyN4HvVvGQKbBqniD1Y2nc4R7KmXFNip7tGs5GvT\"]},\"@0x/contracts-exchange/contracts/src/interfaces/ITransferSimulator.sol\":{\"keccak256\":\"0x15a3952999620388de42961b069f2ebde0c5900d31a10a4b8d7dc6c315d1ef7e\",\"urls\":[\"bzz-raw://6324f0cfee0ea4a0cf68858fd634b7e9c085faa75d298fc582f3c76ce4400400\",\"dweb:/ipfs/QmVeyHXXGuUHKAu9c8MU8SwEcD3omsdogK86xcE7435gE6\"]},\"@0x/contracts-exchange/contracts/src/interfaces/IWrapperFunctions.sol\":{\"keccak256\":\"0xe463eb4df5a24faff9aa0eb5b957fb6249f86dd52d42c53fd21212926efc6fb0\",\"urls\":[\"bzz-raw://96d0862b48d996587122077eecb6b136a5dfa0d3de1e531dd665e9d5a4686732\",\"dweb:/ipfs/QmSBMvMxEhHJZDj5aWeSjSoV5QWCTyCNnzBTX9yuuU6nLL\"]},\"@0x/contracts-utils/contracts/src/LibEIP712.sol\":{\"keccak256\":\"0xe19c3cbc71fbea0fdb45c1763306550015d940bea9dbec5f3fd2edfe2165d673\",\"urls\":[\"bzz-raw://267d263f0453352a1ac8d8085a13c4976fb8c964eff8d3aab0a84173d1438efb\",\"dweb:/ipfs/QmbaRw85MYYP3KTmQ68gYdEnFyMqD7frwjxxwsj4j4JCr1\"]},\"@0x/contracts-utils/contracts/src/LibRichErrors.sol\":{\"keccak256\":\"0xe3ce6ded2fea3cc80998ca4d364bda530e273af0ba1c78d22a6cdadb6f64186e\",\"urls\":[\"bzz-raw://8239629dbcee9797a8f8157f03c2b78827b446787b4d53b3033a3e1ab538ad0b\",\"dweb:/ipfs/QmbttkX94CxMkS6t1K4He5bNwGKCRUhKqTt9pNsAL5ynst\"]},\"@0x/contracts-utils/contracts/src/LibSafeMath.sol\":{\"keccak256\":\"0xd0da9ac1905381832f6612774cb7eced3b4b60459d6bafa59f5424955b44c935\",\"urls\":[\"bzz-raw://ede4bbe2dac43c6cc4e3b7a22285e00d55b31fb8cc00b375c6ac4714298b7e6d\",\"dweb:/ipfs/QmWbN5qbJSNYrMMZMugaH5itTVSexe9yPsCPuArQVCLUgi\"]},\"@0x/contracts-utils/contracts/src/LibSafeMathRichErrors.sol\":{\"keccak256\":\"0xcf6adae04bd7af8e41fcd40ad148cc3d1cd5596bd42b01961b735c9b416a6572\",\"urls\":[\"bzz-raw://103791140e631e9d670bbc99e5f8e546f56061c5d49de97754006ce2c252d61e\",\"dweb:/ipfs/QmeRMyYFSk7n1sLzRSGqxcoX1sKQSdAQya6bRy6nseu6xX\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0x6f2c9955d65c522b80f4b8792f076512d2df947d2112cbc4d98a4781ed42ede2\",\"urls\":[\"bzz-raw://7d8ec81683520c06baeef3f7e06cd82bd6fd5fa611f26857f475f6c829540aff\",\"dweb:/ipfs/QmTDkFzKnrpiV1UKnSoiZAHPuguWzokrr4pFbSPvyaSo56\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]}},\"version\":1}",
  "bytecode": "0x612ee9610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100875760003560e01c8063a293d62c11610065578063a293d62c14610102578063db2138a014610122578063e889537b1461014f578063f0c6bcc31461016f57610087565b80637268315d1461008c5780638fe6b38d146100c257806393063500146100e2575b600080fd5b81801561009857600080fd5b506100ac6100a7366004611f32565b61019c565b6040516100b99190612b74565b60405180910390f35b8180156100ce57600080fd5b506100ac6100dd366004611d7a565b61022c565b8180156100ee57600080fd5b506100ac6100fd366004611f62565b610254565b81801561010e57600080fd5b506100ac61011d366004611f62565b6102c6565b81801561012e57600080fd5b5061014261013d366004611f32565b610328565b6040516100b99190612cf1565b81801561015b57600080fd5b506100ac61016a366004611f62565b610357565b81801561017b57600080fd5b5061018f61018a366004611e48565b6103b9565b6040516100b99190612b66565b600060ff83166101d9576101af826103d6565b6101d45760405162461bcd60e51b81526004016101cb90612c23565b60405180910390fd5b610222565b8260ff166001141561020a576101ee82610591565b6101d45760405162461bcd60e51b81526004016101cb90612cb3565b60405162461bcd60e51b81526004016101cb90612cc3565b5060015b92915050565b600061023883836106de565b6102225760405162461bcd60e51b81526004016101cb90612c33565b600060ff841661028957610268838361080c565b6102845760405162461bcd60e51b81526004016101cb90612be3565b6102bb565b8360ff166001141561020a5761029f83836109c6565b6102845760405162461bcd60e51b81526004016101cb90612c13565b5060015b9392505050565b600060ff84166102f6576102da8383610a74565b6102845760405162461bcd60e51b81526004016101cb90612bb3565b8360ff166001141561020a5761030c8383610b6f565b6102845760405162461bcd60e51b81526004016101cb90612c03565b600060ff83166103425761033b82610c4c565b9050610226565b8260ff166001141561020a5761033b82610d4b565b600060ff84166103875761036b8383610ee1565b6102845760405162461bcd60e51b81526004016101cb90612c23565b8360ff166001141561020a5761039d8383611013565b6102845760405162461bcd60e51b81526004016101cb90612cb3565b6103c1611738565b6103cd858585856110c1565b95945050505050565b6000806103e2836111e7565b90506103ec611756565b506040805180820182523081526000602082015281516001808252818401909352909160609190816020015b610420611756565b815260200190600190039081610418579050509050818160008151811061044357fe5b602002602001018190525061045661176d565b604080516080810190915260018082526020820190815260200160018152602001600081525090506060610488611796565b506040805161010081018252600180825260006020830181905282840186905260608084018a9052608084018290523060a085015260c084019190915260e083018590528351828152808501909452919290816020015b6104e7611796565b8152602001906001900390816104df579050509050818160008151811061050a57fe5b602090810291909101015260405163a67a6a4560e01b8152731e0447b19bb6ecfdae1e4ae1694b0c3659614e4e9063a67a6a459061054e9088908590600401612b0f565b600060405180830381600087803b15801561056857600080fd5b505af115801561057c573d6000803e3d6000fd5b5050505060019750505050505050505b919050565b60008061059d8361125b565b90506000816001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016105cd9190612acb565b60206040518083038186803b1580156105e557600080fd5b505afa1580156105f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061061d9190810190611f14565b9050600081116106325760009250505061058c565b60405163db006a7560e01b81526000906001600160a01b0384169063db006a7590610661908590600401612cf1565b602060405180830381600087803b15801561067b57600080fd5b505af115801561068f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106b39190810190611f14565b905080156106d35760405162461bcd60e51b81526004016101cb90612c73565b506001949350505050565b604051636eb1769f60e11b8152600090839082906001600160a01b0383169063dd62ed3e906107279030907395e6f48254609a6ee006f7d493c8e5fb97094cef90600401612ad9565b60206040518083038186803b15801561073f57600080fd5b505afa158015610753573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506107779190810190611f14565b9050808410156107c5576107c07395e6f48254609a6ee006f7d493c8e5fb97094cef6107a9838763ffffffff61133516565b6001600160a01b038516919063ffffffff61137716565b6106d3565b808411156106d3576106d37395e6f48254609a6ee006f7d493c8e5fb97094cef6107f5868463ffffffff61133516565b6001600160a01b038516919063ffffffff61148316565b600080610818846111e7565b9050610822611756565b506040805180820182523081526000602082015281516001808252818401909352909160609190816020015b610856611756565b81526020019060019003908161084e579050509050818160008151811061087957fe5b602002602001018190525061088c61176d565b604080516080810190915260018152602081016000815260200160008152602001879052905060606108bc611796565b5060408051610100810182526000808252602082018190528183018590526060808301899052608083018290523060a084015260c083019190915260e08201849052825160018082528185019094529192909190816020015b61091d611796565b815260200190600190039081610915579050509050818160008151811061094057fe5b602090810291909101015260405163a67a6a4560e01b8152731e0447b19bb6ecfdae1e4ae1694b0c3659614e4e9063a67a6a45906109849088908590600401612b0f565b600060405180830381600087803b15801561099e57600080fd5b505af11580156109b2573d6000803e3d6000fd5b5060019d9c50505050505050505050505050565b6000806109d28461125b565b90506000816001600160a01b031663a0712d68856040518263ffffffff1660e01b8152600401610a029190612cf1565b602060405180830381600087803b158015610a1c57600080fd5b505af1158015610a30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a549190810190611f14565b905080156106d35760405162461bcd60e51b81526004016101cb90612c83565b604051636eb1769f60e11b8152600090839082906001600160a01b0383169063dd62ed3e90610abd903090731e0447b19bb6ecfdae1e4ae1694b0c3659614e4e90600401612ad9565b60206040518083038186803b158015610ad557600080fd5b505afa158015610ae9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610b0d9190810190611f14565b905080841015610b3f576107c0731e0447b19bb6ecfdae1e4ae1694b0c3659614e4e6107a9838763ffffffff61133516565b808411156106d3576106d3731e0447b19bb6ecfdae1e4ae1694b0c3659614e4e6107f5868463ffffffff61133516565b600080610b7b8461125b565b604051636eb1769f60e11b815290915084906000906001600160a01b0383169063dd62ed3e90610bb19030908790600401612ad9565b60206040518083038186803b158015610bc957600080fd5b505afa158015610bdd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610c019190810190611f14565b905080851015610c2457610c1f836107a9838863ffffffff61133516565b610c40565b80851115610c4057610c40836107f5878463ffffffff61133516565b50600195945050505050565b600080610c58836111e7565b9050610c62611756565b50604080518082018252308152600060208201529051636a8194e760e01b8152606090731e0447b19bb6ecfdae1e4ae1694b0c3659614e4e90636a8194e790610caf908590600401612ce3565b60006040518083038186803b158015610cc757600080fd5b505afa158015610cdb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d039190810190611db4565b92505050808381518110610d1357fe5b602002602001015160000151610d2a5760006103cd565b808381518110610d3657fe5b60200260200101516020015195945050505050565b600080610d578361125b565b9050806001600160a01b031663a6afed956040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610d9457600080fd5b505af1158015610da8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610dcc9190810190611f14565b506102bf670de0b6b3a7640000610ed5836001600160a01b031663182df0f56040518163ffffffff1660e01b815260040160206040518083038186803b158015610e1557600080fd5b505afa158015610e29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610e4d9190810190611f14565b6040516370a0823160e01b81526001600160a01b038616906370a0823190610e79903090600401612acb565b60206040518083038186803b158015610e9157600080fd5b505afa158015610ea5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610ec99190810190611f14565b9063ffffffff61151316565b9063ffffffff61154d16565b600080610eed846111e7565b9050610ef7611756565b506040805180820182523081526000602082015281516001808252818401909352909160609190816020015b610f2b611756565b815260200190600190039081610f235790505090508181600081518110610f4e57fe5b6020026020010181905250610f6161176d565b60408051608081019091526000808252602082019081526020016000815260200187905290506060610f91611796565b506040805161010081018252600180825260006020830181905282840186905260608084018a9052608084018290523060a085015260c084019190915260e083018590528351828152808501909452919290816020015b610ff0611796565b815260200190600190039081610fe8579050509050818160008151811061094057fe5b60008061101f8461125b565b90506000816001600160a01b031663852a12e3856040518263ffffffff1660e01b815260040161104f9190612cf1565b602060405180830381600087803b15801561106957600080fd5b505af115801561107d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506110a19190810190611f14565b905080156106d35760405162461bcd60e51b81526004016101cb90612bc3565b6110c9611738565b60008551116110ea5760405162461bcd60e51b81526004016101cb90612b93565b835185511461110b5760405162461bcd60e51b81526004016101cb90612c63565b6000831161112b5760405162461bcd60e51b81526004016101cb90612c93565b6111336117e8565b60405163a6c3bf3360e01b81527361935cbdd02287b511119ddb11aeb42f1593b7ef9063a6c3bf33908590611170908a9089908b90600401612b34565b60a0604051808303818588803b15801561118957600080fd5b505af115801561119d573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052506111c29190810190611ef6565b6040805180820190915260208083015182529151918101919091529695505050505050565b600073a0b86991c6218b36c1d19d4a2e9eb0ce3606eb486001600160a01b03831614156112165750600261058c565b736b175474e89094c44da98b954eedeac495271d0f6001600160a01b03831614156112435750600361058c565b60405162461bcd60e51b81526004016101cb90612c43565b6000736b175474e89094c44da98b954eedeac495271d0f6001600160a01b038316141561129d5750735d3a536e4d6dbd6114cc1ead35777bab948e364361058c565b73a0b86991c6218b36c1d19d4a2e9eb0ce3606eb486001600160a01b03831614156112dd57507339aa39c021dfbae8fac545936693ac917d5e756361058c565b73dac17f958d2ee523a2206206994597c13d831ec76001600160a01b038316141561131d575073f650c3d88d12db855b8bf7d11be6c55a4e07dcc961058c565b60405162461bcd60e51b81526004016101cb90612ba3565b60006102bf83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061158f565b600061142182604051806060016040528060298152602001612e7e60299139604051636eb1769f60e11b81526001600160a01b0388169063dd62ed3e906113c49030908a90600401612ad9565b60206040518083038186803b1580156113dc57600080fd5b505afa1580156113f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506114149190810190611f14565b919063ffffffff61158f16565b60405190915061147d90859063095ea7b360e01b906114469087908690602401612af4565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526115bb565b50505050565b600061142182856001600160a01b031663dd62ed3e30876040518363ffffffff1660e01b81526004016114b7929190612ad9565b60206040518083038186803b1580156114cf57600080fd5b505afa1580156114e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506115079190810190611f14565b9063ffffffff6116a016565b60008261152257506000610226565b8282028284828161152f57fe5b04146102bf5760405162461bcd60e51b81526004016101cb90612c53565b60006102bf83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506116c5565b600081848411156115b35760405162461bcd60e51b81526004016101cb9190612b82565b505050900390565b6115cd826001600160a01b03166116fc565b6115e95760405162461bcd60e51b81526004016101cb90612cd3565b60006060836001600160a01b0316836040516116059190612abf565b6000604051808303816000865af19150503d8060008114611642576040519150601f19603f3d011682016040523d82523d6000602084013e611647565b606091505b5091509150816116695760405162461bcd60e51b81526004016101cb90612bf3565b80511561147d57808060200190516116849190810190611ed8565b61147d5760405162461bcd60e51b81526004016101cb90612ca3565b6000828201838110156102bf5760405162461bcd60e51b81526004016101cb90612bd3565b600081836116e65760405162461bcd60e51b81526004016101cb9190612b82565b5060008385816116f257fe5b0495945050505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061173057508115155b949350505050565b60405180604001604052806002906020820280388339509192915050565b604080518082019091526000808252602082015290565b604080516080810190915260008082526020820190815260200160008152602001600081525090565b6040805161010081018252600080825260208201529081016117b661176d565b8152602001600081526020016000815260200160006001600160a01b0316815260200160008152602001606081525090565b6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b803561022681612e45565b805161022681612e45565b600082601f83011261183e57600080fd5b815161185161184c82612d26565b612cff565b9150818183526020840193506020810190508385602084028201111561187657600080fd5b60005b838110156118a2578161188c8882611822565b8452506020928301929190910190600101611879565b5050505092915050565b600082601f8301126118bd57600080fd5b81356118cb61184c82612d26565b81815260209384019390925082018360005b838110156118a257813586016118f38882611a55565b84525060209283019291909101906001016118dd565b600082601f83011261191a57600080fd5b813561192861184c82612d26565b81815260209384019390925082018360005b838110156118a257813586016119508882611b27565b845250602092830192919091019060010161193a565b600082601f83011261197757600080fd5b815161198561184c82612d26565b915081818352602084019350602081019050838560408402820111156119aa57600080fd5b60005b838110156118a257816119c08882611ccc565b845250602090920191604091909101906001016119ad565b600082601f8301126119e957600080fd5b81516119f761184c82612d26565b91508181835260208401935060208101905083856040840282011115611a1c57600080fd5b60005b838110156118a25781611a328882611d13565b84525060209092019160409190910190600101611a1f565b805161022681612e59565b600082601f830112611a6657600080fd5b8135611a7461184c82612d47565b91508082526020830160208301858383011115611a9057600080fd5b611a9b838284612dec565b50505092915050565b600060a08284031215611ab657600080fd5b611ac060a0612cff565b90506000611ace8484611d64565b8252506020611adf84848301611d64565b6020830152506040611af384828501611d64565b6040830152506060611b0784828501611d64565b6060830152506080611b1b84828501611d64565b60808301525092915050565b60006101c08284031215611b3a57600080fd5b611b456101c0612cff565b90506000611b538484611817565b8252506020611b6484848301611817565b6020830152506040611b7884828501611817565b6040830152506060611b8c84828501611817565b6060830152506080611ba084828501611d59565b60808301525060a0611bb484828501611d59565b60a08301525060c0611bc884828501611d59565b60c08301525060e0611bdc84828501611d59565b60e083015250610100611bf184828501611d59565b61010083015250610120611c0784828501611d59565b6101208301525061014082013567ffffffffffffffff811115611c2957600080fd5b611c3584828501611a55565b6101408301525061016082013567ffffffffffffffff811115611c5757600080fd5b611c6384828501611a55565b6101608301525061018082013567ffffffffffffffff811115611c8557600080fd5b611c9184828501611a55565b610180830152506101a082013567ffffffffffffffff811115611cb357600080fd5b611cbf84828501611a55565b6101a08301525092915050565b600060408284031215611cde57600080fd5b611ce86040612cff565b90506000611cf68484611a4a565b8252506020611d0784848301611d4e565b60208301525092915050565b600060408284031215611d2557600080fd5b611d2f6040612cff565b90506000611d3d8484611a4a565b8252506020611d0784848301611d64565b805161022681612e62565b803561022681612e6b565b805161022681612e6b565b803561022681612e74565b60008060408385031215611d8d57600080fd5b6000611d998585611817565b9250506020611daa85828601611d59565b9150509250929050565b600080600060608486031215611dc957600080fd5b835167ffffffffffffffff811115611de057600080fd5b611dec8682870161182d565b935050602084015167ffffffffffffffff811115611e0957600080fd5b611e1586828701611966565b925050604084015167ffffffffffffffff811115611e3257600080fd5b611e3e868287016119d8565b9150509250925092565b60008060008060808587031215611e5e57600080fd5b843567ffffffffffffffff811115611e7557600080fd5b611e8187828801611909565b945050602085013567ffffffffffffffff811115611e9e57600080fd5b611eaa878288016118ac565b9350506040611ebb87828801611d59565b9250506060611ecc87828801611d59565b91505092959194509250565b600060208284031215611eea57600080fd5b60006117308484611a4a565b600060a08284031215611f0857600080fd5b60006117308484611aa4565b600060208284031215611f2657600080fd5b60006117308484611d64565b60008060408385031215611f4557600080fd5b6000611f518585611d6f565b9250506020611daa85828601611817565b600080600060608486031215611f7757600080fd5b6000611f838686611d6f565b9350506020611f9486828701611817565b9250506040611e3e86828701611d59565b60006102bf8383612215565b60006102bf8383612874565b6000611fc98383612960565b505060400190565b60006102bf8383612984565b6000611fe98383612ab6565b505060200190565b611ffa81612d8b565b82525050565b600061200b82612d78565b6120158185612d82565b93508360208202850161202785612d6f565b8060005b8581101561206157848403895281516120448582611fa5565b945061204f83612d6f565b60209a909a019992505060010161202b565b5091979650505050505050565b600061207982612d78565b6120838185612d82565b93508360208202850161209585612d6f565b8060005b8581101561206157848403895281516120b28582611fb1565b94506120bd83612d6f565b60209a909a0199925050600101612099565b60006120da82612d78565b6120e48185612d82565b93506120ef83612d6f565b8060005b8381101561211d5781516121078882611fbd565b975061211283612d6f565b9250506001016120f3565b509495945050505050565b600061213382612d78565b61213d8185612d82565b93508360208202850161214f85612d6f565b8060005b85811015612061578484038952815161216c8582611fd1565b945061217783612d6f565b60209a909a0199925050600101612153565b61219281612d7c565b61219c818461058c565b92506121a782612d75565b8060005b838110156121d55781516121bf8782611fdd565b96506121ca83612d6f565b9250506001016121ab565b505050505050565b611ffa81612d96565b60006121f182612d78565b6121fb818561058c565b935061220b818560208601612df8565b9290920192915050565b600061222082612d78565b61222a8185612d82565b935061223a818560208601612df8565b61224381612e24565b9093019392505050565b611ffa81612dd6565b611ffa81612de1565b600061226c603683612d82565b7f4174206c65617374206f6e65206f7264657220616e64206d61746368696e672081527539b4b3b730ba3ab9329034b9903932b8bab4b932b21760511b602082015260400192915050565b60006122c4604383612d82565b7f537570706f7274656420436f6d706f756e642063546f6b656e2061646472657381527f73206e6f7420666f756e6420666f72207468697320746f6b656e20616464726560208201526239b99760e91b604082015260600192915050565b600061232f602283612d82565b7f417070726f76616c206f6620746f6b656e7320746f2064596458206661696c65815261321760f11b602082015260400192915050565b6000612373604c83612d82565b7f4572726f722063616c6c696e672072656465656d556e6465726c79696e67206f81527f6e20436f6d706f756e642063546f6b656e3a206572726f7220636f6465206e6f60208201526b07420657175616c20746f20360a41b604082015260600192915050565b60006123e7601b83612d82565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000815260200192915050565b6000612420601783612d82565b7f4465706f73697420746f2064596458206661696c65642e000000000000000000815260200192915050565b6000612459602083612d82565b7f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815260200192915050565b6000612492602683612d82565b7f417070726f76616c206f6620746f6b656e7320746f20436f6d706f756e64206681526530b4b632b21760d11b602082015260400192915050565b60006124da601b83612d82565b7f4465706f73697420746f20436f6d706f756e64206661696c65642e0000000000815260200192915050565b6000612513601c83612d82565b7f5769746864726177616c2066726f6d2064596458206661696c65642e00000000815260200192915050565b600061254c602083612d82565b7f417070726f76616c206f6620746f6b656e7320746f203078206661696c65642e815260200192915050565b6000612585603783612d82565b7f537570706f727465642064596458206d61726b6574206e6f7420666f756e642081527f666f72207468697320746f6b656e20616464726573732e000000000000000000602082015260400192915050565b60006125e4602183612d82565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f8152607760f81b602082015260400192915050565b6000612627603183612d82565b7f4d69736d61746368206265747765656e206e756d626572206f66206f72646572815270399030b7321039b4b3b730ba3ab932b99760791b602082015260400192915050565b600061267a604283612d82565b7f4572726f722063616c6c696e672072656465656d206f6e20436f6d706f756e6481527f2063546f6b656e3a206572726f7220636f6465206e6f7420657175616c20746f602082015261020360f41b604082015260600192915050565b60006126e4604083612d82565b7f4572726f722063616c6c696e67206d696e74206f6e20436f6d706f756e64206381527f546f6b656e3a206572726f7220636f6465206e6f7420657175616c20746f2030602082015260400192915050565b6000612743602f83612d82565b7f54616b65722061737365742066696c6c20616d6f756e74206d7573742062652081526e33b932b0ba32b9103a3430b710181760891b602082015260400192915050565b6000612794602a83612d82565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e8152691bdd081cdd58d8d9595960b21b602082015260400192915050565b60006127e0602083612d82565b7f5769746864726177616c2066726f6d20436f6d706f756e64206661696c65642e815260200192915050565b6000612819601383612d82565b7224b73b30b634b2103837b7b61034b73232bc1760691b815260200192915050565b6000612848601f83612d82565b7f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400815260200192915050565b8051600090610160840190612889858261224d565b50602083015161289c6020860182612ab6565b5060408301516128af6040860182612916565b5060608301516128c260c0860182612ab6565b5060808301516128d560e0860182612ab6565b5060a08301516128e9610100860182611ff1565b5060c08301516128fd610120860182612ab6565b5060e08301518482036101408601526103cd8282612215565b8051608083019061292784826121dd565b50602082015161293a6020850182612256565b50604082015161294d6040850182612256565b50606082015161147d6060850182612ab6565b805160408301906129718482611ff1565b50602082015161147d6020850182612ab6565b80516000906101c08401906129998582611ff1565b5060208301516129ac6020860182611ff1565b5060408301516129bf6040860182611ff1565b5060608301516129d26060860182611ff1565b5060808301516129e56080860182612ab6565b5060a08301516129f860a0860182612ab6565b5060c0830151612a0b60c0860182612ab6565b5060e0830151612a1e60e0860182612ab6565b50610100830151612a33610100860182612ab6565b50610120830151612a48610120860182612ab6565b50610140830151848203610140860152612a628282612215565b915050610160830151848203610160860152612a7e8282612215565b915050610180830151848203610180860152612a9a8282612215565b9150506101a08301518482036101a08601526103cd8282612215565b611ffa81612d75565b60006102bf82846121e6565b602081016102268284611ff1565b60408101612ae78285611ff1565b6102bf6020830184611ff1565b60408101612b028285611ff1565b6102bf6020830184612ab6565b60408082528101612b2081856120cf565b90508181036020830152611730818461206e565b60608082528101612b458186612128565b9050612b546020830185612ab6565b81810360408301526103cd8184612000565b604081016102268284612189565b6020810161022682846121dd565b602080825281016102bf8184612215565b602080825281016102268161225f565b60208082528101610226816122b7565b6020808252810161022681612322565b6020808252810161022681612366565b60208082528101610226816123da565b6020808252810161022681612413565b602080825281016102268161244c565b6020808252810161022681612485565b60208082528101610226816124cd565b6020808252810161022681612506565b602080825281016102268161253f565b6020808252810161022681612578565b60208082528101610226816125d7565b602080825281016102268161261a565b602080825281016102268161266d565b60208082528101610226816126d7565b6020808252810161022681612736565b6020808252810161022681612787565b60208082528101610226816127d3565b602080825281016102268161280c565b602080825281016102268161283b565b604081016102268284612960565b602081016102268284612ab6565b60405181810167ffffffffffffffff81118282101715612d1e57600080fd5b604052919050565b600067ffffffffffffffff821115612d3d57600080fd5b5060209081020190565b600067ffffffffffffffff821115612d5e57600080fd5b506020601f91909101601f19160190565b60200190565b90565b5190565b50600290565b90815260200190565b600061022682612dc4565b151590565b8061058c81612e2e565b8061058c81612e3b565b6fffffffffffffffffffffffffffffffff1690565b6001600160a01b031690565b60ff1690565b600061022682612d9b565b600061022682612da5565b82818337506000910152565b60005b83811015612e13578181015183820152602001612dfb565b8381111561147d5750506000910152565b601f01601f191690565b60098110612e3857fe5b50565b60028110612e3857fe5b612e4e81612d8b565b8114612e3857600080fd5b612e4e81612d96565b612e4e81612daf565b612e4e81612d75565b612e4e81612dd056fe5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa365627a7a72315820bcabad46f735684ada6175dad6ca81a5696b5f76ee78b94832edbdf7f893b5a16c6578706572696d656e74616cf564736f6c63430005110040",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600436106100875760003560e01c8063a293d62c11610065578063a293d62c14610102578063db2138a014610122578063e889537b1461014f578063f0c6bcc31461016f57610087565b80637268315d1461008c5780638fe6b38d146100c257806393063500146100e2575b600080fd5b81801561009857600080fd5b506100ac6100a7366004611f32565b61019c565b6040516100b99190612b74565b60405180910390f35b8180156100ce57600080fd5b506100ac6100dd366004611d7a565b61022c565b8180156100ee57600080fd5b506100ac6100fd366004611f62565b610254565b81801561010e57600080fd5b506100ac61011d366004611f62565b6102c6565b81801561012e57600080fd5b5061014261013d366004611f32565b610328565b6040516100b99190612cf1565b81801561015b57600080fd5b506100ac61016a366004611f62565b610357565b81801561017b57600080fd5b5061018f61018a366004611e48565b6103b9565b6040516100b99190612b66565b600060ff83166101d9576101af826103d6565b6101d45760405162461bcd60e51b81526004016101cb90612c23565b60405180910390fd5b610222565b8260ff166001141561020a576101ee82610591565b6101d45760405162461bcd60e51b81526004016101cb90612cb3565b60405162461bcd60e51b81526004016101cb90612cc3565b5060015b92915050565b600061023883836106de565b6102225760405162461bcd60e51b81526004016101cb90612c33565b600060ff841661028957610268838361080c565b6102845760405162461bcd60e51b81526004016101cb90612be3565b6102bb565b8360ff166001141561020a5761029f83836109c6565b6102845760405162461bcd60e51b81526004016101cb90612c13565b5060015b9392505050565b600060ff84166102f6576102da8383610a74565b6102845760405162461bcd60e51b81526004016101cb90612bb3565b8360ff166001141561020a5761030c8383610b6f565b6102845760405162461bcd60e51b81526004016101cb90612c03565b600060ff83166103425761033b82610c4c565b9050610226565b8260ff166001141561020a5761033b82610d4b565b600060ff84166103875761036b8383610ee1565b6102845760405162461bcd60e51b81526004016101cb90612c23565b8360ff166001141561020a5761039d8383611013565b6102845760405162461bcd60e51b81526004016101cb90612cb3565b6103c1611738565b6103cd858585856110c1565b95945050505050565b6000806103e2836111e7565b90506103ec611756565b506040805180820182523081526000602082015281516001808252818401909352909160609190816020015b610420611756565b815260200190600190039081610418579050509050818160008151811061044357fe5b602002602001018190525061045661176d565b604080516080810190915260018082526020820190815260200160018152602001600081525090506060610488611796565b506040805161010081018252600180825260006020830181905282840186905260608084018a9052608084018290523060a085015260c084019190915260e083018590528351828152808501909452919290816020015b6104e7611796565b8152602001906001900390816104df579050509050818160008151811061050a57fe5b602090810291909101015260405163a67a6a4560e01b8152731e0447b19bb6ecfdae1e4ae1694b0c3659614e4e9063a67a6a459061054e9088908590600401612b0f565b600060405180830381600087803b15801561056857600080fd5b505af115801561057c573d6000803e3d6000fd5b5050505060019750505050505050505b919050565b60008061059d8361125b565b90506000816001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016105cd9190612acb565b60206040518083038186803b1580156105e557600080fd5b505afa1580156105f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061061d9190810190611f14565b9050600081116106325760009250505061058c565b60405163db006a7560e01b81526000906001600160a01b0384169063db006a7590610661908590600401612cf1565b602060405180830381600087803b15801561067b57600080fd5b505af115801561068f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106b39190810190611f14565b905080156106d35760405162461bcd60e51b81526004016101cb90612c73565b506001949350505050565b604051636eb1769f60e11b8152600090839082906001600160a01b0383169063dd62ed3e906107279030907395e6f48254609a6ee006f7d493c8e5fb97094cef90600401612ad9565b60206040518083038186803b15801561073f57600080fd5b505afa158015610753573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506107779190810190611f14565b9050808410156107c5576107c07395e6f48254609a6ee006f7d493c8e5fb97094cef6107a9838763ffffffff61133516565b6001600160a01b038516919063ffffffff61137716565b6106d3565b808411156106d3576106d37395e6f48254609a6ee006f7d493c8e5fb97094cef6107f5868463ffffffff61133516565b6001600160a01b038516919063ffffffff61148316565b600080610818846111e7565b9050610822611756565b506040805180820182523081526000602082015281516001808252818401909352909160609190816020015b610856611756565b81526020019060019003908161084e579050509050818160008151811061087957fe5b602002602001018190525061088c61176d565b604080516080810190915260018152602081016000815260200160008152602001879052905060606108bc611796565b5060408051610100810182526000808252602082018190528183018590526060808301899052608083018290523060a084015260c083019190915260e08201849052825160018082528185019094529192909190816020015b61091d611796565b815260200190600190039081610915579050509050818160008151811061094057fe5b602090810291909101015260405163a67a6a4560e01b8152731e0447b19bb6ecfdae1e4ae1694b0c3659614e4e9063a67a6a45906109849088908590600401612b0f565b600060405180830381600087803b15801561099e57600080fd5b505af11580156109b2573d6000803e3d6000fd5b5060019d9c50505050505050505050505050565b6000806109d28461125b565b90506000816001600160a01b031663a0712d68856040518263ffffffff1660e01b8152600401610a029190612cf1565b602060405180830381600087803b158015610a1c57600080fd5b505af1158015610a30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a549190810190611f14565b905080156106d35760405162461bcd60e51b81526004016101cb90612c83565b604051636eb1769f60e11b8152600090839082906001600160a01b0383169063dd62ed3e90610abd903090731e0447b19bb6ecfdae1e4ae1694b0c3659614e4e90600401612ad9565b60206040518083038186803b158015610ad557600080fd5b505afa158015610ae9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610b0d9190810190611f14565b905080841015610b3f576107c0731e0447b19bb6ecfdae1e4ae1694b0c3659614e4e6107a9838763ffffffff61133516565b808411156106d3576106d3731e0447b19bb6ecfdae1e4ae1694b0c3659614e4e6107f5868463ffffffff61133516565b600080610b7b8461125b565b604051636eb1769f60e11b815290915084906000906001600160a01b0383169063dd62ed3e90610bb19030908790600401612ad9565b60206040518083038186803b158015610bc957600080fd5b505afa158015610bdd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610c019190810190611f14565b905080851015610c2457610c1f836107a9838863ffffffff61133516565b610c40565b80851115610c4057610c40836107f5878463ffffffff61133516565b50600195945050505050565b600080610c58836111e7565b9050610c62611756565b50604080518082018252308152600060208201529051636a8194e760e01b8152606090731e0447b19bb6ecfdae1e4ae1694b0c3659614e4e90636a8194e790610caf908590600401612ce3565b60006040518083038186803b158015610cc757600080fd5b505afa158015610cdb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d039190810190611db4565b92505050808381518110610d1357fe5b602002602001015160000151610d2a5760006103cd565b808381518110610d3657fe5b60200260200101516020015195945050505050565b600080610d578361125b565b9050806001600160a01b031663a6afed956040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610d9457600080fd5b505af1158015610da8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610dcc9190810190611f14565b506102bf670de0b6b3a7640000610ed5836001600160a01b031663182df0f56040518163ffffffff1660e01b815260040160206040518083038186803b158015610e1557600080fd5b505afa158015610e29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610e4d9190810190611f14565b6040516370a0823160e01b81526001600160a01b038616906370a0823190610e79903090600401612acb565b60206040518083038186803b158015610e9157600080fd5b505afa158015610ea5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610ec99190810190611f14565b9063ffffffff61151316565b9063ffffffff61154d16565b600080610eed846111e7565b9050610ef7611756565b506040805180820182523081526000602082015281516001808252818401909352909160609190816020015b610f2b611756565b815260200190600190039081610f235790505090508181600081518110610f4e57fe5b6020026020010181905250610f6161176d565b60408051608081019091526000808252602082019081526020016000815260200187905290506060610f91611796565b506040805161010081018252600180825260006020830181905282840186905260608084018a9052608084018290523060a085015260c084019190915260e083018590528351828152808501909452919290816020015b610ff0611796565b815260200190600190039081610fe8579050509050818160008151811061094057fe5b60008061101f8461125b565b90506000816001600160a01b031663852a12e3856040518263ffffffff1660e01b815260040161104f9190612cf1565b602060405180830381600087803b15801561106957600080fd5b505af115801561107d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506110a19190810190611f14565b905080156106d35760405162461bcd60e51b81526004016101cb90612bc3565b6110c9611738565b60008551116110ea5760405162461bcd60e51b81526004016101cb90612b93565b835185511461110b5760405162461bcd60e51b81526004016101cb90612c63565b6000831161112b5760405162461bcd60e51b81526004016101cb90612c93565b6111336117e8565b60405163a6c3bf3360e01b81527361935cbdd02287b511119ddb11aeb42f1593b7ef9063a6c3bf33908590611170908a9089908b90600401612b34565b60a0604051808303818588803b15801561118957600080fd5b505af115801561119d573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052506111c29190810190611ef6565b6040805180820190915260208083015182529151918101919091529695505050505050565b600073a0b86991c6218b36c1d19d4a2e9eb0ce3606eb486001600160a01b03831614156112165750600261058c565b736b175474e89094c44da98b954eedeac495271d0f6001600160a01b03831614156112435750600361058c565b60405162461bcd60e51b81526004016101cb90612c43565b6000736b175474e89094c44da98b954eedeac495271d0f6001600160a01b038316141561129d5750735d3a536e4d6dbd6114cc1ead35777bab948e364361058c565b73a0b86991c6218b36c1d19d4a2e9eb0ce3606eb486001600160a01b03831614156112dd57507339aa39c021dfbae8fac545936693ac917d5e756361058c565b73dac17f958d2ee523a2206206994597c13d831ec76001600160a01b038316141561131d575073f650c3d88d12db855b8bf7d11be6c55a4e07dcc961058c565b60405162461bcd60e51b81526004016101cb90612ba3565b60006102bf83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061158f565b600061142182604051806060016040528060298152602001612e7e60299139604051636eb1769f60e11b81526001600160a01b0388169063dd62ed3e906113c49030908a90600401612ad9565b60206040518083038186803b1580156113dc57600080fd5b505afa1580156113f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506114149190810190611f14565b919063ffffffff61158f16565b60405190915061147d90859063095ea7b360e01b906114469087908690602401612af4565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526115bb565b50505050565b600061142182856001600160a01b031663dd62ed3e30876040518363ffffffff1660e01b81526004016114b7929190612ad9565b60206040518083038186803b1580156114cf57600080fd5b505afa1580156114e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506115079190810190611f14565b9063ffffffff6116a016565b60008261152257506000610226565b8282028284828161152f57fe5b04146102bf5760405162461bcd60e51b81526004016101cb90612c53565b60006102bf83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506116c5565b600081848411156115b35760405162461bcd60e51b81526004016101cb9190612b82565b505050900390565b6115cd826001600160a01b03166116fc565b6115e95760405162461bcd60e51b81526004016101cb90612cd3565b60006060836001600160a01b0316836040516116059190612abf565b6000604051808303816000865af19150503d8060008114611642576040519150601f19603f3d011682016040523d82523d6000602084013e611647565b606091505b5091509150816116695760405162461bcd60e51b81526004016101cb90612bf3565b80511561147d57808060200190516116849190810190611ed8565b61147d5760405162461bcd60e51b81526004016101cb90612ca3565b6000828201838110156102bf5760405162461bcd60e51b81526004016101cb90612bd3565b600081836116e65760405162461bcd60e51b81526004016101cb9190612b82565b5060008385816116f257fe5b0495945050505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061173057508115155b949350505050565b60405180604001604052806002906020820280388339509192915050565b604080518082019091526000808252602082015290565b604080516080810190915260008082526020820190815260200160008152602001600081525090565b6040805161010081018252600080825260208201529081016117b661176d565b8152602001600081526020016000815260200160006001600160a01b0316815260200160008152602001606081525090565b6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b803561022681612e45565b805161022681612e45565b600082601f83011261183e57600080fd5b815161185161184c82612d26565b612cff565b9150818183526020840193506020810190508385602084028201111561187657600080fd5b60005b838110156118a2578161188c8882611822565b8452506020928301929190910190600101611879565b5050505092915050565b600082601f8301126118bd57600080fd5b81356118cb61184c82612d26565b81815260209384019390925082018360005b838110156118a257813586016118f38882611a55565b84525060209283019291909101906001016118dd565b600082601f83011261191a57600080fd5b813561192861184c82612d26565b81815260209384019390925082018360005b838110156118a257813586016119508882611b27565b845250602092830192919091019060010161193a565b600082601f83011261197757600080fd5b815161198561184c82612d26565b915081818352602084019350602081019050838560408402820111156119aa57600080fd5b60005b838110156118a257816119c08882611ccc565b845250602090920191604091909101906001016119ad565b600082601f8301126119e957600080fd5b81516119f761184c82612d26565b91508181835260208401935060208101905083856040840282011115611a1c57600080fd5b60005b838110156118a25781611a328882611d13565b84525060209092019160409190910190600101611a1f565b805161022681612e59565b600082601f830112611a6657600080fd5b8135611a7461184c82612d47565b91508082526020830160208301858383011115611a9057600080fd5b611a9b838284612dec565b50505092915050565b600060a08284031215611ab657600080fd5b611ac060a0612cff565b90506000611ace8484611d64565b8252506020611adf84848301611d64565b6020830152506040611af384828501611d64565b6040830152506060611b0784828501611d64565b6060830152506080611b1b84828501611d64565b60808301525092915050565b60006101c08284031215611b3a57600080fd5b611b456101c0612cff565b90506000611b538484611817565b8252506020611b6484848301611817565b6020830152506040611b7884828501611817565b6040830152506060611b8c84828501611817565b6060830152506080611ba084828501611d59565b60808301525060a0611bb484828501611d59565b60a08301525060c0611bc884828501611d59565b60c08301525060e0611bdc84828501611d59565b60e083015250610100611bf184828501611d59565b61010083015250610120611c0784828501611d59565b6101208301525061014082013567ffffffffffffffff811115611c2957600080fd5b611c3584828501611a55565b6101408301525061016082013567ffffffffffffffff811115611c5757600080fd5b611c6384828501611a55565b6101608301525061018082013567ffffffffffffffff811115611c8557600080fd5b611c9184828501611a55565b610180830152506101a082013567ffffffffffffffff811115611cb357600080fd5b611cbf84828501611a55565b6101a08301525092915050565b600060408284031215611cde57600080fd5b611ce86040612cff565b90506000611cf68484611a4a565b8252506020611d0784848301611d4e565b60208301525092915050565b600060408284031215611d2557600080fd5b611d2f6040612cff565b90506000611d3d8484611a4a565b8252506020611d0784848301611d64565b805161022681612e62565b803561022681612e6b565b805161022681612e6b565b803561022681612e74565b60008060408385031215611d8d57600080fd5b6000611d998585611817565b9250506020611daa85828601611d59565b9150509250929050565b600080600060608486031215611dc957600080fd5b835167ffffffffffffffff811115611de057600080fd5b611dec8682870161182d565b935050602084015167ffffffffffffffff811115611e0957600080fd5b611e1586828701611966565b925050604084015167ffffffffffffffff811115611e3257600080fd5b611e3e868287016119d8565b9150509250925092565b60008060008060808587031215611e5e57600080fd5b843567ffffffffffffffff811115611e7557600080fd5b611e8187828801611909565b945050602085013567ffffffffffffffff811115611e9e57600080fd5b611eaa878288016118ac565b9350506040611ebb87828801611d59565b9250506060611ecc87828801611d59565b91505092959194509250565b600060208284031215611eea57600080fd5b60006117308484611a4a565b600060a08284031215611f0857600080fd5b60006117308484611aa4565b600060208284031215611f2657600080fd5b60006117308484611d64565b60008060408385031215611f4557600080fd5b6000611f518585611d6f565b9250506020611daa85828601611817565b600080600060608486031215611f7757600080fd5b6000611f838686611d6f565b9350506020611f9486828701611817565b9250506040611e3e86828701611d59565b60006102bf8383612215565b60006102bf8383612874565b6000611fc98383612960565b505060400190565b60006102bf8383612984565b6000611fe98383612ab6565b505060200190565b611ffa81612d8b565b82525050565b600061200b82612d78565b6120158185612d82565b93508360208202850161202785612d6f565b8060005b8581101561206157848403895281516120448582611fa5565b945061204f83612d6f565b60209a909a019992505060010161202b565b5091979650505050505050565b600061207982612d78565b6120838185612d82565b93508360208202850161209585612d6f565b8060005b8581101561206157848403895281516120b28582611fb1565b94506120bd83612d6f565b60209a909a0199925050600101612099565b60006120da82612d78565b6120e48185612d82565b93506120ef83612d6f565b8060005b8381101561211d5781516121078882611fbd565b975061211283612d6f565b9250506001016120f3565b509495945050505050565b600061213382612d78565b61213d8185612d82565b93508360208202850161214f85612d6f565b8060005b85811015612061578484038952815161216c8582611fd1565b945061217783612d6f565b60209a909a0199925050600101612153565b61219281612d7c565b61219c818461058c565b92506121a782612d75565b8060005b838110156121d55781516121bf8782611fdd565b96506121ca83612d6f565b9250506001016121ab565b505050505050565b611ffa81612d96565b60006121f182612d78565b6121fb818561058c565b935061220b818560208601612df8565b9290920192915050565b600061222082612d78565b61222a8185612d82565b935061223a818560208601612df8565b61224381612e24565b9093019392505050565b611ffa81612dd6565b611ffa81612de1565b600061226c603683612d82565b7f4174206c65617374206f6e65206f7264657220616e64206d61746368696e672081527539b4b3b730ba3ab9329034b9903932b8bab4b932b21760511b602082015260400192915050565b60006122c4604383612d82565b7f537570706f7274656420436f6d706f756e642063546f6b656e2061646472657381527f73206e6f7420666f756e6420666f72207468697320746f6b656e20616464726560208201526239b99760e91b604082015260600192915050565b600061232f602283612d82565b7f417070726f76616c206f6620746f6b656e7320746f2064596458206661696c65815261321760f11b602082015260400192915050565b6000612373604c83612d82565b7f4572726f722063616c6c696e672072656465656d556e6465726c79696e67206f81527f6e20436f6d706f756e642063546f6b656e3a206572726f7220636f6465206e6f60208201526b07420657175616c20746f20360a41b604082015260600192915050565b60006123e7601b83612d82565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000815260200192915050565b6000612420601783612d82565b7f4465706f73697420746f2064596458206661696c65642e000000000000000000815260200192915050565b6000612459602083612d82565b7f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815260200192915050565b6000612492602683612d82565b7f417070726f76616c206f6620746f6b656e7320746f20436f6d706f756e64206681526530b4b632b21760d11b602082015260400192915050565b60006124da601b83612d82565b7f4465706f73697420746f20436f6d706f756e64206661696c65642e0000000000815260200192915050565b6000612513601c83612d82565b7f5769746864726177616c2066726f6d2064596458206661696c65642e00000000815260200192915050565b600061254c602083612d82565b7f417070726f76616c206f6620746f6b656e7320746f203078206661696c65642e815260200192915050565b6000612585603783612d82565b7f537570706f727465642064596458206d61726b6574206e6f7420666f756e642081527f666f72207468697320746f6b656e20616464726573732e000000000000000000602082015260400192915050565b60006125e4602183612d82565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f8152607760f81b602082015260400192915050565b6000612627603183612d82565b7f4d69736d61746368206265747765656e206e756d626572206f66206f72646572815270399030b7321039b4b3b730ba3ab932b99760791b602082015260400192915050565b600061267a604283612d82565b7f4572726f722063616c6c696e672072656465656d206f6e20436f6d706f756e6481527f2063546f6b656e3a206572726f7220636f6465206e6f7420657175616c20746f602082015261020360f41b604082015260600192915050565b60006126e4604083612d82565b7f4572726f722063616c6c696e67206d696e74206f6e20436f6d706f756e64206381527f546f6b656e3a206572726f7220636f6465206e6f7420657175616c20746f2030602082015260400192915050565b6000612743602f83612d82565b7f54616b65722061737365742066696c6c20616d6f756e74206d7573742062652081526e33b932b0ba32b9103a3430b710181760891b602082015260400192915050565b6000612794602a83612d82565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e8152691bdd081cdd58d8d9595960b21b602082015260400192915050565b60006127e0602083612d82565b7f5769746864726177616c2066726f6d20436f6d706f756e64206661696c65642e815260200192915050565b6000612819601383612d82565b7224b73b30b634b2103837b7b61034b73232bc1760691b815260200192915050565b6000612848601f83612d82565b7f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400815260200192915050565b8051600090610160840190612889858261224d565b50602083015161289c6020860182612ab6565b5060408301516128af6040860182612916565b5060608301516128c260c0860182612ab6565b5060808301516128d560e0860182612ab6565b5060a08301516128e9610100860182611ff1565b5060c08301516128fd610120860182612ab6565b5060e08301518482036101408601526103cd8282612215565b8051608083019061292784826121dd565b50602082015161293a6020850182612256565b50604082015161294d6040850182612256565b50606082015161147d6060850182612ab6565b805160408301906129718482611ff1565b50602082015161147d6020850182612ab6565b80516000906101c08401906129998582611ff1565b5060208301516129ac6020860182611ff1565b5060408301516129bf6040860182611ff1565b5060608301516129d26060860182611ff1565b5060808301516129e56080860182612ab6565b5060a08301516129f860a0860182612ab6565b5060c0830151612a0b60c0860182612ab6565b5060e0830151612a1e60e0860182612ab6565b50610100830151612a33610100860182612ab6565b50610120830151612a48610120860182612ab6565b50610140830151848203610140860152612a628282612215565b915050610160830151848203610160860152612a7e8282612215565b915050610180830151848203610180860152612a9a8282612215565b9150506101a08301518482036101a08601526103cd8282612215565b611ffa81612d75565b60006102bf82846121e6565b602081016102268284611ff1565b60408101612ae78285611ff1565b6102bf6020830184611ff1565b60408101612b028285611ff1565b6102bf6020830184612ab6565b60408082528101612b2081856120cf565b90508181036020830152611730818461206e565b60608082528101612b458186612128565b9050612b546020830185612ab6565b81810360408301526103cd8184612000565b604081016102268284612189565b6020810161022682846121dd565b602080825281016102bf8184612215565b602080825281016102268161225f565b60208082528101610226816122b7565b6020808252810161022681612322565b6020808252810161022681612366565b60208082528101610226816123da565b6020808252810161022681612413565b602080825281016102268161244c565b6020808252810161022681612485565b60208082528101610226816124cd565b6020808252810161022681612506565b602080825281016102268161253f565b6020808252810161022681612578565b60208082528101610226816125d7565b602080825281016102268161261a565b602080825281016102268161266d565b60208082528101610226816126d7565b6020808252810161022681612736565b6020808252810161022681612787565b60208082528101610226816127d3565b602080825281016102268161280c565b602080825281016102268161283b565b604081016102268284612960565b602081016102268284612ab6565b60405181810167ffffffffffffffff81118282101715612d1e57600080fd5b604052919050565b600067ffffffffffffffff821115612d3d57600080fd5b5060209081020190565b600067ffffffffffffffff821115612d5e57600080fd5b506020601f91909101601f19160190565b60200190565b90565b5190565b50600290565b90815260200190565b600061022682612dc4565b151590565b8061058c81612e2e565b8061058c81612e3b565b6fffffffffffffffffffffffffffffffff1690565b6001600160a01b031690565b60ff1690565b600061022682612d9b565b600061022682612da5565b82818337506000910152565b60005b83811015612e13578181015183820152602001612dfb565b8381111561147d5750506000910152565b601f01601f191690565b60098110612e3857fe5b50565b60028110612e3857fe5b612e4e81612d8b565b8114612e3857600080fd5b612e4e81612d96565b612e4e81612daf565b612e4e81612d75565b612e4e81612dd056fe5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa365627a7a72315820bcabad46f735684ada6175dad6ca81a5696b5f76ee78b94832edbdf7f893b5a16c6578706572696d656e74616cf564736f6c63430005110040",
  "sourceMap": "1100:5042:14:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24",
  "deployedSourceMap": "1100:5042:14:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4251:395;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4251:395:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4918:222;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4918:222:14;;;;;;;;:::i;2893:403::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2893:403:14;;;;;;;;:::i;2175:425::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2175:425:14;;;;;;;;:::i;1557:298::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1557:298:14;;;;;;;;:::i;:::-;;;;;;;;3592:418;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3592:418:14;;;;;;;;:::i;5827:313::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5827:313:14;;;;;;;;:::i;:::-;;;;;;;;4251:395;4333:4;4353:9;;;4349:269;;4372:45;4403:13;4372:30;:45::i;:::-;4364:86;;;;-1:-1:-1;;;4364:86:14;;;;;;;;;;;;;;;;;4349:269;;;4469:4;:9;;4477:1;4469:9;4465:153;;;4488:49;4523:13;4488:34;:49::i;:::-;4480:94;;;;-1:-1:-1;;;4480:94:14;;;;;;;;4465:153;4589:29;;-1:-1:-1;;;4589:29:14;;;;;;;;4465:153;-1:-1:-1;4635:4:14;4251:395;;;;;:::o;4918:222::-;4996:4;5020:55;5053:13;5068:6;5020:32;:55::i;:::-;5012:100;;;;-1:-1:-1;;;5012:100:14;;;;;;;;2893:403;2985:4;3005:9;;;3001:267;;3024:49;3051:13;3066:6;3024:26;:49::i;:::-;3016:85;;;;-1:-1:-1;;;3016:85:14;;;;;;;;;3001:267;;;3120:4;:9;;3128:1;3120:9;3116:152;;;3139:53;3170:13;3185:6;3139:30;:53::i;:::-;3131:93;;;;-1:-1:-1;;;3131:93:14;;;;;;;;3116:152;-1:-1:-1;3285:4:14;2893:403;;;;;;:::o;2175:425::-;2267:4;2287:9;;;2283:289;;2306:49;2333:13;2348:6;2306:26;:49::i;:::-;2298:96;;;;-1:-1:-1;;;2298:96:14;;;;;;;;2283:289;2413:4;:9;;2421:1;2413:9;2409:163;;;2432:53;2463:13;2478:6;2432:30;:53::i;:::-;2424:104;;;;-1:-1:-1;;;2424:104:14;;;;;;;;1557:298;1634:7;1657:9;;;1653:195;;1675:44;1705:13;1675:29;:44::i;:::-;1668:51;;;;1653:195;1738:4;:9;;1746:1;1738:9;1734:114;;;1756:48;1790:13;1756:33;:48::i;3592:418::-;3687:4;3707:9;;;3703:279;;3726:50;3754:13;3769:6;3726:27;:50::i;:::-;3718:91;;;;-1:-1:-1;;;3718:91:14;;;;;;;;3703:279;3828:4;:9;;3836:1;3828:9;3824:158;;;3847:54;3879:13;3894:6;3847:31;:54::i;:::-;3839:99;;;;-1:-1:-1;;;3839:99:14;;;;;;;;5827:313;5991:17;;:::i;:::-;6027:106;6079:6;6087:10;6099:20;6121:11;6027:51;:106::i;:::-;6020:113;5827:313;-1:-1:-1;;;;;5827:313:14:o;5739:895:17:-;5801:4;5817:16;5836:26;5848:13;5836:11;:26::i;:::-;5817:45;;5873:27;;:::i;:::-;-1:-1:-1;5903:30:17;;;;;;;;5924:4;5903:30;;-1:-1:-1;5903:30:17;;;;5976:21;;5995:1;5976:21;;;;;;;;;5903:30;;5943;;5976:21;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5943:54;;6021:7;6007:8;6016:1;6007:11;;;;;;;;;;;;;:21;;;;6039:36;;:::i;:::-;6078:84;;;;;;;;;6096:4;6078:84;;;;;;;;;;;6131:27;6078:84;;;;6160:1;6078:84;;;6039:123;;6172:22;6205:32;;:::i;:::-;-1:-1:-1;6240:211:17;;;;;;;;6272:27;6240:211;;;-1:-1:-1;6240:211:17;;;;;;;;;;;;;;;;;;;;;;;;;6398:4;6240:211;;;;;;;;;;;;;;;;;6500:27;;;;;;;;;;;6240:211;;6500:27;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6462:65;;6550:6;6537:7;6545:1;6537:10;;;;;;;;;;;;;;;;;:19;6567:38;;-1:-1:-1;;;6567:38:17;;1170:42;;6567:19;;:38;;6587:8;;6597:7;;6567:38;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6567:38:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6567:38:17;;;;6623:4;6616:11;;;;;;;;;5739:895;;;;:::o;4563:495:16:-;4625:4;4641:13;4664:32;4682:13;4664:17;:32::i;:::-;4641:56;;4707:15;4725:6;-1:-1:-1;;;;;4725:16:16;;4750:4;4725:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4725:31:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4725:31:16;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4725:31:16;;;;;;;;;4707:49;;4781:1;4770:7;:12;4766:30;;4791:5;4784:12;;;;;;4766:30;4902:22;;-1:-1:-1;;;4902:22:16;;4879:20;;-1:-1:-1;;;;;4902:13:16;;;;;:22;;4916:7;;4902:22;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4902:22:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4902:22:16;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4902:22:16;;;;;;;;;4879:45;-1:-1:-1;4942:17:16;;4934:96;;;;-1:-1:-1;;;4934:96:16;;;;;;;;;-1:-1:-1;5047:4:16;;4563:495;-1:-1:-1;;;;4563:495:16:o;1632:453:15:-;1788:52;;-1:-1:-1;;;1788:52:15;;1706:4;;1744:13;;1706:4;;-1:-1:-1;;;;;1788:15:15;;;;;:52;;1812:4;;1311:42;;1788:52;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1788:52:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1788:52:15;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1788:52:15;;;;;;;;;1768:72;;1863:9;1854:6;:18;1850:207;;;1874:72;1311:42;1924:21;:9;1938:6;1924:21;:13;:21;:::i;:::-;-1:-1:-1;;;;;1874:27:15;;;:72;;:27;:72;:::i;:::-;1850:207;;;1974:9;1965:6;:18;1961:96;;;1985:72;1311:42;2035:21;:6;2046:9;2035:21;:10;:21;:::i;:::-;-1:-1:-1;;;;;1985:27:15;;;:72;;:27;:72;:::i;3457:910:17:-;3531:4;3547:16;3566:26;3578:13;3566:11;:26::i;:::-;3547:45;;3603:27;;:::i;:::-;-1:-1:-1;3633:30:17;;;;;;;;3654:4;3633:30;;-1:-1:-1;3633:30:17;;;;3706:21;;3725:1;3706:21;;;;;;;;;3633:30;;3673;;3706:21;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3673:54;;3751:7;3737:8;3746:1;3737:11;;;;;;;;;;;;;:21;;;;3769:36;;:::i;:::-;3808:88;;;;;;;;;3826:4;3808:88;;;;;-1:-1:-1;3808:88:17;;;;3861:26;3808:88;;;;;;;3769:127;-1:-1:-1;3906:22:17;3939:32;;:::i;:::-;-1:-1:-1;3974:210:17;;;;;;;;-1:-1:-1;3974:210:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;4131:4;3974:210;;;;;;;;;;;;;;;;;4233:27;;4258:1;4233:27;;;;;;;;;3974:210;;;;4233:27;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4195:65;;4283:6;4270:7;4278:1;4270:10;;;;;;;;;;;;;;;;;:19;4300:38;;-1:-1:-1;;;4300:38:17;;1170:42;;4300:19;;:38;;4320:8;;4330:7;;4300:38;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4300:38:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;4356:4:17;;3457:910;-1:-1:-1;;;;;;;;;;;;;3457:910:17:o;3415:326:16:-;3489:4;3505:13;3528:32;3546:13;3528:17;:32::i;:::-;3505:56;;3571:18;3592:6;-1:-1:-1;;;;;3592:11:16;;3604:6;3592:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3592:19:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3592:19:16;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3592:19:16;;;;;;;;;3571:40;-1:-1:-1;3629:15:16;;3621:92;;;;-1:-1:-1;;;3621:92:16;;;;;;;;2688:453:17;2844:52;;-1:-1:-1;;;2844:52:17;;2762:4;;2800:13;;2762:4;;-1:-1:-1;;;;;2844:15:17;;;;;:52;;2868:4;;1170:42;;2844:52;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2844:52:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2844:52:17;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2844:52:17;;;;;;;;;2824:72;;2919:9;2910:6;:18;2906:207;;;2930:72;1170:42;2980:21;:9;2994:6;2980:21;:13;:21;:::i;2906:207::-;3030:9;3021:6;:18;3017:96;;;3041:72;1170:42;3091:21;:6;3102:9;3091:21;:10;:21;:::i;2589:502:16:-;2663:4;2679:22;2704:32;2722:13;2704:17;:32::i;:::-;2812:46;;-1:-1:-1;;;2812:46:16;;2679:57;;-1:-1:-1;2768:13:16;;2746:12;;-1:-1:-1;;;;;2812:15:16;;;;;:46;;2836:4;;2679:57;;2812:46;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2812:46:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2812:46:16;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2812:46:16;;;;;;;;;2792:66;;2881:9;2872:6;:18;2868:195;;;2892:66;2920:14;2936:21;:9;2950:6;2936:21;:13;:21;:::i;2892:66::-;2868:195;;;2986:9;2977:6;:18;2973:90;;;2997:66;3025:14;3041:21;:6;3052:9;3041:21;:10;:21;:::i;2997:66::-;-1:-1:-1;3080:4:16;;2589:502;-1:-1:-1;;;;;2589:502:16:o;1991:417:17:-;2057:7;2076:16;2095:26;2107:13;2095:11;:26::i;:::-;2076:45;;2197:27;;:::i;:::-;-1:-1:-1;2227:30:17;;;;;;;;2248:4;2227:30;;-1:-1:-1;2227:30:17;;;;2299:39;;-1:-1:-1;;;2299:39:17;;2272:23;;1170:42;;2299:30;;:39;;2227:30;;2299:39;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2299:39:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2299:39:17;;;;;;39:16:-1;36:1;17:17;2:54;101:4;2299:39:17;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;2299:39:17;;;;;;;;;2267:71;;;;2355:4;2360:8;2355:14;;;;;;;;;;;;;;:19;;;:46;;2400:1;2355:46;;;2377:4;2382:8;2377:14;;;;;;;;;;;;;;:20;;;2348:53;1991:417;-1:-1:-1;;;;;1991:417:17:o;2034:267:16:-;2095:7;2114:13;2137:32;2155:13;2137:17;:32::i;:::-;2114:56;;2180:6;-1:-1:-1;;;;;2180:21:16;;:23;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2180:23:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2180:23:16;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2180:23:16;;;;;;;;;;2220:74;2289:4;2220:64;2256:6;-1:-1:-1;;;;;2256:25:16;;:27;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2256:27:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2256:27:16;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2256:27:16;;;;;;;;;2220:31;;-1:-1:-1;;;2220:31:16;;-1:-1:-1;;;;;2220:16:16;;;;;:31;;2245:4;;2220:31;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2220:31:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2220:31:16;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2220:31:16;;;;;;;;;:35;:64;:35;:64;:::i;:::-;:68;:74;:68;:74;:::i;4624:913:17:-;4699:4;4715:16;4734:26;4746:13;4734:11;:26::i;:::-;4715:45;;4771:27;;:::i;:::-;-1:-1:-1;4801:30:17;;;;;;;;4822:4;4801:30;;-1:-1:-1;4801:30:17;;;;4874:21;;4893:1;4874:21;;;;;;;;;4801:30;;4841;;4874:21;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4841:54;;4919:7;4905:8;4914:1;4905:11;;;;;;;;;;;;;:21;;;;4937:36;;:::i;:::-;4976:89;;;;;;;;;-1:-1:-1;4976:89:17;;;;;;;;;;;5030:26;4976:89;;;;;;;4937:128;-1:-1:-1;5075:22:17;5108:32;;:::i;:::-;-1:-1:-1;5143:211:17;;;;;;;;5175:27;5143:211;;;-1:-1:-1;5143:211:17;;;;;;;;;;;;;;;;;;;;;;;;;5301:4;5143:211;;;;;;;;;;;;;;;;;5403:27;;;;;;;;;;;5143:211;;5403:27;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5365:65;;5453:6;5440:7;5448:1;5440:10;;;;;;;4002:355:16;4077:4;4093:13;4116:32;4134:13;4116:17;:32::i;:::-;4093:56;;4159:20;4182:6;-1:-1:-1;;;;;4182:23:16;;4206:6;4182:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4182:31:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4182:31:16;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4182:31:16;;;;;;;;;4159:54;-1:-1:-1;4231:17:16;;4223:106;;;;-1:-1:-1;;;4223:106:16;;;;;;;;2593:728:15;2757:17;;:::i;:::-;2810:1;2794:6;:13;:17;2786:84;;;;-1:-1:-1;;;2786:84:15;;;;;;;;;2905:10;:17;2888:6;:13;:34;2880:96;;;;-1:-1:-1;;;2880:96:15;;;;;;;;;3017:1;2994:20;:24;2986:84;;;;-1:-1:-1;;;2986:84:15;;;;;;;;;3080:45;;:::i;:::-;3128:97;;-1:-1:-1;;;3128:97:15;;1142:42;;3128:36;;3171:11;;3128:97;;3184:6;;3192:20;;3214:10;;3128:97;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3128:97:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3128:97:15;;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3128:97:15;;;;;;;;;3235:79;;;;;;;;;3243:34;;;;;3235:79;;3279:34;;3235:79;;;;;;;;2593:728;-1:-1:-1;;;;;;2593:728:15:o;1463:343:17:-;1529:7;1569:42;-1:-1:-1;;;;;1552:59:17;;;1548:73;;;-1:-1:-1;1620:1:17;1613:8;;1548:73;1660:42;-1:-1:-1;;;;;1643:59:17;;;1639:160;;;-1:-1:-1;1711:1:17;1704:8;;1639:160;1734:65;;-1:-1:-1;;;1734:65:17;;;;;;;;1137:601:16;1209:7;1249:42;-1:-1:-1;;;;;1232:59:16;;;1228:114;;;-1:-1:-1;1300:42:16;1293:49;;1228:114;1388:42;-1:-1:-1;;;;;1371:59:16;;;1367:114;;;-1:-1:-1;1439:42:16;1432:49;;1367:114;1529:42;-1:-1:-1;;;;;1512:59:16;;;1508:223;;;-1:-1:-1;1580:42:16;1573:49;;1508:223;1654:77;;-1:-1:-1;;;1654:77:16;;;;;;;;1274:134:42;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;1956:327:46:-;2052:20;2075:95;2119:5;2075:95;;;;;;;;;;;;;;;;;:39;;-1:-1:-1;;;2075:39:46;;-1:-1:-1;;;;;2075:15:46;;;;;:39;;2099:4;;2106:7;;2075:39;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2075:39:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2075:39:46;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2075:39:46;;;;;;;;;:43;:95;;:43;:95;:::i;:::-;2206:69;;2052:118;;-1:-1:-1;2180:96:46;;2199:5;;-1:-1:-1;;;2229:22:46;2206:69;;2253:7;;2052:118;;2206:69;;;;;;;;-1:-1:-1;;26:21;;;22:32;6:49;;2206:69:46;;;49:4:-1;25:18;;61:17;;-1:-1;;;;;182:15;-1:-1;;;;;;2206:69:46;;;179:29:-1;;;;160:49;;;2180:18:46;:96::i;:::-;1956:327;;;;:::o;1668:282::-;1764:20;1787:50;1831:5;1787;-1:-1:-1;;;;;1787:15:46;;1811:4;1818:7;1787:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1787:39:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1787:39:46;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1787:39:46;;;;;;;;;:43;:50;:43;:50;:::i;2159:459:42:-;2217:7;2458:6;2454:45;;-1:-1:-1;2487:1:42;2480:8;;2454:45;2521:5;;;2525:1;2521;:5;:1;2544:5;;;;;:10;2536:56;;;;-1:-1:-1;;;2536:56:42;;;;;;;;3073:130;3131:7;3157:39;3161:1;3164;3157:39;;;;;;;;;;;;;;;;;:3;:39::i;1732:187::-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:42;;;;;;;;;;-1:-1:-1;;;1888:5:42;;;1732:187::o;2666:1095:46:-;3261:27;3269:5;-1:-1:-1;;;;;3261:25:46;;:27::i;:::-;3253:71;;;;-1:-1:-1;;;3253:71:46;;;;;;;;;3395:12;3409:23;3444:5;-1:-1:-1;;;;;3436:19:46;3456:4;3436:25;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3394:67:46;;;;3479:7;3471:52;;;;-1:-1:-1;;;3471:52:46;;;;;;;;;3538:17;;:21;3534:221;;3678:10;3667:30;;;;;;;;;;;;;;3659:85;;;;-1:-1:-1;;;3659:85:46;;;;;;;;834:176:42;892:7;923:5;;;946:6;;;;938:46;;;;-1:-1:-1;;;938:46:42;;;;;;;;3718:338;3804:7;3904:12;3897:5;3889:28;;;;-1:-1:-1;;;3889:28:42;;;;;;;;;;;3927:9;3943:1;3939;:5;;;;;;;3718:338;-1:-1:-1;;;;;3718:338:42:o;686:610:47:-;746:4;1207:20;;1052:66;1246:23;;;;;;:42;;-1:-1:-1;1273:15:47;;;1246:42;1238:51;686:610;-1:-1:-1;;;;686:610:47:o;1100:5042:14:-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;-1:-1;1100:5042:14;;;-1:-1:-1;;1100:5042:14:o;:::-;;;;;;;;;;-1:-1:-1;1100:5042:14;;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;1100:5042:14;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;1100:5042:14;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1100:5042:14;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;72:20;;97:33;72:20;97:33;;142:134;220:13;;238:33;220:13;238:33;;301:722;;429:3;422:4;414:6;410:17;406:27;396:2;;447:1;444;437:12;396:2;477:6;471:13;499:80;514:64;571:6;514:64;;;499:80;;;490:89;;596:5;621:6;614:5;607:21;651:4;643:6;639:17;629:27;;673:4;668:3;664:14;657:21;;726:6;773:3;765:4;757:6;753:17;748:3;744:27;741:36;738:2;;;790:1;787;780:12;738:2;815:1;800:217;825:6;822:1;819:13;800:217;;;883:3;905:48;949:3;937:10;905:48;;;893:61;;-1:-1;977:4;968:14;;;;996;;;;;847:1;840:9;800:217;;;804:14;389:634;;;;;;;;1047:693;;1169:3;1162:4;1154:6;1150:17;1146:27;1136:2;;1187:1;1184;1177:12;1136:2;1224:6;1211:20;1246:85;1261:69;1323:6;1261:69;;1246:85;1359:21;;;1403:4;1391:17;;;;1237:94;;-1:-1;1416:14;;1391:17;1511:1;1496:238;1521:6;1518:1;1515:13;1496:238;;;1604:3;1591:17;1583:6;1579:30;1628:42;1666:3;1654:10;1628:42;;;1616:55;;-1:-1;1694:4;1685:14;;;;1713;;;;;1543:1;1536:9;1496:238;;1780:735;;1916:3;1909:4;1901:6;1897:17;1893:27;1883:2;;1934:1;1931;1924:12;1883:2;1971:6;1958:20;1993:99;2008:83;2084:6;2008:83;;1993:99;2120:21;;;2164:4;2152:17;;;;1984:108;;-1:-1;2177:14;;2152:17;2272:1;2257:252;2282:6;2279:1;2276:13;2257:252;;;2365:3;2352:17;2344:6;2340:30;2389:56;2441:3;2429:10;2389:56;;;2377:69;;-1:-1;2469:4;2460:14;;;;2488;;;;;2304:1;2297:9;2257:252;;2550:773;;2695:3;2688:4;2680:6;2676:17;2672:27;2662:2;;2713:1;2710;2703:12;2662:2;2743:6;2737:13;2765:97;2780:81;2854:6;2780:81;;2765:97;2756:106;;2879:5;2904:6;2897:5;2890:21;2934:4;2926:6;2922:17;2912:27;;2956:4;2951:3;2947:14;2940:21;;3009:6;3056:3;3048:4;3040:6;3036:17;3031:3;3027:27;3024:36;3021:2;;;3073:1;3070;3063:12;3021:2;3098:1;3083:234;3108:6;3105:1;3102:13;3083:234;;;3166:3;3188:65;3249:3;3237:10;3188:65;;;3176:78;;-1:-1;3277:4;3268:14;;;;3305:4;3296:14;;;;;3130:1;3123:9;3083:234;;3358:773;;3503:3;3496:4;3488:6;3484:17;3480:27;3470:2;;3521:1;3518;3511:12;3470:2;3551:6;3545:13;3573:97;3588:81;3662:6;3588:81;;3573:97;3564:106;;3687:5;3712:6;3705:5;3698:21;3742:4;3734:6;3730:17;3720:27;;3764:4;3759:3;3755:14;3748:21;;3817:6;3864:3;3856:4;3848:6;3844:17;3839:3;3835:27;3832:36;3829:2;;;3881:1;3878;3871:12;3829:2;3906:1;3891:234;3916:6;3913:1;3910:13;3891:234;;;3974:3;3996:65;4057:3;4045:10;3996:65;;;3984:78;;-1:-1;4085:4;4076:14;;;;4113:4;4104:14;;;;;3938:1;3931:9;3891:234;;4139:128;4214:13;;4232:30;4214:13;4232:30;;4275:432;;4372:3;4365:4;4357:6;4353:17;4349:27;4339:2;;4390:1;4387;4380:12;4339:2;4427:6;4414:20;4449:60;4464:44;4501:6;4464:44;;4449:60;4440:69;;4529:6;4522:5;4515:21;4565:4;4557:6;4553:17;4598:4;4591:5;4587:16;4633:3;4624:6;4619:3;4615:16;4612:25;4609:2;;;4650:1;4647;4640:12;4609:2;4660:41;4694:6;4689:3;4684;4660:41;;;4332:375;;;;;;;;4755:1033;;4884:4;4872:9;4867:3;4863:19;4859:30;4856:2;;;4902:1;4899;4892:12;4856:2;4920:20;4935:4;4920:20;;;4911:29;-1:-1;5008:1;5040:60;5096:3;5076:9;5040:60;;;5015:86;;-1:-1;5180:2;5213:60;5269:3;5245:22;;;5213:60;;;5206:4;5199:5;5195:16;5188:86;5122:163;5343:2;5376:60;5432:3;5423:6;5412:9;5408:22;5376:60;;;5369:4;5362:5;5358:16;5351:86;5295:153;5506:2;5539:60;5595:3;5586:6;5575:9;5571:22;5539:60;;;5532:4;5525:5;5521:16;5514:86;5458:153;5672:3;5706:60;5762:3;5753:6;5742:9;5738:22;5706:60;;;5699:4;5692:5;5688:16;5681:86;5621:157;4850:938;;;;;5823:2714;;5931:6;5919:9;5914:3;5910:19;5906:32;5903:2;;;5951:1;5948;5941:12;5903:2;5969:22;5984:6;5969:22;;;5960:31;-1:-1;6049:1;6081:49;6126:3;6106:9;6081:49;;;6056:75;;-1:-1;6200:2;6233:49;6278:3;6254:22;;;6233:49;;;6226:4;6219:5;6215:16;6208:75;6152:142;6359:2;6392:49;6437:3;6428:6;6417:9;6413:22;6392:49;;;6385:4;6378:5;6374:16;6367:75;6304:149;6512:2;6545:49;6590:3;6581:6;6570:9;6566:22;6545:49;;;6538:4;6531:5;6527:16;6520:75;6463:143;6668:3;6702:49;6747:3;6738:6;6727:9;6723:22;6702:49;;;6695:4;6688:5;6684:16;6677:75;6616:147;6825:3;6859:49;6904:3;6895:6;6884:9;6880:22;6859:49;;;6852:4;6845:5;6841:16;6834:75;6773:147;6974:3;7008:49;7053:3;7044:6;7033:9;7029:22;7008:49;;;7001:4;6994:5;6990:16;6983:75;6930:139;7123:3;7157:49;7202:3;7193:6;7182:9;7178:22;7157:49;;;7150:4;7143:5;7139:16;7132:75;7079:139;7285:3;7321:49;7366:3;7357:6;7346:9;7342:22;7321:49;;;7312:6;7305:5;7301:18;7294:77;7228:154;7432:3;7468:49;7513:3;7504:6;7493:9;7489:22;7468:49;;;7459:6;7452:5;7448:18;7441:77;7392:137;7617:3;7606:9;7602:19;7589:33;7642:18;7634:6;7631:30;7628:2;;;7674:1;7671;7664:12;7628:2;7711:54;7761:3;7752:6;7741:9;7737:22;7711:54;;;7702:6;7695:5;7691:18;7684:82;7539:238;7865:3;7854:9;7850:19;7837:33;7890:18;7882:6;7879:30;7876:2;;;7922:1;7919;7912:12;7876:2;7959:54;8009:3;8000:6;7989:9;7985:22;7959:54;;;7950:6;7943:5;7939:18;7932:82;7787:238;8116:3;8105:9;8101:19;8088:33;8141:18;8133:6;8130:30;8127:2;;;8173:1;8170;8163:12;8127:2;8210:54;8260:3;8251:6;8240:9;8236:22;8210:54;;;8201:6;8194:5;8190:18;8183:82;8035:241;8367:3;8356:9;8352:19;8339:33;8392:18;8384:6;8381:30;8378:2;;;8424:1;8421;8414:12;8378:2;8461:54;8511:3;8502:6;8491:9;8487:22;8461:54;;;8452:6;8445:5;8441:18;8434:82;8286:241;5897:2640;;;;;8567:490;;8684:4;8672:9;8667:3;8663:19;8659:30;8656:2;;;8702:1;8699;8692:12;8656:2;8720:20;8735:4;8720:20;;;8711:29;-1:-1;8790:1;8822:57;8875:3;8855:9;8822:57;;;8797:83;;-1:-1;8942:2;8975:60;9031:3;9007:22;;;8975:60;;;8968:4;8961:5;8957:16;8950:86;8901:146;8650:407;;;;;9087:490;;9204:4;9192:9;9187:3;9183:19;9179:30;9176:2;;;9222:1;9219;9212:12;9176:2;9240:20;9255:4;9240:20;;;9231:29;-1:-1;9310:1;9342:57;9395:3;9375:9;9342:57;;;9317:83;;-1:-1;9462:2;9495:60;9551:3;9527:22;;;9495:60;;9584:134;9662:13;;9680:33;9662:13;9680:33;;9725:130;9792:20;;9817:33;9792:20;9817:33;;9862:134;9940:13;;9958:33;9940:13;9958:33;;10003:126;10068:20;;10093:31;10068:20;10093:31;;10136:366;;;10257:2;10245:9;10236:7;10232:23;10228:32;10225:2;;;10273:1;10270;10263:12;10225:2;10308:1;10325:53;10370:7;10350:9;10325:53;;;10315:63;;10287:97;10415:2;10433:53;10478:7;10469:6;10458:9;10454:22;10433:53;;;10423:63;;10394:98;10219:283;;;;;;10509:990;;;;10767:2;10755:9;10746:7;10742:23;10738:32;10735:2;;;10783:1;10780;10773:12;10735:2;10818:24;;10862:18;10851:30;;10848:2;;;10894:1;10891;10884:12;10848:2;10914:89;10995:7;10986:6;10975:9;10971:22;10914:89;;;10904:99;;10797:212;11061:2;11050:9;11046:18;11040:25;11085:18;11077:6;11074:30;11071:2;;;11117:1;11114;11107:12;11071:2;11137:106;11235:7;11226:6;11215:9;11211:22;11137:106;;;11127:116;;11019:230;11301:2;11290:9;11286:18;11280:25;11325:18;11317:6;11314:30;11311:2;;;11357:1;11354;11347:12;11311:2;11377:106;11475:7;11466:6;11455:9;11451:22;11377:106;;;11367:116;;11259:230;10729:770;;;;;;11506:937;;;;;11735:3;11723:9;11714:7;11710:23;11706:33;11703:2;;;11752:1;11749;11742:12;11703:2;11787:31;;11838:18;11827:30;;11824:2;;;11870:1;11867;11860:12;11824:2;11890:97;11979:7;11970:6;11959:9;11955:22;11890:97;;;11880:107;;11766:227;12052:2;12041:9;12037:18;12024:32;12076:18;12068:6;12065:30;12062:2;;;12108:1;12105;12098:12;12062:2;12128:83;12203:7;12194:6;12183:9;12179:22;12128:83;;;12118:93;;12003:214;12248:2;12266:53;12311:7;12302:6;12291:9;12287:22;12266:53;;;12256:63;;12227:98;12356:2;12374:53;12419:7;12410:6;12399:9;12395:22;12374:53;;;12364:63;;12335:98;11697:746;;;;;;;;12450:257;;12562:2;12550:9;12541:7;12537:23;12533:32;12530:2;;;12578:1;12575;12568:12;12530:2;12613:1;12630:61;12683:7;12663:9;12630:61;;12714:322;;12858:3;12846:9;12837:7;12833:23;12829:33;12826:2;;;12875:1;12872;12865:12;12826:2;12910:1;12927:93;13012:7;12992:9;12927:93;;13043:263;;13158:2;13146:9;13137:7;13133:23;13129:32;13126:2;;;13174:1;13171;13164:12;13126:2;13209:1;13226:64;13282:7;13262:9;13226:64;;13313:362;;;13432:2;13420:9;13411:7;13407:23;13403:32;13400:2;;;13448:1;13445;13438:12;13400:2;13483:1;13500:51;13543:7;13523:9;13500:51;;;13490:61;;13462:95;13588:2;13606:53;13651:7;13642:6;13631:9;13627:22;13606:53;;13682:487;;;;13818:2;13806:9;13797:7;13793:23;13789:32;13786:2;;;13834:1;13831;13824:12;13786:2;13869:1;13886:51;13929:7;13909:9;13886:51;;;13876:61;;13848:95;13974:2;13992:53;14037:7;14028:6;14017:9;14013:22;13992:53;;;13982:63;;13953:98;14082:2;14100:53;14145:7;14136:6;14125:9;14121:22;14100:53;;14177:177;;14288:60;14344:3;14336:6;14288:60;;14363:253;;14512:98;14606:3;14598:6;14512:98;;14625:249;;14748:86;14830:3;14822:6;14748:86;;;-1:-1;;14863:4;14854:14;;14741:133;14883:233;;15022:88;15106:3;15098:6;15022:88;;15125:189;;15220:54;15270:3;15262:6;15220:54;;;-1:-1;;15303:4;15294:14;;15213:101;15322:103;15395:24;15413:5;15395:24;;;15390:3;15383:37;15377:48;;;15579:888;;15734:59;15787:5;15734:59;;;15806:91;15890:6;15885:3;15806:91;;;15799:98;;15920:3;15962:4;15954:6;15950:17;15945:3;15941:27;15989:61;16044:5;15989:61;;;16070:7;16098:1;16083:345;16108:6;16105:1;16102:13;16083:345;;;16170:9;16164:4;16160:20;16155:3;16148:33;16215:6;16209:13;16237:74;16306:4;16291:13;16237:74;;;16229:82;;16328:65;16386:6;16328:65;;;16416:4;16407:14;;;;;16318:75;-1:-1;;16130:1;16123:9;16083:345;;;-1:-1;16441:4;;15713:754;-1:-1;;;;;;;15713:754;16542:1040;;16735:78;16807:5;16735:78;;;16826:110;16929:6;16924:3;16826:110;;;16819:117;;16959:3;17001:4;16993:6;16989:17;16984:3;16980:27;17028:80;17102:5;17028:80;;;17128:7;17156:1;17141:402;17166:6;17163:1;17160:13;17141:402;;;17228:9;17222:4;17218:20;17213:3;17206:33;17273:6;17267:13;17295:112;17402:4;17387:13;17295:112;;;17287:120;;17424:84;17501:6;17424:84;;;17531:4;17522:14;;;;;17414:94;-1:-1;;17188:1;17181:9;17141:402;;17645:834;;17826:72;17892:5;17826:72;;;17911:104;18008:6;18003:3;17911:104;;;17904:111;;18036:74;18104:5;18036:74;;;18130:7;18158:1;18143:314;18168:6;18165:1;18162:13;18143:314;;;18235:6;18229:13;18256:99;18351:3;18336:13;18256:99;;;18249:106;;18372:78;18443:6;18372:78;;;18362:88;-1:-1;;18190:1;18183:9;18143:314;;;-1:-1;18470:3;;17805:674;-1:-1;;;;;17805:674;18546:1000;;18729:73;18796:5;18729:73;;;18815:105;18913:6;18908:3;18815:105;;;18808:112;;18943:3;18985:4;18977:6;18973:17;18968:3;18964:27;19012:75;19081:5;19012:75;;;19107:7;19135:1;19120:387;19145:6;19142:1;19139:13;19120:387;;;19207:9;19201:4;19197:20;19192:3;19185:33;19252:6;19246:13;19274:102;19371:4;19356:13;19274:102;;;19266:110;;19393:79;19465:6;19393:79;;;19495:4;19486:14;;;;;19383:89;-1:-1;;19167:1;19160:9;19120:387;;19587:684;19728:52;19774:5;19728:52;;;19793:92;19878:6;19873:3;19793:92;;;19786:99;;19906:54;19954:5;19906:54;;;19980:7;20008:1;19993:266;20018:6;20015:1;20012:13;19993:266;;;20085:6;20079:13;20106:71;20173:3;20158:13;20106:71;;;20099:78;;20194:58;20245:6;20194:58;;;20184:68;-1:-1;;20040:1;20033:9;19993:266;;;19997:14;19707:564;;;;;;20279:94;20346:21;20361:5;20346:21;;20499:356;;20627:38;20659:5;20627:38;;;20677:88;20758:6;20753:3;20677:88;;;20670:95;;20770:52;20815:6;20810:3;20803:4;20796:5;20792:16;20770:52;;;20834:16;;;;;20607:248;-1:-1;;20607:248;20862:315;;20958:34;20986:5;20958:34;;;21004:60;21057:6;21052:3;21004:60;;;20997:67;;21069:52;21114:6;21109:3;21102:4;21095:5;21091:16;21069:52;;;21142:29;21164:6;21142:29;;;21133:39;;;;20938:239;-1:-1;;;20938:239;21184:142;21270:50;21314:5;21270:50;;21333:156;21426:57;21477:5;21426:57;;22008:391;;22168:67;22232:2;22227:3;22168:67;;;22268:34;22248:55;;-1:-1;;;22332:2;22323:12;;22316:46;22390:2;22381:12;;22154:245;-1:-1;;22154:245;22408:441;;22568:67;22632:2;22627:3;22568:67;;;22668:34;22648:55;;22737:34;22732:2;22723:12;;22716:56;-1:-1;;;22801:2;22792:12;;22785:27;22840:2;22831:12;;22554:295;-1:-1;;22554:295;22858:371;;23018:67;23082:2;23077:3;23018:67;;;23118:34;23098:55;;-1:-1;;;23182:2;23173:12;;23166:26;23220:2;23211:12;;23004:225;-1:-1;;23004:225;23238:450;;23398:67;23462:2;23457:3;23398:67;;;23498:34;23478:55;;23567:34;23562:2;23553:12;;23546:56;-1:-1;;;23631:2;23622:12;;23615:36;23679:2;23670:12;;23384:304;-1:-1;;23384:304;23697:327;;23857:67;23921:2;23916:3;23857:67;;;23957:29;23937:50;;24015:2;24006:12;;23843:181;-1:-1;;23843:181;24033:323;;24193:67;24257:2;24252:3;24193:67;;;24293:25;24273:46;;24347:2;24338:12;;24179:177;-1:-1;;24179:177;24365:332;;24525:67;24589:2;24584:3;24525:67;;;24625:34;24605:55;;24688:2;24679:12;;24511:186;-1:-1;;24511:186;24706:375;;24866:67;24930:2;24925:3;24866:67;;;24966:34;24946:55;;-1:-1;;;25030:2;25021:12;;25014:30;25072:2;25063:12;;24852:229;-1:-1;;24852:229;25090:327;;25250:67;25314:2;25309:3;25250:67;;;25350:29;25330:50;;25408:2;25399:12;;25236:181;-1:-1;;25236:181;25426:328;;25586:67;25650:2;25645:3;25586:67;;;25686:30;25666:51;;25745:2;25736:12;;25572:182;-1:-1;;25572:182;25763:332;;25923:67;25987:2;25982:3;25923:67;;;26023:34;26003:55;;26086:2;26077:12;;25909:186;-1:-1;;25909:186;26104:392;;26264:67;26328:2;26323:3;26264:67;;;26364:34;26344:55;;26433:25;26428:2;26419:12;;26412:47;26487:2;26478:12;;26250:246;-1:-1;;26250:246;26505:370;;26665:67;26729:2;26724:3;26665:67;;;26765:34;26745:55;;-1:-1;;;26829:2;26820:12;;26813:25;26866:2;26857:12;;26651:224;-1:-1;;26651:224;26884:386;;27044:67;27108:2;27103:3;27044:67;;;27144:34;27124:55;;-1:-1;;;27208:2;27199:12;;27192:41;27261:2;27252:12;;27030:240;-1:-1;;27030:240;27279:440;;27439:67;27503:2;27498:3;27439:67;;;27539:34;27519:55;;27608:34;27603:2;27594:12;;27587:56;-1:-1;;;27672:2;27663:12;;27656:26;27710:2;27701:12;;27425:294;-1:-1;;27425:294;27728:401;;27888:67;27952:2;27947:3;27888:67;;;27988:34;27968:55;;28057:34;28052:2;28043:12;;28036:56;28120:2;28111:12;;27874:255;-1:-1;;27874:255;28138:384;;28298:67;28362:2;28357:3;28298:67;;;28398:34;28378:55;;-1:-1;;;28462:2;28453:12;;28446:39;28513:2;28504:12;;28284:238;-1:-1;;28284:238;28531:379;;28691:67;28755:2;28750:3;28691:67;;;28791:34;28771:55;;-1:-1;;;28855:2;28846:12;;28839:34;28901:2;28892:12;;28677:233;-1:-1;;28677:233;28919:332;;29079:67;29143:2;29138:3;29079:67;;;29179:34;29159:55;;29242:2;29233:12;;29065:186;-1:-1;;29065:186;29260:319;;29420:67;29484:2;29479:3;29420:67;;;-1:-1;;;29500:42;;29570:2;29561:12;;29406:173;-1:-1;;29406:173;29588:331;;29748:67;29812:2;29807:3;29748:67;;;29848:33;29828:54;;29910:2;29901:12;;29734:185;-1:-1;;29734:185;29988:1611;30205:23;;29988:1611;;30131:6;30122:16;;;30234:76;30126:3;30205:23;30234:76;;;30153:163;30394:4;30387:5;30383:16;30377:23;30406:63;30463:4;30458:3;30454:14;30440:12;30406:63;;;30326:149;30550:4;30543:5;30539:16;30533:23;30562:117;30673:4;30668:3;30664:14;30650:12;30562:117;;;30485:200;30769:4;30762:5;30758:16;30752:23;30781:63;30838:4;30833:3;30829:14;30815:12;30781:63;;;30695:155;30936:4;30929:5;30925:16;30919:23;30948:63;31005:4;31000:3;30996:14;30982:12;30948:63;;;30860:157;31098:4;31091:5;31087:16;31081:23;31110:65;31167:6;31162:3;31158:16;31144:12;31110:65;;;31027:154;31264:4;31257:5;31253:16;31247:23;31276:65;31333:6;31328:3;31324:16;31310:12;31276:65;;;31191:156;31420:4;31413:5;31409:16;31403:23;31474:3;31468:4;31464:14;31455:6;31450:3;31446:16;31439:40;31494:67;31556:4;31542:12;31494:67;;31665:817;31868:23;;31802:4;31793:14;;;31897:57;31797:3;31868:23;31897:57;;;31822:138;32041:4;32034:5;32030:16;32024:23;32053:83;32130:4;32125:3;32121:14;32107:12;32053:83;;;31970:172;32214:4;32207:5;32203:16;32197:23;32226:80;32300:4;32295:3;32291:14;32277:12;32226:80;;;32152:160;32386:4;32379:5;32375:16;32369:23;32398:63;32455:4;32450:3;32446:14;32432:12;32398:63;;32538:473;32742:23;;32675:4;32666:14;;;32771:63;32670:3;32742:23;32771:63;;;32695:145;32915:4;32908:5;32904:16;32898:23;32927:63;32984:4;32979:3;32975:14;32961:12;32927:63;;33586:2766;33795:23;;33586:2766;;33719:6;33710:16;;;33824:63;33714:3;33795:23;33824:63;;;33741:152;33974:4;33967:5;33963:16;33957:23;33986:63;34043:4;34038:3;34034:14;34020:12;33986:63;;;33903:152;34143:4;34136:5;34132:16;34126:23;34155:63;34212:4;34207:3;34203:14;34189:12;34155:63;;;34065:159;34306:4;34299:5;34295:16;34289:23;34318:63;34375:4;34370:3;34366:14;34352:12;34318:63;;;34234:153;34472:4;34465:5;34461:16;34455:23;34484:63;34541:4;34536:3;34532:14;34518:12;34484:63;;;34397:156;34638:4;34631:5;34627:16;34621:23;34650:63;34707:4;34702:3;34698:14;34684:12;34650:63;;;34563:156;34796:4;34789:5;34785:16;34779:23;34808:63;34865:4;34860:3;34856:14;34842:12;34808:63;;;34729:148;34954:4;34947:5;34943:16;34937:23;34966:63;35023:4;35018:3;35014:14;35000:12;34966:63;;;34887:148;35125:6;35118:5;35114:18;35108:25;35139:65;35196:6;35191:3;35187:16;35173:12;35139:65;;;35045:165;35283:6;35276:5;35272:18;35266:25;35297:65;35354:6;35349:3;35345:16;35331:12;35297:65;;;35220:148;35451:6;35444:5;35440:18;35434:25;35507:3;35501:4;35497:14;35488:6;35483:3;35479:16;35472:40;35527:67;35589:4;35575:12;35527:67;;;35519:75;;35378:228;35689:6;35682:5;35678:18;35672:25;35745:3;35739:4;35735:14;35726:6;35721:3;35717:16;35710:40;35765:67;35827:4;35813:12;35765:67;;;35757:75;;35616:228;35930:6;35923:5;35919:18;35913:25;35986:3;35980:4;35976:14;35967:6;35962:3;35958:16;35951:40;36006:67;36068:4;36054:12;36006:67;;;35998:75;;35854:231;36171:6;36164:5;36160:18;36154:25;36227:3;36221:4;36217:14;36208:6;36203:3;36199:16;36192:40;36247:67;36309:4;36295:12;36247:67;;36359:103;36432:24;36450:5;36432:24;;36835:262;;36979:93;37068:3;37059:6;36979:93;;37104:213;37222:2;37207:18;;37236:71;37211:9;37280:6;37236:71;;37324:324;37470:2;37455:18;;37484:71;37459:9;37528:6;37484:71;;;37566:72;37634:2;37623:9;37619:18;37610:6;37566:72;;37655:324;37801:2;37786:18;;37815:71;37790:9;37859:6;37815:71;;;37897:72;37965:2;37954:9;37950:18;37941:6;37897:72;;37986:788;38316:2;38330:47;;;38301:18;;38391:144;38301:18;38521:6;38391:144;;;38383:152;;38583:9;38577:4;38573:20;38568:2;38557:9;38553:18;38546:48;38608:156;38759:4;38750:6;38608:156;;38781:827;39103:2;39117:47;;;39088:18;;39178:146;39088:18;39310:6;39178:146;;;39170:154;;39335:72;39403:2;39392:9;39388:18;39379:6;39335:72;;;39455:9;39449:4;39445:20;39440:2;39429:9;39425:18;39418:48;39480:118;39593:4;39584:6;39480:118;;39615:321;39787:2;39772:18;;39801:125;39776:9;39899:6;39801:125;;39943:217;40063:2;40048:18;;40077:73;40052:9;40123:6;40077:73;;40167:301;40305:2;40319:47;;;40290:18;;40380:78;40290:18;40444:6;40380:78;;40475:407;40666:2;40680:47;;;40651:18;;40741:131;40651:18;40741:131;;40889:407;41080:2;41094:47;;;41065:18;;41155:131;41065:18;41155:131;;41303:407;41494:2;41508:47;;;41479:18;;41569:131;41479:18;41569:131;;41717:407;41908:2;41922:47;;;41893:18;;41983:131;41893:18;41983:131;;42131:407;42322:2;42336:47;;;42307:18;;42397:131;42307:18;42397:131;;42545:407;42736:2;42750:47;;;42721:18;;42811:131;42721:18;42811:131;;42959:407;43150:2;43164:47;;;43135:18;;43225:131;43135:18;43225:131;;43373:407;43564:2;43578:47;;;43549:18;;43639:131;43549:18;43639:131;;43787:407;43978:2;43992:47;;;43963:18;;44053:131;43963:18;44053:131;;44201:407;44392:2;44406:47;;;44377:18;;44467:131;44377:18;44467:131;;44615:407;44806:2;44820:47;;;44791:18;;44881:131;44791:18;44881:131;;45029:407;45220:2;45234:47;;;45205:18;;45295:131;45205:18;45295:131;;45443:407;45634:2;45648:47;;;45619:18;;45709:131;45619:18;45709:131;;45857:407;46048:2;46062:47;;;46033:18;;46123:131;46033:18;46123:131;;46271:407;46462:2;46476:47;;;46447:18;;46537:131;46447:18;46537:131;;46685:407;46876:2;46890:47;;;46861:18;;46951:131;46861:18;46951:131;;47099:407;47290:2;47304:47;;;47275:18;;47365:131;47275:18;47365:131;;47513:407;47704:2;47718:47;;;47689:18;;47779:131;47689:18;47779:131;;47927:407;48118:2;48132:47;;;48103:18;;48193:131;48103:18;48193:131;;48341:407;48532:2;48546:47;;;48517:18;;48607:131;48517:18;48607:131;;48755:407;48946:2;48960:47;;;48931:18;;49021:131;48931:18;49021:131;;49169:301;49331:2;49316:18;;49345:115;49320:9;49433:6;49345:115;;49477:213;49595:2;49580:18;;49609:71;49584:9;49653:6;49609:71;;49933:256;49995:2;49989:9;50021:17;;;50096:18;50081:34;;50117:22;;;50078:62;50075:2;;;50153:1;50150;50143:12;50075:2;50169;50162:22;49973:216;;-1:-1;49973:216;50196:304;;50355:18;50347:6;50344:30;50341:2;;;50387:1;50384;50377:12;50341:2;-1:-1;50422:4;50410:17;;;50475:15;;50278:222;51809:317;;51948:18;51940:6;51937:30;51934:2;;;51980:1;51977;51970:12;51934:2;-1:-1;52111:4;52047;52024:17;;;;-1:-1;;52020:33;52101:15;;51871:255;52133:156;52262:4;52253:14;;52210:79;52831:97;52915:3;52901:27;52935:142;53043:12;;53014:63;53577:108;-1:-1;53671:4;;53649:36;54713:183;54836:19;;;54885:4;54876:14;;54829:67;56169:91;;56231:24;56249:5;56231:24;;56267:85;56333:13;56326:21;;56309:43;56359:136;56436:5;56442:48;56436:5;56442:48;;56502:150;56586:5;56592:55;56586:5;56592:55;;56810:113;56883:34;56872:46;;56855:68;56930:121;-1:-1;;;;;56992:54;;56975:76;57137:81;57208:4;57197:16;;57180:38;57225:136;;57317:39;57350:5;57317:39;;57368:150;;57467:46;57507:5;57467:46;;57677:145;57758:6;57753:3;57748;57735:30;-1:-1;57814:1;57796:16;;57789:27;57728:94;57831:268;57896:1;57903:101;57917:6;57914:1;57911:13;57903:101;;;57984:11;;;57978:18;57965:11;;;57958:39;57939:2;57932:10;57903:101;;;58019:6;58016:1;58013:13;58010:2;;;-1:-1;;58084:1;58066:16;;58059:27;57880:219;58107:97;58195:2;58175:14;-1:-1;;58171:28;;58155:49;58212:106;58296:1;58289:5;58286:12;58276:2;;58302:9;58276:2;58270:48;;58325:113;58416:1;58409:5;58406:12;58396:2;;58422:9;58562:117;58631:24;58649:5;58631:24;;;58624:5;58621:35;58611:2;;58670:1;58667;58660:12;58686:111;58752:21;58767:5;58752:21;;58804:117;58873:24;58891:5;58873:24;;58928:117;58997:24;59015:5;58997:24;;59052:113;59119:22;59135:5;59119:22;",
  "source": "/**\n * @file\n * @author David Lucid <david@rari.capital>\n *\n * @section LICENSE\n *\n * All rights reserved to David Lucid of David Lucid LLC.\n * Any disclosure, reproduction, distribution or other use of this code by any individual or entity other than David Lucid of David Lucid LLC, unless given explicit permission by David Lucid of David Lucid LLC, is prohibited.\n *\n * @section DESCRIPTION\n *\n * This file includes the Ethereum contract code for RariFundController, our library handling deposits to and withdrawals from the liquidity pools that power RariFund as well as currency exchanges via 0x.\n */\n\npragma solidity ^0.5.7;\npragma experimental ABIEncoderV2;\n\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\n\nimport \"@0x/contracts-exchange-libs/contracts/src/LibOrder.sol\";\n\nimport \"./pools/DydxPoolController.sol\";\nimport \"./pools/CompoundPoolController.sol\";\nimport \"./exchanges/ZeroExExchangeController.sol\";\n\n/**\n * @title RariFundController\n * @dev This library handles deposits to and withdrawals from the liquidity pools that power RariFund as well as currency exchanges via 0x.\n */\nlibrary RariFundController {\n    using SafeMath for uint256;\n\n    /**\n     * @dev Returns the calling address's balance of the specified currency in the specified pool.\n     * Ideally, we can add the view modifier, but Compound's `getUnderlyingBalance` function (called by `CompoundPoolController.getBalance`) potentially modifies the state.\n     * @param pool The index of the pool.\n     * @param erc20Contract The ERC20 contract of the token.\n     */\n    function getPoolBalance(uint8 pool, address erc20Contract) external returns (uint256) {\n        if (pool == 0) return DydxPoolController.getBalance(erc20Contract);\n        else if (pool == 1) return CompoundPoolController.getBalance(erc20Contract);\n        else revert(\"Invalid pool index.\");\n    }\n\n    /**\n     * @dev Approves tokens to the pool without spending gas on every deposit.\n     * @param pool The index of the pool.\n     * @param erc20Contract The ERC20 contract of the token to be approved.\n     * @param amount The amount of tokens to be approved.\n     * @return Boolean indicating success.\n     */\n    function approveToPool(uint8 pool, address erc20Contract, uint256 amount) external returns (bool) {\n        if (pool == 0) require(DydxPoolController.approve(erc20Contract, amount), \"Approval of tokens to dYdX failed.\");\n        else if (pool == 1) require(CompoundPoolController.approve(erc20Contract, amount), \"Approval of tokens to Compound failed.\");\n        else revert(\"Invalid pool index.\");\n        return true;\n    }\n\n    /**\n     * @dev Deposits funds to the specified pool.\n     * @param pool The index of the pool.\n     * @param erc20Contract The ERC20 contract of the token to be deposited.\n     * @param amount The amount of tokens to be deposited.\n     * @return Boolean indicating success.\n     */\n    function depositToPool(uint8 pool, address erc20Contract, uint256 amount) external returns (bool) {\n        if (pool == 0) require(DydxPoolController.deposit(erc20Contract, amount), \"Deposit to dYdX failed.\");\n        else if (pool == 1) require(CompoundPoolController.deposit(erc20Contract, amount), \"Deposit to Compound failed.\");\n        else revert(\"Invalid pool index.\");\n        return true;\n    }\n\n    /**\n     * @dev Withdraws funds from the specified pool.\n     * @param pool The index of the pool.\n     * @param erc20Contract The ERC20 contract of the token to be withdrawn.\n     * @param amount The amount of tokens to be withdrawn.\n     * @return Boolean indicating success.\n     */\n    function withdrawFromPool(uint8 pool, address erc20Contract, uint256 amount) external returns (bool) {\n        if (pool == 0) require(DydxPoolController.withdraw(erc20Contract, amount), \"Withdrawal from dYdX failed.\");\n        else if (pool == 1) require(CompoundPoolController.withdraw(erc20Contract, amount), \"Withdrawal from Compound failed.\");\n        else revert(\"Invalid pool index.\");\n        return true;\n    }\n\n    /**\n     * @dev Withdraws all funds from the specified pool.\n     * @param pool The index of the pool.\n     * @param erc20Contract The ERC20 contract of the token to be withdrawn.\n     * @return Boolean indicating success.\n     */\n    function withdrawAllFromPool(uint8 pool, address erc20Contract) external returns (bool) {\n        if (pool == 0) require(DydxPoolController.withdrawAll(erc20Contract), \"Withdrawal from dYdX failed.\");\n        else if (pool == 1) require(CompoundPoolController.withdrawAll(erc20Contract), \"Withdrawal from Compound failed.\");\n        else revert(\"Invalid pool index.\");\n        return true;\n    }\n\n    /**\n     * @dev Approves tokens to 0x without spending gas on every deposit.\n     * @param erc20Contract The ERC20 contract of the token to be approved.\n     * @param amount The amount of tokens to be approved.\n     * @return Boolean indicating success.\n     */\n    function approveTo0x(address erc20Contract, uint256 amount) external returns (bool) {\n        require(ZeroExExchangeController.approve(erc20Contract, amount), \"Approval of tokens to 0x failed.\");\n        return true;\n    }\n\n    /**\n     * @dev Fills 0x exchange orders up to a certain amount of input and up to a certain price.\n     * We should be able to make this function external and use calldata for all parameters, but Solidity does not support calldata structs (https://github.com/ethereum/solidity/issues/5479).\n     * @param orders The limit orders to be filled in ascending order of price.\n     * @param signatures The signatures for the orders.\n     * @param takerAssetFillAmount The amount of the taker asset to sell (excluding taker fees).\n     * @param protocolFee The protocol fee in ETH to pay to 0x.\n     * @return Array containing the input amount sold and output amount bought.\n     */\n    function marketSell0xOrdersFillOrKill(LibOrder.Order[] memory orders, bytes[] memory signatures, uint256 takerAssetFillAmount, uint256 protocolFee) public returns (uint256[2] memory) {\n        return ZeroExExchangeController.marketSellOrdersFillOrKill(orders, signatures, takerAssetFillAmount, protocolFee);\n    }\n}\n",
  "sourcePath": "/home/david/rari-contracts-launch/contracts/lib/RariFundController.sol",
  "ast": {
    "absolutePath": "/home/david/rari-contracts-launch/contracts/lib/RariFundController.sol",
    "exportedSymbols": {
      "RariFundController": [
        4307
      ]
    },
    "id": 4308,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4046,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "607:23:14"
      },
      {
        "id": 4047,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "631:33:14"
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 4048,
        "nodeType": "ImportDirective",
        "scope": 4308,
        "sourceUnit": 7912,
        "src": "666:51:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@0x/contracts-exchange-libs/contracts/src/LibOrder.sol",
        "file": "@0x/contracts-exchange-libs/contracts/src/LibOrder.sol",
        "id": 4049,
        "nodeType": "ImportDirective",
        "scope": 4308,
        "sourceUnit": 6443,
        "src": "719:64:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/david/rari-contracts-launch/contracts/lib/pools/DydxPoolController.sol",
        "file": "./pools/DydxPoolController.sol",
        "id": 4050,
        "nodeType": "ImportDirective",
        "scope": 4308,
        "sourceUnit": 5248,
        "src": "785:40:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/david/rari-contracts-launch/contracts/lib/pools/CompoundPoolController.sol",
        "file": "./pools/CompoundPoolController.sol",
        "id": 4051,
        "nodeType": "ImportDirective",
        "scope": 4308,
        "sourceUnit": 4769,
        "src": "826:44:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/david/rari-contracts-launch/contracts/lib/exchanges/ZeroExExchangeController.sol",
        "file": "./exchanges/ZeroExExchangeController.sol",
        "id": 4052,
        "nodeType": "ImportDirective",
        "scope": 4308,
        "sourceUnit": 4514,
        "src": "871:50:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@title RariFundController\n@dev This library handles deposits to and withdrawals from the liquidity pools that power RariFund as well as currency exchanges via 0x.",
        "fullyImplemented": true,
        "id": 4307,
        "linearizedBaseContracts": [
          4307
        ],
        "name": "RariFundController",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 4055,
            "libraryName": {
              "contractScope": null,
              "id": 4053,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7911,
              "src": "1139:8:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$7911",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1133:27:14",
            "typeName": {
              "id": 4054,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1152:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 4086,
              "nodeType": "Block",
              "src": "1643:212:14",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 4066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4064,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4057,
                      "src": "1657:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4065,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1665:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1657:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 4074,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 4072,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4057,
                        "src": "1738:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 4073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1746:1:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "1738:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "496e76616c696420706f6f6c20696e6465782e",
                            "id": 4081,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1826:21:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f064d32bce73393de16c3915d8ab96d969f494ba73fb82967516763c090099ea",
                              "typeString": "literal_string \"Invalid pool index.\""
                            },
                            "value": "Invalid pool index."
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_f064d32bce73393de16c3915d8ab96d969f494ba73fb82967516763c090099ea",
                              "typeString": "literal_string \"Invalid pool index.\""
                            }
                          ],
                          "id": 4080,
                          "name": "revert",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            8471,
                            8472
                          ],
                          "referencedDeclaration": 8472,
                          "src": "1819:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (string memory) pure"
                          }
                        },
                        "id": 4082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1819:29:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 4083,
                      "nodeType": "ExpressionStatement",
                      "src": "1819:29:14"
                    },
                    "id": 4084,
                    "nodeType": "IfStatement",
                    "src": "1734:114:14",
                    "trueBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4077,
                            "name": "erc20Contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4059,
                            "src": "1790:13:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 4075,
                            "name": "CompoundPoolController",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4768,
                            "src": "1756:22:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_CompoundPoolController_$4768_$",
                              "typeString": "type(library CompoundPoolController)"
                            }
                          },
                          "id": 4076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4590,
                          "src": "1756:33:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) returns (uint256)"
                          }
                        },
                        "id": 4078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1756:48:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 4063,
                      "id": 4079,
                      "nodeType": "Return",
                      "src": "1749:55:14"
                    }
                  },
                  "id": 4085,
                  "nodeType": "IfStatement",
                  "src": "1653:195:14",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4069,
                          "name": "erc20Contract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4059,
                          "src": "1705:13:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 4067,
                          "name": "DydxPoolController",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5247,
                          "src": "1675:18:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_DydxPoolController_$5247_$",
                            "typeString": "type(library DydxPoolController)"
                          }
                        },
                        "id": 4068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getBalance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4862,
                        "src": "1675:29:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view returns (uint256)"
                        }
                      },
                      "id": 4070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1675:44:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 4063,
                    "id": 4071,
                    "nodeType": "Return",
                    "src": "1668:51:14"
                  }
                }
              ]
            },
            "documentation": "@dev Returns the calling address's balance of the specified currency in the specified pool.\nIdeally, we can add the view modifier, but Compound's `getUnderlyingBalance` function (called by `CompoundPoolController.getBalance`) potentially modifies the state.\n@param pool The index of the pool.\n@param erc20Contract The ERC20 contract of the token.",
            "id": 4087,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPoolBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4060,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4057,
                  "name": "pool",
                  "nodeType": "VariableDeclaration",
                  "scope": 4087,
                  "src": "1581:10:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4056,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1581:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4059,
                  "name": "erc20Contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 4087,
                  "src": "1593:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4058,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1593:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1580:35:14"
            },
            "returnParameters": {
              "id": 4063,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4062,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4087,
                  "src": "1634:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4061,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1634:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1633:9:14"
            },
            "scope": 4307,
            "src": "1557:298:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4130,
              "nodeType": "Block",
              "src": "2273:327:14",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 4100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4098,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4089,
                      "src": "2287:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4099,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2295:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2287:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 4112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 4110,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4089,
                        "src": "2413:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 4111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2421:1:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "2413:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "496e76616c696420706f6f6c20696e6465782e",
                            "id": 4123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2550:21:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f064d32bce73393de16c3915d8ab96d969f494ba73fb82967516763c090099ea",
                              "typeString": "literal_string \"Invalid pool index.\""
                            },
                            "value": "Invalid pool index."
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_f064d32bce73393de16c3915d8ab96d969f494ba73fb82967516763c090099ea",
                              "typeString": "literal_string \"Invalid pool index.\""
                            }
                          ],
                          "id": 4122,
                          "name": "revert",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            8471,
                            8472
                          ],
                          "referencedDeclaration": 8472,
                          "src": "2543:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (string memory) pure"
                          }
                        },
                        "id": 4124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2543:29:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 4125,
                      "nodeType": "ExpressionStatement",
                      "src": "2543:29:14"
                    },
                    "id": 4126,
                    "nodeType": "IfStatement",
                    "src": "2409:163:14",
                    "trueBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 4116,
                                "name": "erc20Contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4091,
                                "src": "2463:13:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 4117,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4093,
                                "src": "2478:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 4114,
                                "name": "CompoundPoolController",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4768,
                                "src": "2432:22:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_CompoundPoolController_$4768_$",
                                  "typeString": "type(library CompoundPoolController)"
                                }
                              },
                              "id": 4115,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "approve",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4652,
                              "src": "2432:30:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,uint256) returns (bool)"
                              }
                            },
                            "id": 4118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2432:53:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "417070726f76616c206f6620746f6b656e7320746f20436f6d706f756e64206661696c65642e",
                            "id": 4119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2487:40:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_4a49a6501a6c65ae8375d33005b9de6a176903adbac5b4851c7f619a410ba9ee",
                              "typeString": "literal_string \"Approval of tokens to Compound failed.\""
                            },
                            "value": "Approval of tokens to Compound failed."
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_4a49a6501a6c65ae8375d33005b9de6a176903adbac5b4851c7f619a410ba9ee",
                              "typeString": "literal_string \"Approval of tokens to Compound failed.\""
                            }
                          ],
                          "id": 4113,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            8469,
                            8470
                          ],
                          "referencedDeclaration": 8470,
                          "src": "2424:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 4120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2424:104:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 4121,
                      "nodeType": "ExpressionStatement",
                      "src": "2424:104:14"
                    }
                  },
                  "id": 4127,
                  "nodeType": "IfStatement",
                  "src": "2283:289:14",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4104,
                              "name": "erc20Contract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4091,
                              "src": "2333:13:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 4105,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4093,
                              "src": "2348:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 4102,
                              "name": "DydxPoolController",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5247,
                              "src": "2306:18:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_DydxPoolController_$5247_$",
                                "typeString": "type(library DydxPoolController)"
                              }
                            },
                            "id": 4103,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4918,
                            "src": "2306:26:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) returns (bool)"
                            }
                          },
                          "id": 4106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2306:49:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "417070726f76616c206f6620746f6b656e7320746f2064596458206661696c65642e",
                          "id": 4107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2357:36:14",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_1f52d08f29ec649c02f8f778f2c24940d9200027a7cb734562a97ca3c320e185",
                            "typeString": "literal_string \"Approval of tokens to dYdX failed.\""
                          },
                          "value": "Approval of tokens to dYdX failed."
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_1f52d08f29ec649c02f8f778f2c24940d9200027a7cb734562a97ca3c320e185",
                            "typeString": "literal_string \"Approval of tokens to dYdX failed.\""
                          }
                        ],
                        "id": 4101,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          8469,
                          8470
                        ],
                        "referencedDeclaration": 8470,
                        "src": "2298:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 4108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2298:96:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4109,
                    "nodeType": "ExpressionStatement",
                    "src": "2298:96:14"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 4128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2589:4:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4097,
                  "id": 4129,
                  "nodeType": "Return",
                  "src": "2582:11:14"
                }
              ]
            },
            "documentation": "@dev Approves tokens to the pool without spending gas on every deposit.\n@param pool The index of the pool.\n@param erc20Contract The ERC20 contract of the token to be approved.\n@param amount The amount of tokens to be approved.\n@return Boolean indicating success.",
            "id": 4131,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approveToPool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4094,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4089,
                  "name": "pool",
                  "nodeType": "VariableDeclaration",
                  "scope": 4131,
                  "src": "2198:10:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4088,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2198:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4091,
                  "name": "erc20Contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 4131,
                  "src": "2210:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4090,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2210:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4093,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4131,
                  "src": "2233:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4092,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2233:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2197:51:14"
            },
            "returnParameters": {
              "id": 4097,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4096,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4131,
                  "src": "2267:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4095,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2267:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2266:6:14"
            },
            "scope": 4307,
            "src": "2175:425:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4174,
              "nodeType": "Block",
              "src": "2991:305:14",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 4144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4142,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4133,
                      "src": "3005:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3013:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3005:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 4156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 4154,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4133,
                        "src": "3120:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 4155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3128:1:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "3120:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "496e76616c696420706f6f6c20696e6465782e",
                            "id": 4167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3246:21:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f064d32bce73393de16c3915d8ab96d969f494ba73fb82967516763c090099ea",
                              "typeString": "literal_string \"Invalid pool index.\""
                            },
                            "value": "Invalid pool index."
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_f064d32bce73393de16c3915d8ab96d969f494ba73fb82967516763c090099ea",
                              "typeString": "literal_string \"Invalid pool index.\""
                            }
                          ],
                          "id": 4166,
                          "name": "revert",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            8471,
                            8472
                          ],
                          "referencedDeclaration": 8472,
                          "src": "3239:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (string memory) pure"
                          }
                        },
                        "id": 4168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3239:29:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 4169,
                      "nodeType": "ExpressionStatement",
                      "src": "3239:29:14"
                    },
                    "id": 4170,
                    "nodeType": "IfStatement",
                    "src": "3116:152:14",
                    "trueBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 4160,
                                "name": "erc20Contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4135,
                                "src": "3170:13:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 4161,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4137,
                                "src": "3185:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 4158,
                                "name": "CompoundPoolController",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4768,
                                "src": "3139:22:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_CompoundPoolController_$4768_$",
                                  "typeString": "type(library CompoundPoolController)"
                                }
                              },
                              "id": 4159,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "deposit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4686,
                              "src": "3139:30:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,uint256) returns (bool)"
                              }
                            },
                            "id": 4162,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3139:53:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "4465706f73697420746f20436f6d706f756e64206661696c65642e",
                            "id": 4163,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3194:29:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_595f4e2dad862232608d33f3f1440d122cf7171d5f76fe0350e02cc357ee7406",
                              "typeString": "literal_string \"Deposit to Compound failed.\""
                            },
                            "value": "Deposit to Compound failed."
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_595f4e2dad862232608d33f3f1440d122cf7171d5f76fe0350e02cc357ee7406",
                              "typeString": "literal_string \"Deposit to Compound failed.\""
                            }
                          ],
                          "id": 4157,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            8469,
                            8470
                          ],
                          "referencedDeclaration": 8470,
                          "src": "3131:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 4164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3131:93:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 4165,
                      "nodeType": "ExpressionStatement",
                      "src": "3131:93:14"
                    }
                  },
                  "id": 4171,
                  "nodeType": "IfStatement",
                  "src": "3001:267:14",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4148,
                              "name": "erc20Contract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4135,
                              "src": "3051:13:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 4149,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4137,
                              "src": "3066:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 4146,
                              "name": "DydxPoolController",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5247,
                              "src": "3024:18:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_DydxPoolController_$5247_$",
                                "typeString": "type(library DydxPoolController)"
                              }
                            },
                            "id": 4147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "deposit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5028,
                            "src": "3024:26:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) returns (bool)"
                            }
                          },
                          "id": 4150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3024:49:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "4465706f73697420746f2064596458206661696c65642e",
                          "id": 4151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3075:25:14",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_386588c52a467cd2ad36fd3a799b9f1192a36908c69c50f9860d317abc7e6653",
                            "typeString": "literal_string \"Deposit to dYdX failed.\""
                          },
                          "value": "Deposit to dYdX failed."
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_386588c52a467cd2ad36fd3a799b9f1192a36908c69c50f9860d317abc7e6653",
                            "typeString": "literal_string \"Deposit to dYdX failed.\""
                          }
                        ],
                        "id": 4145,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          8469,
                          8470
                        ],
                        "referencedDeclaration": 8470,
                        "src": "3016:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 4152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3016:85:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4153,
                    "nodeType": "ExpressionStatement",
                    "src": "3016:85:14"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 4172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3285:4:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4141,
                  "id": 4173,
                  "nodeType": "Return",
                  "src": "3278:11:14"
                }
              ]
            },
            "documentation": "@dev Deposits funds to the specified pool.\n@param pool The index of the pool.\n@param erc20Contract The ERC20 contract of the token to be deposited.\n@param amount The amount of tokens to be deposited.\n@return Boolean indicating success.",
            "id": 4175,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositToPool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4133,
                  "name": "pool",
                  "nodeType": "VariableDeclaration",
                  "scope": 4175,
                  "src": "2916:10:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4132,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2916:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4135,
                  "name": "erc20Contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 4175,
                  "src": "2928:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4134,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2928:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4137,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4175,
                  "src": "2951:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4136,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2951:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2915:51:14"
            },
            "returnParameters": {
              "id": 4141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4140,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4175,
                  "src": "2985:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4139,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2985:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2984:6:14"
            },
            "scope": 4307,
            "src": "2893:403:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4218,
              "nodeType": "Block",
              "src": "3693:317:14",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 4188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4186,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4177,
                      "src": "3707:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3715:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3707:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 4200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 4198,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4177,
                        "src": "3828:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 4199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3836:1:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "3828:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "496e76616c696420706f6f6c20696e6465782e",
                            "id": 4211,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3960:21:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f064d32bce73393de16c3915d8ab96d969f494ba73fb82967516763c090099ea",
                              "typeString": "literal_string \"Invalid pool index.\""
                            },
                            "value": "Invalid pool index."
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_f064d32bce73393de16c3915d8ab96d969f494ba73fb82967516763c090099ea",
                              "typeString": "literal_string \"Invalid pool index.\""
                            }
                          ],
                          "id": 4210,
                          "name": "revert",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            8471,
                            8472
                          ],
                          "referencedDeclaration": 8472,
                          "src": "3953:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (string memory) pure"
                          }
                        },
                        "id": 4212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3953:29:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 4213,
                      "nodeType": "ExpressionStatement",
                      "src": "3953:29:14"
                    },
                    "id": 4214,
                    "nodeType": "IfStatement",
                    "src": "3824:158:14",
                    "trueBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 4204,
                                "name": "erc20Contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4179,
                                "src": "3879:13:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 4205,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4181,
                                "src": "3894:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 4202,
                                "name": "CompoundPoolController",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4768,
                                "src": "3847:22:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_CompoundPoolController_$4768_$",
                                  "typeString": "type(library CompoundPoolController)"
                                }
                              },
                              "id": 4203,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "withdraw",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4720,
                              "src": "3847:31:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,uint256) returns (bool)"
                              }
                            },
                            "id": 4206,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3847:54:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "5769746864726177616c2066726f6d20436f6d706f756e64206661696c65642e",
                            "id": 4207,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3903:34:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_ec332a5b53013c4f77f05d3bafa76ec73388cbfd47878f160db3d755955a2b5a",
                              "typeString": "literal_string \"Withdrawal from Compound failed.\""
                            },
                            "value": "Withdrawal from Compound failed."
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_ec332a5b53013c4f77f05d3bafa76ec73388cbfd47878f160db3d755955a2b5a",
                              "typeString": "literal_string \"Withdrawal from Compound failed.\""
                            }
                          ],
                          "id": 4201,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            8469,
                            8470
                          ],
                          "referencedDeclaration": 8470,
                          "src": "3839:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 4208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3839:99:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 4209,
                      "nodeType": "ExpressionStatement",
                      "src": "3839:99:14"
                    }
                  },
                  "id": 4215,
                  "nodeType": "IfStatement",
                  "src": "3703:279:14",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4192,
                              "name": "erc20Contract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4179,
                              "src": "3754:13:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 4193,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4181,
                              "src": "3769:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 4190,
                              "name": "DydxPoolController",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5247,
                              "src": "3726:18:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_DydxPoolController_$5247_$",
                                "typeString": "type(library DydxPoolController)"
                              }
                            },
                            "id": 4191,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5138,
                            "src": "3726:27:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) returns (bool)"
                            }
                          },
                          "id": 4194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3726:50:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "5769746864726177616c2066726f6d2064596458206661696c65642e",
                          "id": 4195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3778:30:14",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_6ad2a09603baf43d012ec04f1dfee1065eb04e928c14ed37a89e6f209cec55b4",
                            "typeString": "literal_string \"Withdrawal from dYdX failed.\""
                          },
                          "value": "Withdrawal from dYdX failed."
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_6ad2a09603baf43d012ec04f1dfee1065eb04e928c14ed37a89e6f209cec55b4",
                            "typeString": "literal_string \"Withdrawal from dYdX failed.\""
                          }
                        ],
                        "id": 4189,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          8469,
                          8470
                        ],
                        "referencedDeclaration": 8470,
                        "src": "3718:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 4196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3718:91:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4197,
                    "nodeType": "ExpressionStatement",
                    "src": "3718:91:14"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 4216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3999:4:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4185,
                  "id": 4217,
                  "nodeType": "Return",
                  "src": "3992:11:14"
                }
              ]
            },
            "documentation": "@dev Withdraws funds from the specified pool.\n@param pool The index of the pool.\n@param erc20Contract The ERC20 contract of the token to be withdrawn.\n@param amount The amount of tokens to be withdrawn.\n@return Boolean indicating success.",
            "id": 4219,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawFromPool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4177,
                  "name": "pool",
                  "nodeType": "VariableDeclaration",
                  "scope": 4219,
                  "src": "3618:10:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4176,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3618:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4179,
                  "name": "erc20Contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 4219,
                  "src": "3630:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4178,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3630:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4181,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4219,
                  "src": "3653:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4180,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3653:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3617:51:14"
            },
            "returnParameters": {
              "id": 4185,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4184,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4219,
                  "src": "3687:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4183,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3687:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3686:6:14"
            },
            "scope": 4307,
            "src": "3592:418:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4258,
              "nodeType": "Block",
              "src": "4339:307:14",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 4230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4228,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4221,
                      "src": "4353:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4361:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4353:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 4241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 4239,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4221,
                        "src": "4469:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 4240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4477:1:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "4469:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "496e76616c696420706f6f6c20696e6465782e",
                            "id": 4251,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4596:21:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f064d32bce73393de16c3915d8ab96d969f494ba73fb82967516763c090099ea",
                              "typeString": "literal_string \"Invalid pool index.\""
                            },
                            "value": "Invalid pool index."
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_f064d32bce73393de16c3915d8ab96d969f494ba73fb82967516763c090099ea",
                              "typeString": "literal_string \"Invalid pool index.\""
                            }
                          ],
                          "id": 4250,
                          "name": "revert",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            8471,
                            8472
                          ],
                          "referencedDeclaration": 8472,
                          "src": "4589:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (string memory) pure"
                          }
                        },
                        "id": 4252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4589:29:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 4253,
                      "nodeType": "ExpressionStatement",
                      "src": "4589:29:14"
                    },
                    "id": 4254,
                    "nodeType": "IfStatement",
                    "src": "4465:153:14",
                    "trueBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 4245,
                                "name": "erc20Contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4223,
                                "src": "4523:13:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 4243,
                                "name": "CompoundPoolController",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4768,
                                "src": "4488:22:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_CompoundPoolController_$4768_$",
                                  "typeString": "type(library CompoundPoolController)"
                                }
                              },
                              "id": 4244,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "withdrawAll",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4767,
                              "src": "4488:34:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) returns (bool)"
                              }
                            },
                            "id": 4246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4488:49:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "5769746864726177616c2066726f6d20436f6d706f756e64206661696c65642e",
                            "id": 4247,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4539:34:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_ec332a5b53013c4f77f05d3bafa76ec73388cbfd47878f160db3d755955a2b5a",
                              "typeString": "literal_string \"Withdrawal from Compound failed.\""
                            },
                            "value": "Withdrawal from Compound failed."
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_ec332a5b53013c4f77f05d3bafa76ec73388cbfd47878f160db3d755955a2b5a",
                              "typeString": "literal_string \"Withdrawal from Compound failed.\""
                            }
                          ],
                          "id": 4242,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            8469,
                            8470
                          ],
                          "referencedDeclaration": 8470,
                          "src": "4480:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 4248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4480:94:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 4249,
                      "nodeType": "ExpressionStatement",
                      "src": "4480:94:14"
                    }
                  },
                  "id": 4255,
                  "nodeType": "IfStatement",
                  "src": "4349:269:14",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4234,
                              "name": "erc20Contract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4223,
                              "src": "4403:13:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 4232,
                              "name": "DydxPoolController",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5247,
                              "src": "4372:18:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_DydxPoolController_$5247_$",
                                "typeString": "type(library DydxPoolController)"
                              }
                            },
                            "id": 4233,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdrawAll",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5246,
                            "src": "4372:30:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) returns (bool)"
                            }
                          },
                          "id": 4235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4372:45:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "5769746864726177616c2066726f6d2064596458206661696c65642e",
                          "id": 4236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4419:30:14",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_6ad2a09603baf43d012ec04f1dfee1065eb04e928c14ed37a89e6f209cec55b4",
                            "typeString": "literal_string \"Withdrawal from dYdX failed.\""
                          },
                          "value": "Withdrawal from dYdX failed."
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_6ad2a09603baf43d012ec04f1dfee1065eb04e928c14ed37a89e6f209cec55b4",
                            "typeString": "literal_string \"Withdrawal from dYdX failed.\""
                          }
                        ],
                        "id": 4231,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          8469,
                          8470
                        ],
                        "referencedDeclaration": 8470,
                        "src": "4364:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 4237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4364:86:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4238,
                    "nodeType": "ExpressionStatement",
                    "src": "4364:86:14"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 4256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4635:4:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4227,
                  "id": 4257,
                  "nodeType": "Return",
                  "src": "4628:11:14"
                }
              ]
            },
            "documentation": "@dev Withdraws all funds from the specified pool.\n@param pool The index of the pool.\n@param erc20Contract The ERC20 contract of the token to be withdrawn.\n@return Boolean indicating success.",
            "id": 4259,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawAllFromPool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4224,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4221,
                  "name": "pool",
                  "nodeType": "VariableDeclaration",
                  "scope": 4259,
                  "src": "4280:10:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4220,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4280:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4223,
                  "name": "erc20Contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 4259,
                  "src": "4292:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4222,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4292:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4279:35:14"
            },
            "returnParameters": {
              "id": 4227,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4226,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4259,
                  "src": "4333:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4225,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4333:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4332:6:14"
            },
            "scope": 4307,
            "src": "4251:395:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4279,
              "nodeType": "Block",
              "src": "5002:138:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4271,
                            "name": "erc20Contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4261,
                            "src": "5053:13:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 4272,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4263,
                            "src": "5068:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 4269,
                            "name": "ZeroExExchangeController",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4513,
                            "src": "5020:24:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ZeroExExchangeController_$4513_$",
                              "typeString": "type(library ZeroExExchangeController)"
                            }
                          },
                          "id": 4270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "approve",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4388,
                          "src": "5020:32:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) returns (bool)"
                          }
                        },
                        "id": 4273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5020:55:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "417070726f76616c206f6620746f6b656e7320746f203078206661696c65642e",
                        "id": 4274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5077:34:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d8c23b8797dcbff5c0892f5a738dd5c3ed0451530c98460977652d9c6d9fef6",
                          "typeString": "literal_string \"Approval of tokens to 0x failed.\""
                        },
                        "value": "Approval of tokens to 0x failed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d8c23b8797dcbff5c0892f5a738dd5c3ed0451530c98460977652d9c6d9fef6",
                          "typeString": "literal_string \"Approval of tokens to 0x failed.\""
                        }
                      ],
                      "id": 4268,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8469,
                        8470
                      ],
                      "referencedDeclaration": 8470,
                      "src": "5012:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5012:100:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4276,
                  "nodeType": "ExpressionStatement",
                  "src": "5012:100:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 4277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5129:4:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4267,
                  "id": 4278,
                  "nodeType": "Return",
                  "src": "5122:11:14"
                }
              ]
            },
            "documentation": "@dev Approves tokens to 0x without spending gas on every deposit.\n@param erc20Contract The ERC20 contract of the token to be approved.\n@param amount The amount of tokens to be approved.\n@return Boolean indicating success.",
            "id": 4280,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approveTo0x",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4261,
                  "name": "erc20Contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 4280,
                  "src": "4939:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4260,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4939:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4263,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4280,
                  "src": "4962:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4262,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4962:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4938:39:14"
            },
            "returnParameters": {
              "id": 4267,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4266,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4280,
                  "src": "4996:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4265,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4996:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4995:6:14"
            },
            "scope": 4307,
            "src": "4918:222:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4305,
              "nodeType": "Block",
              "src": "6010:130:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4299,
                        "name": "orders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4283,
                        "src": "6079:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Order_$6377_memory_$dyn_memory_ptr",
                          "typeString": "struct LibOrder.Order memory[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4300,
                        "name": "signatures",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4286,
                        "src": "6087:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4301,
                        "name": "takerAssetFillAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4288,
                        "src": "6099:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4302,
                        "name": "protocolFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4290,
                        "src": "6121:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_Order_$6377_memory_$dyn_memory_ptr",
                          "typeString": "struct LibOrder.Order memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4297,
                        "name": "ZeroExExchangeController",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4513,
                        "src": "6027:24:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ZeroExExchangeController_$4513_$",
                          "typeString": "type(library ZeroExExchangeController)"
                        }
                      },
                      "id": 4298,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketSellOrdersFillOrKill",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4450,
                      "src": "6027:51:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_Order_$6377_memory_$dyn_memory_ptr_$_t_array$_t_bytes_memory_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
                        "typeString": "function (struct LibOrder.Order memory[] memory,bytes memory[] memory,uint256,uint256) returns (uint256[2] memory)"
                      }
                    },
                    "id": 4303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6027:106:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                      "typeString": "uint256[2] memory"
                    }
                  },
                  "functionReturnParameters": 4296,
                  "id": 4304,
                  "nodeType": "Return",
                  "src": "6020:113:14"
                }
              ]
            },
            "documentation": "@dev Fills 0x exchange orders up to a certain amount of input and up to a certain price.\nWe should be able to make this function external and use calldata for all parameters, but Solidity does not support calldata structs (https://github.com/ethereum/solidity/issues/5479).\n@param orders The limit orders to be filled in ascending order of price.\n@param signatures The signatures for the orders.\n@param takerAssetFillAmount The amount of the taker asset to sell (excluding taker fees).\n@param protocolFee The protocol fee in ETH to pay to 0x.\n@return Array containing the input amount sold and output amount bought.",
            "id": 4306,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "marketSell0xOrdersFillOrKill",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4283,
                  "name": "orders",
                  "nodeType": "VariableDeclaration",
                  "scope": 4306,
                  "src": "5865:30:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$6377_memory_$dyn_memory_ptr",
                    "typeString": "struct LibOrder.Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 4281,
                      "name": "LibOrder.Order",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 6377,
                      "src": "5865:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$6377_storage_ptr",
                        "typeString": "struct LibOrder.Order"
                      }
                    },
                    "id": 4282,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5865:16:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$6377_storage_$dyn_storage_ptr",
                      "typeString": "struct LibOrder.Order[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4286,
                  "name": "signatures",
                  "nodeType": "VariableDeclaration",
                  "scope": 4306,
                  "src": "5897:25:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4284,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "5897:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 4285,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5897:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4288,
                  "name": "takerAssetFillAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4306,
                  "src": "5924:28:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4287,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5924:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4290,
                  "name": "protocolFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 4306,
                  "src": "5954:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4289,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5954:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5864:110:14"
            },
            "returnParameters": {
              "id": 4296,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4295,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4306,
                  "src": "5991:17:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4292,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5991:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4294,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 4293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5999:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "5991:10:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5990:19:14"
            },
            "scope": 4307,
            "src": "5827:313:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 4308,
        "src": "1100:5042:14"
      }
    ],
    "src": "607:5536:14"
  },
  "legacyAST": {
    "absolutePath": "/home/david/rari-contracts-launch/contracts/lib/RariFundController.sol",
    "exportedSymbols": {
      "RariFundController": [
        4307
      ]
    },
    "id": 4308,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4046,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "607:23:14"
      },
      {
        "id": 4047,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "631:33:14"
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 4048,
        "nodeType": "ImportDirective",
        "scope": 4308,
        "sourceUnit": 7912,
        "src": "666:51:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@0x/contracts-exchange-libs/contracts/src/LibOrder.sol",
        "file": "@0x/contracts-exchange-libs/contracts/src/LibOrder.sol",
        "id": 4049,
        "nodeType": "ImportDirective",
        "scope": 4308,
        "sourceUnit": 6443,
        "src": "719:64:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/david/rari-contracts-launch/contracts/lib/pools/DydxPoolController.sol",
        "file": "./pools/DydxPoolController.sol",
        "id": 4050,
        "nodeType": "ImportDirective",
        "scope": 4308,
        "sourceUnit": 5248,
        "src": "785:40:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/david/rari-contracts-launch/contracts/lib/pools/CompoundPoolController.sol",
        "file": "./pools/CompoundPoolController.sol",
        "id": 4051,
        "nodeType": "ImportDirective",
        "scope": 4308,
        "sourceUnit": 4769,
        "src": "826:44:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/david/rari-contracts-launch/contracts/lib/exchanges/ZeroExExchangeController.sol",
        "file": "./exchanges/ZeroExExchangeController.sol",
        "id": 4052,
        "nodeType": "ImportDirective",
        "scope": 4308,
        "sourceUnit": 4514,
        "src": "871:50:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@title RariFundController\n@dev This library handles deposits to and withdrawals from the liquidity pools that power RariFund as well as currency exchanges via 0x.",
        "fullyImplemented": true,
        "id": 4307,
        "linearizedBaseContracts": [
          4307
        ],
        "name": "RariFundController",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 4055,
            "libraryName": {
              "contractScope": null,
              "id": 4053,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7911,
              "src": "1139:8:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$7911",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1133:27:14",
            "typeName": {
              "id": 4054,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1152:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 4086,
              "nodeType": "Block",
              "src": "1643:212:14",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 4066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4064,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4057,
                      "src": "1657:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4065,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1665:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1657:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 4074,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 4072,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4057,
                        "src": "1738:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 4073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1746:1:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "1738:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "496e76616c696420706f6f6c20696e6465782e",
                            "id": 4081,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1826:21:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f064d32bce73393de16c3915d8ab96d969f494ba73fb82967516763c090099ea",
                              "typeString": "literal_string \"Invalid pool index.\""
                            },
                            "value": "Invalid pool index."
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_f064d32bce73393de16c3915d8ab96d969f494ba73fb82967516763c090099ea",
                              "typeString": "literal_string \"Invalid pool index.\""
                            }
                          ],
                          "id": 4080,
                          "name": "revert",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            8471,
                            8472
                          ],
                          "referencedDeclaration": 8472,
                          "src": "1819:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (string memory) pure"
                          }
                        },
                        "id": 4082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1819:29:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 4083,
                      "nodeType": "ExpressionStatement",
                      "src": "1819:29:14"
                    },
                    "id": 4084,
                    "nodeType": "IfStatement",
                    "src": "1734:114:14",
                    "trueBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4077,
                            "name": "erc20Contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4059,
                            "src": "1790:13:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 4075,
                            "name": "CompoundPoolController",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4768,
                            "src": "1756:22:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_CompoundPoolController_$4768_$",
                              "typeString": "type(library CompoundPoolController)"
                            }
                          },
                          "id": 4076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4590,
                          "src": "1756:33:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) returns (uint256)"
                          }
                        },
                        "id": 4078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1756:48:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 4063,
                      "id": 4079,
                      "nodeType": "Return",
                      "src": "1749:55:14"
                    }
                  },
                  "id": 4085,
                  "nodeType": "IfStatement",
                  "src": "1653:195:14",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4069,
                          "name": "erc20Contract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4059,
                          "src": "1705:13:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 4067,
                          "name": "DydxPoolController",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5247,
                          "src": "1675:18:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_DydxPoolController_$5247_$",
                            "typeString": "type(library DydxPoolController)"
                          }
                        },
                        "id": 4068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getBalance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4862,
                        "src": "1675:29:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view returns (uint256)"
                        }
                      },
                      "id": 4070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1675:44:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 4063,
                    "id": 4071,
                    "nodeType": "Return",
                    "src": "1668:51:14"
                  }
                }
              ]
            },
            "documentation": "@dev Returns the calling address's balance of the specified currency in the specified pool.\nIdeally, we can add the view modifier, but Compound's `getUnderlyingBalance` function (called by `CompoundPoolController.getBalance`) potentially modifies the state.\n@param pool The index of the pool.\n@param erc20Contract The ERC20 contract of the token.",
            "id": 4087,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPoolBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4060,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4057,
                  "name": "pool",
                  "nodeType": "VariableDeclaration",
                  "scope": 4087,
                  "src": "1581:10:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4056,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1581:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4059,
                  "name": "erc20Contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 4087,
                  "src": "1593:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4058,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1593:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1580:35:14"
            },
            "returnParameters": {
              "id": 4063,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4062,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4087,
                  "src": "1634:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4061,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1634:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1633:9:14"
            },
            "scope": 4307,
            "src": "1557:298:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4130,
              "nodeType": "Block",
              "src": "2273:327:14",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 4100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4098,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4089,
                      "src": "2287:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4099,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2295:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2287:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 4112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 4110,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4089,
                        "src": "2413:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 4111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2421:1:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "2413:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "496e76616c696420706f6f6c20696e6465782e",
                            "id": 4123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2550:21:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f064d32bce73393de16c3915d8ab96d969f494ba73fb82967516763c090099ea",
                              "typeString": "literal_string \"Invalid pool index.\""
                            },
                            "value": "Invalid pool index."
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_f064d32bce73393de16c3915d8ab96d969f494ba73fb82967516763c090099ea",
                              "typeString": "literal_string \"Invalid pool index.\""
                            }
                          ],
                          "id": 4122,
                          "name": "revert",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            8471,
                            8472
                          ],
                          "referencedDeclaration": 8472,
                          "src": "2543:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (string memory) pure"
                          }
                        },
                        "id": 4124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2543:29:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 4125,
                      "nodeType": "ExpressionStatement",
                      "src": "2543:29:14"
                    },
                    "id": 4126,
                    "nodeType": "IfStatement",
                    "src": "2409:163:14",
                    "trueBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 4116,
                                "name": "erc20Contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4091,
                                "src": "2463:13:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 4117,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4093,
                                "src": "2478:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 4114,
                                "name": "CompoundPoolController",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4768,
                                "src": "2432:22:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_CompoundPoolController_$4768_$",
                                  "typeString": "type(library CompoundPoolController)"
                                }
                              },
                              "id": 4115,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "approve",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4652,
                              "src": "2432:30:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,uint256) returns (bool)"
                              }
                            },
                            "id": 4118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2432:53:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "417070726f76616c206f6620746f6b656e7320746f20436f6d706f756e64206661696c65642e",
                            "id": 4119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2487:40:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_4a49a6501a6c65ae8375d33005b9de6a176903adbac5b4851c7f619a410ba9ee",
                              "typeString": "literal_string \"Approval of tokens to Compound failed.\""
                            },
                            "value": "Approval of tokens to Compound failed."
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_4a49a6501a6c65ae8375d33005b9de6a176903adbac5b4851c7f619a410ba9ee",
                              "typeString": "literal_string \"Approval of tokens to Compound failed.\""
                            }
                          ],
                          "id": 4113,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            8469,
                            8470
                          ],
                          "referencedDeclaration": 8470,
                          "src": "2424:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 4120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2424:104:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 4121,
                      "nodeType": "ExpressionStatement",
                      "src": "2424:104:14"
                    }
                  },
                  "id": 4127,
                  "nodeType": "IfStatement",
                  "src": "2283:289:14",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4104,
                              "name": "erc20Contract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4091,
                              "src": "2333:13:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 4105,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4093,
                              "src": "2348:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 4102,
                              "name": "DydxPoolController",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5247,
                              "src": "2306:18:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_DydxPoolController_$5247_$",
                                "typeString": "type(library DydxPoolController)"
                              }
                            },
                            "id": 4103,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4918,
                            "src": "2306:26:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) returns (bool)"
                            }
                          },
                          "id": 4106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2306:49:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "417070726f76616c206f6620746f6b656e7320746f2064596458206661696c65642e",
                          "id": 4107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2357:36:14",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_1f52d08f29ec649c02f8f778f2c24940d9200027a7cb734562a97ca3c320e185",
                            "typeString": "literal_string \"Approval of tokens to dYdX failed.\""
                          },
                          "value": "Approval of tokens to dYdX failed."
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_1f52d08f29ec649c02f8f778f2c24940d9200027a7cb734562a97ca3c320e185",
                            "typeString": "literal_string \"Approval of tokens to dYdX failed.\""
                          }
                        ],
                        "id": 4101,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          8469,
                          8470
                        ],
                        "referencedDeclaration": 8470,
                        "src": "2298:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 4108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2298:96:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4109,
                    "nodeType": "ExpressionStatement",
                    "src": "2298:96:14"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 4128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2589:4:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4097,
                  "id": 4129,
                  "nodeType": "Return",
                  "src": "2582:11:14"
                }
              ]
            },
            "documentation": "@dev Approves tokens to the pool without spending gas on every deposit.\n@param pool The index of the pool.\n@param erc20Contract The ERC20 contract of the token to be approved.\n@param amount The amount of tokens to be approved.\n@return Boolean indicating success.",
            "id": 4131,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approveToPool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4094,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4089,
                  "name": "pool",
                  "nodeType": "VariableDeclaration",
                  "scope": 4131,
                  "src": "2198:10:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4088,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2198:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4091,
                  "name": "erc20Contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 4131,
                  "src": "2210:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4090,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2210:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4093,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4131,
                  "src": "2233:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4092,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2233:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2197:51:14"
            },
            "returnParameters": {
              "id": 4097,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4096,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4131,
                  "src": "2267:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4095,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2267:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2266:6:14"
            },
            "scope": 4307,
            "src": "2175:425:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4174,
              "nodeType": "Block",
              "src": "2991:305:14",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 4144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4142,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4133,
                      "src": "3005:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3013:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3005:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 4156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 4154,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4133,
                        "src": "3120:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 4155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3128:1:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "3120:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "496e76616c696420706f6f6c20696e6465782e",
                            "id": 4167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3246:21:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f064d32bce73393de16c3915d8ab96d969f494ba73fb82967516763c090099ea",
                              "typeString": "literal_string \"Invalid pool index.\""
                            },
                            "value": "Invalid pool index."
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_f064d32bce73393de16c3915d8ab96d969f494ba73fb82967516763c090099ea",
                              "typeString": "literal_string \"Invalid pool index.\""
                            }
                          ],
                          "id": 4166,
                          "name": "revert",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            8471,
                            8472
                          ],
                          "referencedDeclaration": 8472,
                          "src": "3239:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (string memory) pure"
                          }
                        },
                        "id": 4168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3239:29:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 4169,
                      "nodeType": "ExpressionStatement",
                      "src": "3239:29:14"
                    },
                    "id": 4170,
                    "nodeType": "IfStatement",
                    "src": "3116:152:14",
                    "trueBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 4160,
                                "name": "erc20Contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4135,
                                "src": "3170:13:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 4161,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4137,
                                "src": "3185:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 4158,
                                "name": "CompoundPoolController",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4768,
                                "src": "3139:22:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_CompoundPoolController_$4768_$",
                                  "typeString": "type(library CompoundPoolController)"
                                }
                              },
                              "id": 4159,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "deposit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4686,
                              "src": "3139:30:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,uint256) returns (bool)"
                              }
                            },
                            "id": 4162,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3139:53:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "4465706f73697420746f20436f6d706f756e64206661696c65642e",
                            "id": 4163,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3194:29:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_595f4e2dad862232608d33f3f1440d122cf7171d5f76fe0350e02cc357ee7406",
                              "typeString": "literal_string \"Deposit to Compound failed.\""
                            },
                            "value": "Deposit to Compound failed."
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_595f4e2dad862232608d33f3f1440d122cf7171d5f76fe0350e02cc357ee7406",
                              "typeString": "literal_string \"Deposit to Compound failed.\""
                            }
                          ],
                          "id": 4157,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            8469,
                            8470
                          ],
                          "referencedDeclaration": 8470,
                          "src": "3131:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 4164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3131:93:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 4165,
                      "nodeType": "ExpressionStatement",
                      "src": "3131:93:14"
                    }
                  },
                  "id": 4171,
                  "nodeType": "IfStatement",
                  "src": "3001:267:14",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4148,
                              "name": "erc20Contract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4135,
                              "src": "3051:13:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 4149,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4137,
                              "src": "3066:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 4146,
                              "name": "DydxPoolController",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5247,
                              "src": "3024:18:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_DydxPoolController_$5247_$",
                                "typeString": "type(library DydxPoolController)"
                              }
                            },
                            "id": 4147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "deposit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5028,
                            "src": "3024:26:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) returns (bool)"
                            }
                          },
                          "id": 4150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3024:49:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "4465706f73697420746f2064596458206661696c65642e",
                          "id": 4151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3075:25:14",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_386588c52a467cd2ad36fd3a799b9f1192a36908c69c50f9860d317abc7e6653",
                            "typeString": "literal_string \"Deposit to dYdX failed.\""
                          },
                          "value": "Deposit to dYdX failed."
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_386588c52a467cd2ad36fd3a799b9f1192a36908c69c50f9860d317abc7e6653",
                            "typeString": "literal_string \"Deposit to dYdX failed.\""
                          }
                        ],
                        "id": 4145,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          8469,
                          8470
                        ],
                        "referencedDeclaration": 8470,
                        "src": "3016:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 4152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3016:85:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4153,
                    "nodeType": "ExpressionStatement",
                    "src": "3016:85:14"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 4172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3285:4:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4141,
                  "id": 4173,
                  "nodeType": "Return",
                  "src": "3278:11:14"
                }
              ]
            },
            "documentation": "@dev Deposits funds to the specified pool.\n@param pool The index of the pool.\n@param erc20Contract The ERC20 contract of the token to be deposited.\n@param amount The amount of tokens to be deposited.\n@return Boolean indicating success.",
            "id": 4175,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositToPool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4133,
                  "name": "pool",
                  "nodeType": "VariableDeclaration",
                  "scope": 4175,
                  "src": "2916:10:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4132,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2916:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4135,
                  "name": "erc20Contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 4175,
                  "src": "2928:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4134,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2928:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4137,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4175,
                  "src": "2951:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4136,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2951:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2915:51:14"
            },
            "returnParameters": {
              "id": 4141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4140,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4175,
                  "src": "2985:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4139,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2985:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2984:6:14"
            },
            "scope": 4307,
            "src": "2893:403:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4218,
              "nodeType": "Block",
              "src": "3693:317:14",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 4188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4186,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4177,
                      "src": "3707:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3715:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3707:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 4200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 4198,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4177,
                        "src": "3828:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 4199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3836:1:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "3828:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "496e76616c696420706f6f6c20696e6465782e",
                            "id": 4211,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3960:21:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f064d32bce73393de16c3915d8ab96d969f494ba73fb82967516763c090099ea",
                              "typeString": "literal_string \"Invalid pool index.\""
                            },
                            "value": "Invalid pool index."
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_f064d32bce73393de16c3915d8ab96d969f494ba73fb82967516763c090099ea",
                              "typeString": "literal_string \"Invalid pool index.\""
                            }
                          ],
                          "id": 4210,
                          "name": "revert",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            8471,
                            8472
                          ],
                          "referencedDeclaration": 8472,
                          "src": "3953:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (string memory) pure"
                          }
                        },
                        "id": 4212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3953:29:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 4213,
                      "nodeType": "ExpressionStatement",
                      "src": "3953:29:14"
                    },
                    "id": 4214,
                    "nodeType": "IfStatement",
                    "src": "3824:158:14",
                    "trueBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 4204,
                                "name": "erc20Contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4179,
                                "src": "3879:13:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 4205,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4181,
                                "src": "3894:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 4202,
                                "name": "CompoundPoolController",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4768,
                                "src": "3847:22:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_CompoundPoolController_$4768_$",
                                  "typeString": "type(library CompoundPoolController)"
                                }
                              },
                              "id": 4203,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "withdraw",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4720,
                              "src": "3847:31:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,uint256) returns (bool)"
                              }
                            },
                            "id": 4206,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3847:54:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "5769746864726177616c2066726f6d20436f6d706f756e64206661696c65642e",
                            "id": 4207,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3903:34:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_ec332a5b53013c4f77f05d3bafa76ec73388cbfd47878f160db3d755955a2b5a",
                              "typeString": "literal_string \"Withdrawal from Compound failed.\""
                            },
                            "value": "Withdrawal from Compound failed."
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_ec332a5b53013c4f77f05d3bafa76ec73388cbfd47878f160db3d755955a2b5a",
                              "typeString": "literal_string \"Withdrawal from Compound failed.\""
                            }
                          ],
                          "id": 4201,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            8469,
                            8470
                          ],
                          "referencedDeclaration": 8470,
                          "src": "3839:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 4208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3839:99:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 4209,
                      "nodeType": "ExpressionStatement",
                      "src": "3839:99:14"
                    }
                  },
                  "id": 4215,
                  "nodeType": "IfStatement",
                  "src": "3703:279:14",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4192,
                              "name": "erc20Contract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4179,
                              "src": "3754:13:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 4193,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4181,
                              "src": "3769:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 4190,
                              "name": "DydxPoolController",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5247,
                              "src": "3726:18:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_DydxPoolController_$5247_$",
                                "typeString": "type(library DydxPoolController)"
                              }
                            },
                            "id": 4191,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5138,
                            "src": "3726:27:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) returns (bool)"
                            }
                          },
                          "id": 4194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3726:50:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "5769746864726177616c2066726f6d2064596458206661696c65642e",
                          "id": 4195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3778:30:14",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_6ad2a09603baf43d012ec04f1dfee1065eb04e928c14ed37a89e6f209cec55b4",
                            "typeString": "literal_string \"Withdrawal from dYdX failed.\""
                          },
                          "value": "Withdrawal from dYdX failed."
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_6ad2a09603baf43d012ec04f1dfee1065eb04e928c14ed37a89e6f209cec55b4",
                            "typeString": "literal_string \"Withdrawal from dYdX failed.\""
                          }
                        ],
                        "id": 4189,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          8469,
                          8470
                        ],
                        "referencedDeclaration": 8470,
                        "src": "3718:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 4196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3718:91:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4197,
                    "nodeType": "ExpressionStatement",
                    "src": "3718:91:14"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 4216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3999:4:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4185,
                  "id": 4217,
                  "nodeType": "Return",
                  "src": "3992:11:14"
                }
              ]
            },
            "documentation": "@dev Withdraws funds from the specified pool.\n@param pool The index of the pool.\n@param erc20Contract The ERC20 contract of the token to be withdrawn.\n@param amount The amount of tokens to be withdrawn.\n@return Boolean indicating success.",
            "id": 4219,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawFromPool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4177,
                  "name": "pool",
                  "nodeType": "VariableDeclaration",
                  "scope": 4219,
                  "src": "3618:10:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4176,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3618:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4179,
                  "name": "erc20Contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 4219,
                  "src": "3630:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4178,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3630:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4181,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4219,
                  "src": "3653:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4180,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3653:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3617:51:14"
            },
            "returnParameters": {
              "id": 4185,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4184,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4219,
                  "src": "3687:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4183,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3687:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3686:6:14"
            },
            "scope": 4307,
            "src": "3592:418:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4258,
              "nodeType": "Block",
              "src": "4339:307:14",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 4230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4228,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4221,
                      "src": "4353:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4361:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4353:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 4241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 4239,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4221,
                        "src": "4469:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 4240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4477:1:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "4469:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "496e76616c696420706f6f6c20696e6465782e",
                            "id": 4251,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4596:21:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f064d32bce73393de16c3915d8ab96d969f494ba73fb82967516763c090099ea",
                              "typeString": "literal_string \"Invalid pool index.\""
                            },
                            "value": "Invalid pool index."
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_f064d32bce73393de16c3915d8ab96d969f494ba73fb82967516763c090099ea",
                              "typeString": "literal_string \"Invalid pool index.\""
                            }
                          ],
                          "id": 4250,
                          "name": "revert",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            8471,
                            8472
                          ],
                          "referencedDeclaration": 8472,
                          "src": "4589:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (string memory) pure"
                          }
                        },
                        "id": 4252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4589:29:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 4253,
                      "nodeType": "ExpressionStatement",
                      "src": "4589:29:14"
                    },
                    "id": 4254,
                    "nodeType": "IfStatement",
                    "src": "4465:153:14",
                    "trueBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 4245,
                                "name": "erc20Contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4223,
                                "src": "4523:13:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 4243,
                                "name": "CompoundPoolController",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4768,
                                "src": "4488:22:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_CompoundPoolController_$4768_$",
                                  "typeString": "type(library CompoundPoolController)"
                                }
                              },
                              "id": 4244,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "withdrawAll",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4767,
                              "src": "4488:34:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) returns (bool)"
                              }
                            },
                            "id": 4246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4488:49:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "5769746864726177616c2066726f6d20436f6d706f756e64206661696c65642e",
                            "id": 4247,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4539:34:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_ec332a5b53013c4f77f05d3bafa76ec73388cbfd47878f160db3d755955a2b5a",
                              "typeString": "literal_string \"Withdrawal from Compound failed.\""
                            },
                            "value": "Withdrawal from Compound failed."
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_ec332a5b53013c4f77f05d3bafa76ec73388cbfd47878f160db3d755955a2b5a",
                              "typeString": "literal_string \"Withdrawal from Compound failed.\""
                            }
                          ],
                          "id": 4242,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            8469,
                            8470
                          ],
                          "referencedDeclaration": 8470,
                          "src": "4480:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 4248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4480:94:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 4249,
                      "nodeType": "ExpressionStatement",
                      "src": "4480:94:14"
                    }
                  },
                  "id": 4255,
                  "nodeType": "IfStatement",
                  "src": "4349:269:14",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4234,
                              "name": "erc20Contract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4223,
                              "src": "4403:13:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 4232,
                              "name": "DydxPoolController",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5247,
                              "src": "4372:18:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_DydxPoolController_$5247_$",
                                "typeString": "type(library DydxPoolController)"
                              }
                            },
                            "id": 4233,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdrawAll",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5246,
                            "src": "4372:30:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) returns (bool)"
                            }
                          },
                          "id": 4235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4372:45:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "5769746864726177616c2066726f6d2064596458206661696c65642e",
                          "id": 4236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4419:30:14",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_6ad2a09603baf43d012ec04f1dfee1065eb04e928c14ed37a89e6f209cec55b4",
                            "typeString": "literal_string \"Withdrawal from dYdX failed.\""
                          },
                          "value": "Withdrawal from dYdX failed."
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_6ad2a09603baf43d012ec04f1dfee1065eb04e928c14ed37a89e6f209cec55b4",
                            "typeString": "literal_string \"Withdrawal from dYdX failed.\""
                          }
                        ],
                        "id": 4231,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          8469,
                          8470
                        ],
                        "referencedDeclaration": 8470,
                        "src": "4364:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 4237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4364:86:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4238,
                    "nodeType": "ExpressionStatement",
                    "src": "4364:86:14"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 4256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4635:4:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4227,
                  "id": 4257,
                  "nodeType": "Return",
                  "src": "4628:11:14"
                }
              ]
            },
            "documentation": "@dev Withdraws all funds from the specified pool.\n@param pool The index of the pool.\n@param erc20Contract The ERC20 contract of the token to be withdrawn.\n@return Boolean indicating success.",
            "id": 4259,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawAllFromPool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4224,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4221,
                  "name": "pool",
                  "nodeType": "VariableDeclaration",
                  "scope": 4259,
                  "src": "4280:10:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4220,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4280:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4223,
                  "name": "erc20Contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 4259,
                  "src": "4292:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4222,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4292:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4279:35:14"
            },
            "returnParameters": {
              "id": 4227,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4226,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4259,
                  "src": "4333:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4225,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4333:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4332:6:14"
            },
            "scope": 4307,
            "src": "4251:395:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4279,
              "nodeType": "Block",
              "src": "5002:138:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4271,
                            "name": "erc20Contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4261,
                            "src": "5053:13:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 4272,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4263,
                            "src": "5068:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 4269,
                            "name": "ZeroExExchangeController",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4513,
                            "src": "5020:24:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ZeroExExchangeController_$4513_$",
                              "typeString": "type(library ZeroExExchangeController)"
                            }
                          },
                          "id": 4270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "approve",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4388,
                          "src": "5020:32:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) returns (bool)"
                          }
                        },
                        "id": 4273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5020:55:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "417070726f76616c206f6620746f6b656e7320746f203078206661696c65642e",
                        "id": 4274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5077:34:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d8c23b8797dcbff5c0892f5a738dd5c3ed0451530c98460977652d9c6d9fef6",
                          "typeString": "literal_string \"Approval of tokens to 0x failed.\""
                        },
                        "value": "Approval of tokens to 0x failed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d8c23b8797dcbff5c0892f5a738dd5c3ed0451530c98460977652d9c6d9fef6",
                          "typeString": "literal_string \"Approval of tokens to 0x failed.\""
                        }
                      ],
                      "id": 4268,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8469,
                        8470
                      ],
                      "referencedDeclaration": 8470,
                      "src": "5012:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5012:100:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4276,
                  "nodeType": "ExpressionStatement",
                  "src": "5012:100:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 4277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5129:4:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4267,
                  "id": 4278,
                  "nodeType": "Return",
                  "src": "5122:11:14"
                }
              ]
            },
            "documentation": "@dev Approves tokens to 0x without spending gas on every deposit.\n@param erc20Contract The ERC20 contract of the token to be approved.\n@param amount The amount of tokens to be approved.\n@return Boolean indicating success.",
            "id": 4280,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approveTo0x",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4261,
                  "name": "erc20Contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 4280,
                  "src": "4939:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4260,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4939:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4263,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4280,
                  "src": "4962:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4262,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4962:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4938:39:14"
            },
            "returnParameters": {
              "id": 4267,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4266,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4280,
                  "src": "4996:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4265,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4996:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4995:6:14"
            },
            "scope": 4307,
            "src": "4918:222:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4305,
              "nodeType": "Block",
              "src": "6010:130:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4299,
                        "name": "orders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4283,
                        "src": "6079:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Order_$6377_memory_$dyn_memory_ptr",
                          "typeString": "struct LibOrder.Order memory[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4300,
                        "name": "signatures",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4286,
                        "src": "6087:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4301,
                        "name": "takerAssetFillAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4288,
                        "src": "6099:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4302,
                        "name": "protocolFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4290,
                        "src": "6121:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_Order_$6377_memory_$dyn_memory_ptr",
                          "typeString": "struct LibOrder.Order memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4297,
                        "name": "ZeroExExchangeController",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4513,
                        "src": "6027:24:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ZeroExExchangeController_$4513_$",
                          "typeString": "type(library ZeroExExchangeController)"
                        }
                      },
                      "id": 4298,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketSellOrdersFillOrKill",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4450,
                      "src": "6027:51:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_Order_$6377_memory_$dyn_memory_ptr_$_t_array$_t_bytes_memory_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
                        "typeString": "function (struct LibOrder.Order memory[] memory,bytes memory[] memory,uint256,uint256) returns (uint256[2] memory)"
                      }
                    },
                    "id": 4303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6027:106:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                      "typeString": "uint256[2] memory"
                    }
                  },
                  "functionReturnParameters": 4296,
                  "id": 4304,
                  "nodeType": "Return",
                  "src": "6020:113:14"
                }
              ]
            },
            "documentation": "@dev Fills 0x exchange orders up to a certain amount of input and up to a certain price.\nWe should be able to make this function external and use calldata for all parameters, but Solidity does not support calldata structs (https://github.com/ethereum/solidity/issues/5479).\n@param orders The limit orders to be filled in ascending order of price.\n@param signatures The signatures for the orders.\n@param takerAssetFillAmount The amount of the taker asset to sell (excluding taker fees).\n@param protocolFee The protocol fee in ETH to pay to 0x.\n@return Array containing the input amount sold and output amount bought.",
            "id": 4306,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "marketSell0xOrdersFillOrKill",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4283,
                  "name": "orders",
                  "nodeType": "VariableDeclaration",
                  "scope": 4306,
                  "src": "5865:30:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$6377_memory_$dyn_memory_ptr",
                    "typeString": "struct LibOrder.Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 4281,
                      "name": "LibOrder.Order",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 6377,
                      "src": "5865:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$6377_storage_ptr",
                        "typeString": "struct LibOrder.Order"
                      }
                    },
                    "id": 4282,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5865:16:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$6377_storage_$dyn_storage_ptr",
                      "typeString": "struct LibOrder.Order[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4286,
                  "name": "signatures",
                  "nodeType": "VariableDeclaration",
                  "scope": 4306,
                  "src": "5897:25:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4284,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "5897:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 4285,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5897:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4288,
                  "name": "takerAssetFillAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4306,
                  "src": "5924:28:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4287,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5924:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4290,
                  "name": "protocolFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 4306,
                  "src": "5954:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4289,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5954:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5864:110:14"
            },
            "returnParameters": {
              "id": 4296,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4295,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4306,
                  "src": "5991:17:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4292,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5991:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4294,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 4293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5999:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "5991:10:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5990:19:14"
            },
            "scope": 4307,
            "src": "5827:313:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 4308,
        "src": "1100:5042:14"
      }
    ],
    "src": "607:5536:14"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {
    "1": {
      "events": {},
      "links": {},
      "address": "0x52D6bB688A51831E95291d3BF02D0D7dA79Aaa63",
      "transactionHash": "0x7b2cf1fa0a9285e81b8f85fe7e1cae16b30a298088c3fc5ba165cc41739aa057"
    }
  },
  "schemaVersion": "3.2.0",
  "updatedAt": "2020-06-30T05:57:39.197Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "This library handles deposits to and withdrawals from the liquidity pools that power RariFund as well as currency exchanges via 0x.",
    "methods": {
      "approveTo0x(address,uint256)": {
        "details": "Approves tokens to 0x without spending gas on every deposit.",
        "params": {
          "amount": "The amount of tokens to be approved.",
          "erc20Contract": "The ERC20 contract of the token to be approved."
        },
        "return": "Boolean indicating success."
      },
      "approveToPool(uint8,address,uint256)": {
        "details": "Approves tokens to the pool without spending gas on every deposit.",
        "params": {
          "amount": "The amount of tokens to be approved.",
          "erc20Contract": "The ERC20 contract of the token to be approved.",
          "pool": "The index of the pool."
        },
        "return": "Boolean indicating success."
      },
      "depositToPool(uint8,address,uint256)": {
        "details": "Deposits funds to the specified pool.",
        "params": {
          "amount": "The amount of tokens to be deposited.",
          "erc20Contract": "The ERC20 contract of the token to be deposited.",
          "pool": "The index of the pool."
        },
        "return": "Boolean indicating success."
      },
      "getPoolBalance(uint8,address)": {
        "details": "Returns the calling address's balance of the specified currency in the specified pool. Ideally, we can add the view modifier, but Compound's `getUnderlyingBalance` function (called by `CompoundPoolController.getBalance`) potentially modifies the state.",
        "params": {
          "erc20Contract": "The ERC20 contract of the token.",
          "pool": "The index of the pool."
        }
      },
      "marketSell0xOrdersFillOrKill(LibOrder.Order[],bytes[],uint256,uint256)": {
        "details": "Fills 0x exchange orders up to a certain amount of input and up to a certain price. We should be able to make this function external and use calldata for all parameters, but Solidity does not support calldata structs (https://github.com/ethereum/solidity/issues/5479).",
        "params": {
          "orders": "The limit orders to be filled in ascending order of price.",
          "protocolFee": "The protocol fee in ETH to pay to 0x.",
          "signatures": "The signatures for the orders.",
          "takerAssetFillAmount": "The amount of the taker asset to sell (excluding taker fees)."
        },
        "return": "Array containing the input amount sold and output amount bought."
      },
      "withdrawAllFromPool(uint8,address)": {
        "details": "Withdraws all funds from the specified pool.",
        "params": {
          "erc20Contract": "The ERC20 contract of the token to be withdrawn.",
          "pool": "The index of the pool."
        },
        "return": "Boolean indicating success."
      },
      "withdrawFromPool(uint8,address,uint256)": {
        "details": "Withdraws funds from the specified pool.",
        "params": {
          "amount": "The amount of tokens to be withdrawn.",
          "erc20Contract": "The ERC20 contract of the token to be withdrawn.",
          "pool": "The index of the pool."
        },
        "return": "Boolean indicating success."
      }
    },
    "title": "RariFundController"
  },
  "userdoc": {
    "methods": {}
  }
}