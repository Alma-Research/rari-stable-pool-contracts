{
  "contractName": "Getters",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "number",
              "type": "uint256"
            }
          ],
          "internalType": "struct Account.Info",
          "name": "account",
          "type": "tuple"
        }
      ],
      "name": "getAccountBalances",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "sign",
              "type": "bool"
            },
            {
              "internalType": "uint128",
              "name": "value",
              "type": "uint128"
            }
          ],
          "internalType": "struct Types.Par[]",
          "name": "",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "sign",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "internalType": "struct Types.Wei[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"number\",\"type\":\"uint256\"}],\"internalType\":\"struct Account.Info\",\"name\":\"account\",\"type\":\"tuple\"}],\"name\":\"getAccountBalances\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"sign\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"value\",\"type\":\"uint128\"}],\"internalType\":\"struct Types.Par[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"sign\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct Types.Wei[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"dYdX  * Public read-only functions that allow transparency into the state of Solo\",\"methods\":{\"getAccountBalances((address,uint256))\":{\"params\":{\"account\":\"The account to query\"},\"return\":\"The following values:                  - The ERC20 token address for each market                  - The account's principal value for each market                  - The account's (supplied or borrowed) number of tokens for each market\"}},\"title\":\"Getters\"},\"userdoc\":{\"methods\":{\"getAccountBalances((address,uint256))\":{\"notice\":\"Get an account's summary for each market. \"}}}},\"settings\":{\"compilationTarget\":{\"/home/david/rari-contracts-v2.0.0/contracts/external/dydx/Getters.sol\":\"Getters\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/david/rari-contracts-v2.0.0/contracts/external/dydx/Getters.sol\":{\"keccak256\":\"0x9ad597244dec4278c43ee39d89fe23d00e09133f37455941594c9a5cabed6382\",\"urls\":[\"bzz-raw://27b9638a4c24a9d26ec778cb96c8f0f1cc9e087e76cc9f6dc6f8a2a318c07a52\",\"dweb:/ipfs/QmaM8Kc1RR1TBPHdVXeewzCWUM4BDYLiSVA3NYGrYSAq4Q\"]},\"/home/david/rari-contracts-v2.0.0/contracts/external/dydx/lib/Account.sol\":{\"keccak256\":\"0x835464a7d38af8c8825e933589db0c4287b838b268126069309bcfb308f87c12\",\"urls\":[\"bzz-raw://bf42139cc2a5fd9b453942a919374c3286dda133faf4716e18f172eef6bccc5c\",\"dweb:/ipfs/QmVdKxBkkANe9dYPBUUDkNXZsYETyXnsJcRG2kyDChgqsJ\"]},\"/home/david/rari-contracts-v2.0.0/contracts/external/dydx/lib/Types.sol\":{\"keccak256\":\"0x69e8b86b4fce20739c4fd65c8285388c099e8c9580e25652c72d8bade4df7a31\",\"urls\":[\"bzz-raw://cfdf9c9956f8b22e3084d780d331d6f8ae75d57cf058a55a2391a206e8d2e2e6\",\"dweb:/ipfs/QmVe4D9DXdAepZaCP3bx6WECQZU5NwFiko6VAPzi59MD8X\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "/*\r\n\r\n    Copyright 2019 dYdX Trading Inc.\r\n\r\n    Licensed under the Apache License, Version 2.0 (the \"License\");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an \"AS IS\" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n\r\n*/\r\n\r\npragma solidity ^0.5.7;\r\npragma experimental ABIEncoderV2;\r\n\r\nimport { Account } from \"./lib/Account.sol\";\r\nimport { Types } from \"./lib/Types.sol\";\r\n\r\n\r\n/**\r\n * @title Getters\r\n * @author dYdX\r\n *\r\n * Public read-only functions that allow transparency into the state of Solo\r\n */\r\ncontract Getters {\r\n    using Types for Types.Par;\r\n\r\n    /**\r\n     * Get an account's summary for each market.\r\n     *\r\n     * @param  account  The account to query\r\n     * @return          The following values:\r\n     *                   - The ERC20 token address for each market\r\n     *                   - The account's principal value for each market\r\n     *                   - The account's (supplied or borrowed) number of tokens for each market\r\n     */\r\n    function getAccountBalances(\r\n        Account.Info memory account\r\n    )\r\n        public\r\n        view\r\n        returns (\r\n            address[] memory,\r\n            Types.Par[] memory,\r\n            Types.Wei[] memory\r\n        );\r\n}\r\n",
  "sourcePath": "/home/david/rari-contracts-v2.0.0/contracts/external/dydx/Getters.sol",
  "ast": {
    "absolutePath": "/home/david/rari-contracts-v2.0.0/contracts/external/dydx/Getters.sol",
    "exportedSymbols": {
      "Getters": [
        5162
      ]
    },
    "id": 5163,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5139,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "621:23:9"
      },
      {
        "id": 5140,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "646:33:9"
      },
      {
        "absolutePath": "/home/david/rari-contracts-v2.0.0/contracts/external/dydx/lib/Account.sol",
        "file": "./lib/Account.sol",
        "id": 5142,
        "nodeType": "ImportDirective",
        "scope": 5163,
        "sourceUnit": 5201,
        "src": "683:44:9",
        "symbolAliases": [
          {
            "foreign": 5141,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/david/rari-contracts-v2.0.0/contracts/external/dydx/lib/Types.sol",
        "file": "./lib/Types.sol",
        "id": 5144,
        "nodeType": "ImportDirective",
        "scope": 5163,
        "sourceUnit": 5263,
        "src": "729:40:9",
        "symbolAliases": [
          {
            "foreign": 5143,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Getters\n@author dYdX\n\n * Public read-only functions that allow transparency into the state of Solo",
        "fullyImplemented": false,
        "id": 5162,
        "linearizedBaseContracts": [
          5162
        ],
        "name": "Getters",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 5147,
            "libraryName": {
              "contractScope": null,
              "id": 5145,
              "name": "Types",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5262,
              "src": "933:5:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Types_$5262",
                "typeString": "library Types"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "927:26:9",
            "typeName": {
              "contractScope": null,
              "id": 5146,
              "name": "Types.Par",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5256,
              "src": "943:9:9",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Par_$5256_storage_ptr",
                "typeString": "struct Types.Par"
              }
            }
          },
          {
            "body": null,
            "documentation": "Get an account's summary for each market.\n\n     * @param  account  The account to query\n@return          The following values:\n                  - The ERC20 token address for each market\n                  - The account's principal value for each market\n                  - The account's (supplied or borrowed) number of tokens for each market",
            "id": 5161,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAccountBalances",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5149,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 5161,
                  "src": "1408:27:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Info_$5199_memory_ptr",
                    "typeString": "struct Account.Info"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 5148,
                    "name": "Account.Info",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5199,
                    "src": "1408:12:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Info_$5199_storage_ptr",
                      "typeString": "struct Account.Info"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1397:45:9"
            },
            "returnParameters": {
              "id": 5160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5153,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5161,
                  "src": "1505:16:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5151,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1505:7:9",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 5152,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1505:9:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5156,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5161,
                  "src": "1536:18:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Par_$5256_memory_$dyn_memory_ptr",
                    "typeString": "struct Types.Par[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 5154,
                      "name": "Types.Par",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 5256,
                      "src": "1536:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Par_$5256_storage_ptr",
                        "typeString": "struct Types.Par"
                      }
                    },
                    "id": 5155,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1536:11:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Par_$5256_storage_$dyn_storage_ptr",
                      "typeString": "struct Types.Par[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5159,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5161,
                  "src": "1569:18:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Wei_$5261_memory_$dyn_memory_ptr",
                    "typeString": "struct Types.Wei[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 5157,
                      "name": "Types.Wei",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 5261,
                      "src": "1569:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Wei_$5261_storage_ptr",
                        "typeString": "struct Types.Wei"
                      }
                    },
                    "id": 5158,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1569:11:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Wei_$5261_storage_$dyn_storage_ptr",
                      "typeString": "struct Types.Wei[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1490:108:9"
            },
            "scope": 5162,
            "src": "1370:229:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 5163,
        "src": "903:699:9"
      }
    ],
    "src": "621:983:9"
  },
  "legacyAST": {
    "absolutePath": "/home/david/rari-contracts-v2.0.0/contracts/external/dydx/Getters.sol",
    "exportedSymbols": {
      "Getters": [
        5162
      ]
    },
    "id": 5163,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5139,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "621:23:9"
      },
      {
        "id": 5140,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "646:33:9"
      },
      {
        "absolutePath": "/home/david/rari-contracts-v2.0.0/contracts/external/dydx/lib/Account.sol",
        "file": "./lib/Account.sol",
        "id": 5142,
        "nodeType": "ImportDirective",
        "scope": 5163,
        "sourceUnit": 5201,
        "src": "683:44:9",
        "symbolAliases": [
          {
            "foreign": 5141,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/david/rari-contracts-v2.0.0/contracts/external/dydx/lib/Types.sol",
        "file": "./lib/Types.sol",
        "id": 5144,
        "nodeType": "ImportDirective",
        "scope": 5163,
        "sourceUnit": 5263,
        "src": "729:40:9",
        "symbolAliases": [
          {
            "foreign": 5143,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Getters\n@author dYdX\n\n * Public read-only functions that allow transparency into the state of Solo",
        "fullyImplemented": false,
        "id": 5162,
        "linearizedBaseContracts": [
          5162
        ],
        "name": "Getters",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 5147,
            "libraryName": {
              "contractScope": null,
              "id": 5145,
              "name": "Types",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5262,
              "src": "933:5:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Types_$5262",
                "typeString": "library Types"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "927:26:9",
            "typeName": {
              "contractScope": null,
              "id": 5146,
              "name": "Types.Par",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5256,
              "src": "943:9:9",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Par_$5256_storage_ptr",
                "typeString": "struct Types.Par"
              }
            }
          },
          {
            "body": null,
            "documentation": "Get an account's summary for each market.\n\n     * @param  account  The account to query\n@return          The following values:\n                  - The ERC20 token address for each market\n                  - The account's principal value for each market\n                  - The account's (supplied or borrowed) number of tokens for each market",
            "id": 5161,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAccountBalances",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5149,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 5161,
                  "src": "1408:27:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Info_$5199_memory_ptr",
                    "typeString": "struct Account.Info"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 5148,
                    "name": "Account.Info",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5199,
                    "src": "1408:12:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Info_$5199_storage_ptr",
                      "typeString": "struct Account.Info"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1397:45:9"
            },
            "returnParameters": {
              "id": 5160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5153,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5161,
                  "src": "1505:16:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5151,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1505:7:9",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 5152,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1505:9:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5156,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5161,
                  "src": "1536:18:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Par_$5256_memory_$dyn_memory_ptr",
                    "typeString": "struct Types.Par[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 5154,
                      "name": "Types.Par",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 5256,
                      "src": "1536:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Par_$5256_storage_ptr",
                        "typeString": "struct Types.Par"
                      }
                    },
                    "id": 5155,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1536:11:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Par_$5256_storage_$dyn_storage_ptr",
                      "typeString": "struct Types.Par[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5159,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5161,
                  "src": "1569:18:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Wei_$5261_memory_$dyn_memory_ptr",
                    "typeString": "struct Types.Wei[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 5157,
                      "name": "Types.Wei",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 5261,
                      "src": "1569:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Wei_$5261_storage_ptr",
                        "typeString": "struct Types.Wei"
                      }
                    },
                    "id": 5158,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1569:11:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Wei_$5261_storage_$dyn_storage_ptr",
                      "typeString": "struct Types.Wei[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1490:108:9"
            },
            "scope": 5162,
            "src": "1370:229:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 5163,
        "src": "903:699:9"
      }
    ],
    "src": "621:983:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-08-11T17:25:25.908Z",
  "devdoc": {
    "author": "dYdX  * Public read-only functions that allow transparency into the state of Solo",
    "methods": {
      "getAccountBalances((address,uint256))": {
        "params": {
          "account": "The account to query"
        },
        "return": "The following values:                  - The ERC20 token address for each market                  - The account's principal value for each market                  - The account's (supplied or borrowed) number of tokens for each market"
      }
    },
    "title": "Getters"
  },
  "userdoc": {
    "methods": {
      "getAccountBalances((address,uint256))": {
        "notice": "Get an account's summary for each market. "
      }
    }
  }
}