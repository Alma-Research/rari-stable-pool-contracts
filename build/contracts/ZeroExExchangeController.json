{
  "contractName": "ZeroExExchangeController",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "VERSION",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "assetData",
          "type": "bytes"
        }
      ],
      "name": "decodeTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "erc20Contract",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20Contract\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"assetData\",\"type\":\"bytes\"}],\"name\":\"decodeTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"David Lucid <david@rari.capital> (https://github.com/davidlucid)\",\"details\":\"This library handles exchanges via 0x.\",\"methods\":{\"allowance(address)\":{\"details\":\"Gets allowance of the specified token to 0x.\",\"params\":{\"erc20Contract\":\"The ERC20 contract address of the token.\"}},\"approve(address,uint256)\":{\"details\":\"Approves tokens to 0x without spending gas on every deposit.\",\"params\":{\"amount\":\"Amount of the specified token to approve to dYdX.\",\"erc20Contract\":\"The ERC20 contract address of the token.\"},\"return\":\"Boolean indicating success.\"},\"decodeTokenAddress(bytes)\":{\"details\":\"Decodes ERC20 or ERC20Bridge asset data.\",\"params\":{\"assetData\":\"The ERC20 or ERC20Bridge asset data.\"},\"return\":\"The asset token address.\"},\"marketBuyOrdersFillOrKill(LibOrder.Order[],bytes[],uint256,uint256)\":{\"details\":\"Market buys from 0x exchange orders up to a certain amount of output.\",\"params\":{\"makerAssetFillAmount\":\"The amount of the maker asset to buy.\",\"orders\":\"The limit orders to be filled in ascending order of price.\",\"protocolFee\":\"The protocol fee in ETH to pay to 0x.\",\"signatures\":\"The signatures for the orders.\"},\"return\":\"Array containing the taker asset filled amount (sold) and maker asset filled amount (bought).\"},\"marketSellOrdersFillOrKill(LibOrder.Order[],bytes[],uint256,uint256)\":{\"details\":\"Market sells to 0x exchange orders up to a certain amount of input.\",\"params\":{\"orders\":\"The limit orders to be filled in ascending order of price.\",\"protocolFee\":\"The protocol fee in ETH to pay to 0x.\",\"signatures\":\"The signatures for the orders.\",\"takerAssetFillAmount\":\"The amount of the taker asset to sell (excluding taker fees).\"},\"return\":\"Array containing the taker asset filled amount (sold) and maker asset filled amount (bought).\"}},\"title\":\"ZeroExExchangeController\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/david/rari-contracts-v2.0.0/contracts/lib/exchanges/ZeroExExchangeController.sol\":\"ZeroExExchangeController\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/david/rari-contracts-v2.0.0/contracts/lib/exchanges/ZeroExExchangeController.sol\":{\"keccak256\":\"0xec9c5dd7436c11fe24f1f6bef4e16ad01a6bf4eb38d88902ef49a4b7ce63b38f\",\"urls\":[\"bzz-raw://4293b2fe97e381fe38bc46ca59f4e55c7d921c464b40062e8fffbec2172fe29d\",\"dweb:/ipfs/QmaSd9e1TDJ75CTPmLFkPt7GtYSg7PbTpVSYLXyRo1qdZJ\"]},\"@0x/contracts-exchange-libs/contracts/src/LibFillResults.sol\":{\"keccak256\":\"0xedb2f1e66e7ece2302b4dd19d0ef29a0ffeefddae7e9a81f7104155ac3cbb75b\",\"urls\":[\"bzz-raw://9a490801ffde73bb98aa3de52ef2d615894d188820ebe4c8cd340f5cd33462ad\",\"dweb:/ipfs/QmUTSaJ6GTvNoYCmpd9dv2mz25vakoLS9tQpiF1ohAUMFV\"]},\"@0x/contracts-exchange-libs/contracts/src/LibMath.sol\":{\"keccak256\":\"0xc331418f75cd832accf9dc439be811e10d99f1d2de3a9c0321fd3f127cdf1e54\",\"urls\":[\"bzz-raw://8a090ac0a55200b6f5624c41fff2ad21e5c673b7fcd0faf1bc88017087bbb1b2\",\"dweb:/ipfs/QmWhxuazHstpSCYDQJscHnAh6ngW7SHKT79t6yQHaJHgmi\"]},\"@0x/contracts-exchange-libs/contracts/src/LibMathRichErrors.sol\":{\"keccak256\":\"0xd2d047534facd6051467dd7a22d7ee9fd4e54e63bb5a5fae2511eac7332fad3d\",\"urls\":[\"bzz-raw://5e0aeedd55c996fd72004a14f5c528ed60b46631ca9599bbb7925c8342ca3be4\",\"dweb:/ipfs/QmNi1ozt4sYmn4pCobjU7FQ4KGUvK77pCyWUtbD18uQgVm\"]},\"@0x/contracts-exchange-libs/contracts/src/LibOrder.sol\":{\"keccak256\":\"0x1b7b1e1a2dff4249c6f6c500000342a805f372131797b6d7314435204a651ad4\",\"urls\":[\"bzz-raw://19c11b77022ccfa530af75f236ea00ecb92aa5476f96abbde268163660b3906b\",\"dweb:/ipfs/Qmf1MtwPLpocsBArn8Npyzu4AtMqSagYTuee8JdbMXXwHM\"]},\"@0x/contracts-exchange-libs/contracts/src/LibZeroExTransaction.sol\":{\"keccak256\":\"0x15e9dddfeb5b17b6d44a6be19b3f5f2cf2a2af24174cd623fcd731fb5204635a\",\"urls\":[\"bzz-raw://9014066b0fcf65ba9ecec88fc41e3413ef27c039159abd1203f0a48bb61e498d\",\"dweb:/ipfs/QmRAF6q5XrQV7pPZM1aaahRHAMba9hh6iUeRgW2fzFgn87\"]},\"@0x/contracts-exchange/contracts/src/interfaces/IAssetProxyDispatcher.sol\":{\"keccak256\":\"0x5aa3bcc134f9ff77da4f5ba42a17a62391f5adafd605658dcdcdd7c352d52e25\",\"urls\":[\"bzz-raw://92d355e026a2635f561621e7c835eac53ea15c40375bacc78f57c9c67b9793c4\",\"dweb:/ipfs/QmeiYbPmb3yBQ66V1HRKfDUoPGof6AxWsPQfJLfau4j7d4\"]},\"@0x/contracts-exchange/contracts/src/interfaces/IExchange.sol\":{\"keccak256\":\"0x208c082d30b28d322d5828ba2a6b880b4366c3f9d45853456424bbc036ede0cb\",\"urls\":[\"bzz-raw://d0e8dd59721cdacc192c5d44123cb84bcc78cdb067873e616f6a4f2533868418\",\"dweb:/ipfs/Qmb6QJTLz8QTyFVYPFjRRL7TwovSdALe3kk43fUoYZs1cg\"]},\"@0x/contracts-exchange/contracts/src/interfaces/IExchangeCore.sol\":{\"keccak256\":\"0xbccc362e85d592e0cc73108c3f7d8f66d58e449e42dbcc099442984446264b36\",\"urls\":[\"bzz-raw://383ae2d931d565fce7f046904601e1c54446c859a046af90c3d2591efe45a3f9\",\"dweb:/ipfs/QmTrfsEGAr38zgNYTHLjCuHfa7nw2hA64qvP8tLSMDgAjT\"]},\"@0x/contracts-exchange/contracts/src/interfaces/IMatchOrders.sol\":{\"keccak256\":\"0x57e052667a28152057a1ab25b958b55d9c79afe95ea5ab645692bad18e5504b3\",\"urls\":[\"bzz-raw://de35bf6f6ab53af3dcb6b09999840adbc161c1f59623940670f552b59a28b147\",\"dweb:/ipfs/QmebunP1nLEWkMPqbFY8iQewkaUUZH5xVAs3erGerqf264\"]},\"@0x/contracts-exchange/contracts/src/interfaces/IProtocolFees.sol\":{\"keccak256\":\"0x46928eb127258c64e030b298c935371eacc8beb8abc7ff09869d6f6ae99fa5a8\",\"urls\":[\"bzz-raw://b49ac75bdaec7a4767c15ad09640282ce1656b8e4112882a65b669d89474b5fe\",\"dweb:/ipfs/QmeRbdDvipy5x5MmSMiVXDT1pH3FeiT5v5ek7zNZom3378\"]},\"@0x/contracts-exchange/contracts/src/interfaces/ISignatureValidator.sol\":{\"keccak256\":\"0xfaff6f59dc8d9ab1003f8408e104d10d261208187e349153c075da0b71f400cd\",\"urls\":[\"bzz-raw://10290e91a633564fc0b1e732aec3321a3bf60122b79069f90e8ce037dd8799b5\",\"dweb:/ipfs/QmaTZxNZkimMxsjTCS47sJgnfaZkG4gcTgawLAadxjkjFv\"]},\"@0x/contracts-exchange/contracts/src/interfaces/ITransactions.sol\":{\"keccak256\":\"0x323b06d8e93e8fd96e563070bdccac7c760437326a845d75a0b1cc9224cbcda8\",\"urls\":[\"bzz-raw://3b2a2c7585783a8555d43817d7813e6465718d31fd6084e4f4c2c5d2560b8909\",\"dweb:/ipfs/QmQoiknyN4HvVvGQKbBqniD1Y2nc4R7KmXFNip7tGs5GvT\"]},\"@0x/contracts-exchange/contracts/src/interfaces/ITransferSimulator.sol\":{\"keccak256\":\"0x15a3952999620388de42961b069f2ebde0c5900d31a10a4b8d7dc6c315d1ef7e\",\"urls\":[\"bzz-raw://6324f0cfee0ea4a0cf68858fd634b7e9c085faa75d298fc582f3c76ce4400400\",\"dweb:/ipfs/QmVeyHXXGuUHKAu9c8MU8SwEcD3omsdogK86xcE7435gE6\"]},\"@0x/contracts-exchange/contracts/src/interfaces/IWrapperFunctions.sol\":{\"keccak256\":\"0xe463eb4df5a24faff9aa0eb5b957fb6249f86dd52d42c53fd21212926efc6fb0\",\"urls\":[\"bzz-raw://96d0862b48d996587122077eecb6b136a5dfa0d3de1e531dd665e9d5a4686732\",\"dweb:/ipfs/QmSBMvMxEhHJZDj5aWeSjSoV5QWCTyCNnzBTX9yuuU6nLL\"]},\"@0x/contracts-utils/contracts/src/LibBytes.sol\":{\"keccak256\":\"0xab487522b79e5c07751c44d3c6a45ea42f526f065168a1d0f214a1cc6d24ca84\",\"urls\":[\"bzz-raw://623639d00c7775e02754882d36d176001741a199dcb549caf2d57507d33e29c8\",\"dweb:/ipfs/QmUMt7sKj1We3H677VNN253diDxo1naL3v9MJoKgwDT4o7\"]},\"@0x/contracts-utils/contracts/src/LibBytesRichErrors.sol\":{\"keccak256\":\"0xec98fecbab306abab18ccfcb83cdd1ed0b1c70e5ced2259835a2b61eae2d69d1\",\"urls\":[\"bzz-raw://50d8760f638321b242e60e5d2a819b7504486aff1712a8895ee213122535b7be\",\"dweb:/ipfs/QmThnQz9VG54woPzs14BK6jGs4T7jo38EtEMPzVXnWi6YA\"]},\"@0x/contracts-utils/contracts/src/LibEIP712.sol\":{\"keccak256\":\"0xe19c3cbc71fbea0fdb45c1763306550015d940bea9dbec5f3fd2edfe2165d673\",\"urls\":[\"bzz-raw://267d263f0453352a1ac8d8085a13c4976fb8c964eff8d3aab0a84173d1438efb\",\"dweb:/ipfs/QmbaRw85MYYP3KTmQ68gYdEnFyMqD7frwjxxwsj4j4JCr1\"]},\"@0x/contracts-utils/contracts/src/LibRichErrors.sol\":{\"keccak256\":\"0xe3ce6ded2fea3cc80998ca4d364bda530e273af0ba1c78d22a6cdadb6f64186e\",\"urls\":[\"bzz-raw://8239629dbcee9797a8f8157f03c2b78827b446787b4d53b3033a3e1ab538ad0b\",\"dweb:/ipfs/QmbttkX94CxMkS6t1K4He5bNwGKCRUhKqTt9pNsAL5ynst\"]},\"@0x/contracts-utils/contracts/src/LibSafeMath.sol\":{\"keccak256\":\"0xd0da9ac1905381832f6612774cb7eced3b4b60459d6bafa59f5424955b44c935\",\"urls\":[\"bzz-raw://ede4bbe2dac43c6cc4e3b7a22285e00d55b31fb8cc00b375c6ac4714298b7e6d\",\"dweb:/ipfs/QmWbN5qbJSNYrMMZMugaH5itTVSexe9yPsCPuArQVCLUgi\"]},\"@0x/contracts-utils/contracts/src/LibSafeMathRichErrors.sol\":{\"keccak256\":\"0xcf6adae04bd7af8e41fcd40ad148cc3d1cd5596bd42b01961b735c9b416a6572\",\"urls\":[\"bzz-raw://103791140e631e9d670bbc99e5f8e546f56061c5d49de97754006ce2c252d61e\",\"dweb:/ipfs/QmeRMyYFSk7n1sLzRSGqxcoX1sKQSdAQya6bRy6nseu6xX\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0x6f2c9955d65c522b80f4b8792f076512d2df947d2112cbc4d98a4781ed42ede2\",\"urls\":[\"bzz-raw://7d8ec81683520c06baeef3f7e06cd82bd6fd5fa611f26857f475f6c829540aff\",\"dweb:/ipfs/QmTDkFzKnrpiV1UKnSoiZAHPuguWzokrr4pFbSPvyaSo56\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]}},\"version\":1}",
  "bytecode": "0x611721610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061006c5760003560e01c8063095ea7b3146100715780633e5beab9146100a75780635917cc31146100c75780637a8c15f1146100e7578063bf05554014610114578063ffa1ad7414610134575b600080fd5b81801561007d57600080fd5b5061009161008c366004610d1a565b610149565b60405161009e91906114c7565b60405180910390f35b6100ba6100b5366004610cfc565b610276565b60405161009e919061159e565b6100da6100d5366004610e02565b610313565b60405161009e9190611443565b8180156100f357600080fd5b50610107610102366004610d54565b610409565b60405161009e91906114b9565b81801561012057600080fd5b5061010761012f366004610d54565b610535565b61013c6105e4565b60405161009e91906114fd565b604051636eb1769f60e11b8152600090839082906001600160a01b0383169063dd62ed3e906101929030907395e6f48254609a6ee006f7d493c8e5fb97094cef90600401611451565b60206040518083038186803b1580156101aa57600080fd5b505afa1580156101be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506101e29190810190610e62565b9050838114156101f757600192505050610270565b6000841180156102075750600081115b1561023b5761023b6001600160a01b0383167395e6f48254609a6ee006f7d493c8e5fb97094cef600063ffffffff61060516565b6102696001600160a01b0383167395e6f48254609a6ee006f7d493c8e5fb97094cef8663ffffffff61060516565b6001925050505b92915050565b604051636eb1769f60e11b81526000906001600160a01b0383169063dd62ed3e906102bb9030907395e6f48254609a6ee006f7d493c8e5fb97094cef90600401611451565b60206040518083038186803b1580156102d357600080fd5b505afa1580156102e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061030b9190810190610e62565b90505b919050565b600080610360600085858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929392505063ffffffff610707169050565b9050630f47261b60e41b6001600160e01b031982161480610391575063dc1600f360e01b6001600160e01b03198216145b156103e8576103e0601085858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929392505063ffffffff610740169050565b915050610270565b60405162461bcd60e51b81526004016104009061155e565b60405180910390fd5b6104116108fa565b60008551116104325760405162461bcd60e51b81526004016104009061150e565b83518551146104535760405162461bcd60e51b81526004016104009061152e565b600083116104735760405162461bcd60e51b81526004016104009061153e565b61047b610918565b60405163a6c3bf3360e01b81527361935cbdd02287b511119ddb11aeb42f1593b7ef9063a6c3bf339085906104b8908a9089908b90600401611487565b60a0604051808303818588803b1580156104d157600080fd5b505af11580156104e5573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525061050a9190810190610e44565b905060405180604001604052808260200151815260200182600001518152509150505b949350505050565b61053d6108fa565b600085511161055e5760405162461bcd60e51b81526004016104009061150e565b835185511461057f5760405162461bcd60e51b81526004016104009061152e565b6000831161059f5760405162461bcd60e51b81526004016104009061157e565b6105a7610918565b604051638bc8efb360e01b81527361935cbdd02287b511119ddb11aeb42f1593b7ef90638bc8efb39085906104b8908a9089908b90600401611487565b604051806040016040528060058152602001640322e302e360dc1b81525081565b80158061068d5750604051636eb1769f60e11b81526001600160a01b0384169063dd62ed3e9061063b9030908690600401611451565b60206040518083038186803b15801561065357600080fd5b505afa158015610667573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061068b9190810190610e62565b155b6106a95760405162461bcd60e51b81526004016104009061156e565b60405161070290849063095ea7b360e01b906106cb908690869060240161146c565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610773565b505050565b6000816004018351101561072d5761072d610728600385518560040161085e565b6108b9565b5001602001516001600160e01b03191690565b6000816014018351101561076157610761610728600485518560140161085e565b5001601401516001600160a01b031690565b610785826001600160a01b03166108c1565b6107a15760405162461bcd60e51b81526004016104009061158e565b60006060836001600160a01b0316836040516107bd9190611437565b6000604051808303816000865af19150503d80600081146107fa576040519150601f19603f3d011682016040523d82523d6000602084013e6107ff565b606091505b5091509150816108215760405162461bcd60e51b81526004016104009061151e565b805115610858578080602001905161083c9190810190610de4565b6108585760405162461bcd60e51b81526004016104009061154e565b50505050565b6060632800659560e01b84848460405160240161087d939291906114d5565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915290505b9392505050565b805160208201fd5b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061052d575050151592915050565b60405180604001604052806002906020820280388339509192915050565b6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b8035610270816116b8565b600082601f83011261096357600080fd5b8135610976610971826115d3565b6115ac565b81815260209384019390925082018360005b838110156109b4578135860161099e8882610a6f565b8452506020928301929190910190600101610988565b5050505092915050565b600082601f8301126109cf57600080fd5b81356109dd610971826115d3565b81815260209384019390925082018360005b838110156109b45781358601610a058882610b41565b84525060209283019291909101906001016109ef565b8051610270816116cc565b60008083601f840112610a3857600080fd5b50813567ffffffffffffffff811115610a5057600080fd5b602083019150836001820283011115610a6857600080fd5b9250929050565b600082601f830112610a8057600080fd5b8135610a8e610971826115f4565b91508082526020830160208301858383011115610aaa57600080fd5b610ab5838284611669565b50505092915050565b600060a08284031215610ad057600080fd5b610ada60a06115ac565b90506000610ae88484610cf1565b8252506020610af984848301610cf1565b6020830152506040610b0d84828501610cf1565b6040830152506060610b2184828501610cf1565b6060830152506080610b3584828501610cf1565b60808301525092915050565b60006101c08284031215610b5457600080fd5b610b5f6101c06115ac565b90506000610b6d8484610947565b8252506020610b7e84848301610947565b6020830152506040610b9284828501610947565b6040830152506060610ba684828501610947565b6060830152506080610bba84828501610ce6565b60808301525060a0610bce84828501610ce6565b60a08301525060c0610be284828501610ce6565b60c08301525060e0610bf684828501610ce6565b60e083015250610100610c0b84828501610ce6565b61010083015250610120610c2184828501610ce6565b6101208301525061014082013567ffffffffffffffff811115610c4357600080fd5b610c4f84828501610a6f565b6101408301525061016082013567ffffffffffffffff811115610c7157600080fd5b610c7d84828501610a6f565b6101608301525061018082013567ffffffffffffffff811115610c9f57600080fd5b610cab84828501610a6f565b610180830152506101a082013567ffffffffffffffff811115610ccd57600080fd5b610cd984828501610a6f565b6101a08301525092915050565b8035610270816116d5565b8051610270816116d5565b600060208284031215610d0e57600080fd5b600061052d8484610947565b60008060408385031215610d2d57600080fd5b6000610d398585610947565b9250506020610d4a85828601610ce6565b9150509250929050565b60008060008060808587031215610d6a57600080fd5b843567ffffffffffffffff811115610d8157600080fd5b610d8d878288016109be565b945050602085013567ffffffffffffffff811115610daa57600080fd5b610db687828801610952565b9350506040610dc787828801610ce6565b9250506060610dd887828801610ce6565b91505092959194509250565b600060208284031215610df657600080fd5b600061052d8484610a1b565b60008060208385031215610e1557600080fd5b823567ffffffffffffffff811115610e2c57600080fd5b610e3885828601610a26565b92509250509250929050565b600060a08284031215610e5657600080fd5b600061052d8484610abe565b600060208284031215610e7457600080fd5b600061052d8484610cf1565b60006108b28383611016565b60006108b283836112f3565b6000610ea4838361142e565b505060200190565b610eb581611638565b82525050565b6000610ec682611625565b610ed0818561162f565b935083602082028501610ee28561161c565b8060005b85811015610f1c5784840389528151610eff8582610e80565b9450610f0a8361161c565b60209a909a0199925050600101610ee6565b5091979650505050505050565b6000610f3482611625565b610f3e818561162f565b935083602082028501610f508561161c565b8060005b85811015610f1c5784840389528151610f6d8582610e8c565b9450610f788361161c565b60209a909a0199925050600101610f54565b610f9381611629565b610f9d818461030e565b9250610fa882611622565b8060005b83811015610fd6578151610fc08782610e98565b9650610fcb8361161c565b925050600101610fac565b505050505050565b610eb581611643565b6000610ff282611625565b610ffc818561030e565b935061100c818560208601611675565b9290920192915050565b600061102182611625565b61102b818561162f565b935061103b818560208601611675565b611044816116a1565b9093019392505050565b610eb58161165e565b600061106460368361162f565b7f4174206c65617374206f6e65206f7264657220616e64206d61746368696e672081527539b4b3b730ba3ab9329034b9903932b8bab4b932b21760511b602082015260400192915050565b60006110bc60208361162f565b7f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815260200192915050565b60006110f560318361162f565b7f4d69736d61746368206265747765656e206e756d626572206f66206f72646572815270399030b7321039b4b3b730ba3ab932b99760791b602082015260400192915050565b6000611148602f8361162f565b7f54616b65722061737365742066696c6c20616d6f756e74206d7573742062652081526e33b932b0ba32b9103a3430b710181760891b602082015260400192915050565b6000611199602a8361162f565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e8152691bdd081cdd58d8d9595960b21b602082015260400192915050565b60006111e560178361162f565b7f496e76616c69642061737365742070726f78792049442e000000000000000000815260200192915050565b600061121e60368361162f565b7f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f81527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b602082015260400192915050565b6000611276602f8361162f565b7f4d616b65722061737365742066696c6c20616d6f756e74206d7573742062652081526e33b932b0ba32b9103a3430b710181760891b602082015260400192915050565b60006112c7601f8361162f565b7f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400815260200192915050565b80516000906101c08401906113088582610eac565b50602083015161131b6020860182610eac565b50604083015161132e6040860182610eac565b5060608301516113416060860182610eac565b506080830151611354608086018261142e565b5060a083015161136760a086018261142e565b5060c083015161137a60c086018261142e565b5060e083015161138d60e086018261142e565b506101008301516113a261010086018261142e565b506101208301516113b761012086018261142e565b506101408301518482036101408601526113d18282611016565b9150506101608301518482036101608601526113ed8282611016565b9150506101808301518482036101808601526114098282611016565b9150506101a08301518482036101a08601526114258282611016565b95945050505050565b610eb581611622565b60006108b28284610fe7565b602081016102708284610eac565b6040810161145f8285610eac565b6108b26020830184610eac565b6040810161147a8285610eac565b6108b2602083018461142e565b606080825281016114988186610f29565b90506114a7602083018561142e565b81810360408301526114258184610ebb565b604081016102708284610f8a565b602081016102708284610fde565b606081016114e3828661104e565b6114f0602083018561142e565b61052d604083018461142e565b602080825281016108b28184611016565b6020808252810161030b81611057565b6020808252810161030b816110af565b6020808252810161030b816110e8565b6020808252810161030b8161113b565b6020808252810161030b8161118c565b6020808252810161030b816111d8565b6020808252810161030b81611211565b6020808252810161030b81611269565b6020808252810161030b816112ba565b60208101610270828461142e565b60405181810167ffffffffffffffff811182821017156115cb57600080fd5b604052919050565b600067ffffffffffffffff8211156115ea57600080fd5b5060209081020190565b600067ffffffffffffffff82111561160b57600080fd5b506020601f91909101601f19160190565b60200190565b90565b5190565b50600290565b90815260200190565b600061030b82611652565b151590565b8061030e816116ab565b6001600160a01b031690565b600061030b82611648565b82818337506000910152565b60005b83811015611690578181015183820152602001611678565b838111156108585750506000910152565b601f01601f191690565b600881106116b557fe5b50565b6116c181611638565b81146116b557600080fd5b6116c181611643565b6116c18161162256fea365627a7a72315820320625b14b3f19a6be82be3388b25f627738ddf9d059c6cc37d27524ddb93d0c6c6578706572696d656e74616cf564736f6c63430005110040",
  "deployedBytecode": "0x730000000000000000000000000000000000000000301460806040526004361061006c5760003560e01c8063095ea7b3146100715780633e5beab9146100a75780635917cc31146100c75780637a8c15f1146100e7578063bf05554014610114578063ffa1ad7414610134575b600080fd5b81801561007d57600080fd5b5061009161008c366004610d1a565b610149565b60405161009e91906114c7565b60405180910390f35b6100ba6100b5366004610cfc565b610276565b60405161009e919061159e565b6100da6100d5366004610e02565b610313565b60405161009e9190611443565b8180156100f357600080fd5b50610107610102366004610d54565b610409565b60405161009e91906114b9565b81801561012057600080fd5b5061010761012f366004610d54565b610535565b61013c6105e4565b60405161009e91906114fd565b604051636eb1769f60e11b8152600090839082906001600160a01b0383169063dd62ed3e906101929030907395e6f48254609a6ee006f7d493c8e5fb97094cef90600401611451565b60206040518083038186803b1580156101aa57600080fd5b505afa1580156101be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506101e29190810190610e62565b9050838114156101f757600192505050610270565b6000841180156102075750600081115b1561023b5761023b6001600160a01b0383167395e6f48254609a6ee006f7d493c8e5fb97094cef600063ffffffff61060516565b6102696001600160a01b0383167395e6f48254609a6ee006f7d493c8e5fb97094cef8663ffffffff61060516565b6001925050505b92915050565b604051636eb1769f60e11b81526000906001600160a01b0383169063dd62ed3e906102bb9030907395e6f48254609a6ee006f7d493c8e5fb97094cef90600401611451565b60206040518083038186803b1580156102d357600080fd5b505afa1580156102e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061030b9190810190610e62565b90505b919050565b600080610360600085858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929392505063ffffffff610707169050565b9050630f47261b60e41b6001600160e01b031982161480610391575063dc1600f360e01b6001600160e01b03198216145b156103e8576103e0601085858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929392505063ffffffff610740169050565b915050610270565b60405162461bcd60e51b81526004016104009061155e565b60405180910390fd5b6104116108fa565b60008551116104325760405162461bcd60e51b81526004016104009061150e565b83518551146104535760405162461bcd60e51b81526004016104009061152e565b600083116104735760405162461bcd60e51b81526004016104009061153e565b61047b610918565b60405163a6c3bf3360e01b81527361935cbdd02287b511119ddb11aeb42f1593b7ef9063a6c3bf339085906104b8908a9089908b90600401611487565b60a0604051808303818588803b1580156104d157600080fd5b505af11580156104e5573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525061050a9190810190610e44565b905060405180604001604052808260200151815260200182600001518152509150505b949350505050565b61053d6108fa565b600085511161055e5760405162461bcd60e51b81526004016104009061150e565b835185511461057f5760405162461bcd60e51b81526004016104009061152e565b6000831161059f5760405162461bcd60e51b81526004016104009061157e565b6105a7610918565b604051638bc8efb360e01b81527361935cbdd02287b511119ddb11aeb42f1593b7ef90638bc8efb39085906104b8908a9089908b90600401611487565b604051806040016040528060058152602001640322e302e360dc1b81525081565b80158061068d5750604051636eb1769f60e11b81526001600160a01b0384169063dd62ed3e9061063b9030908690600401611451565b60206040518083038186803b15801561065357600080fd5b505afa158015610667573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061068b9190810190610e62565b155b6106a95760405162461bcd60e51b81526004016104009061156e565b60405161070290849063095ea7b360e01b906106cb908690869060240161146c565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610773565b505050565b6000816004018351101561072d5761072d610728600385518560040161085e565b6108b9565b5001602001516001600160e01b03191690565b6000816014018351101561076157610761610728600485518560140161085e565b5001601401516001600160a01b031690565b610785826001600160a01b03166108c1565b6107a15760405162461bcd60e51b81526004016104009061158e565b60006060836001600160a01b0316836040516107bd9190611437565b6000604051808303816000865af19150503d80600081146107fa576040519150601f19603f3d011682016040523d82523d6000602084013e6107ff565b606091505b5091509150816108215760405162461bcd60e51b81526004016104009061151e565b805115610858578080602001905161083c9190810190610de4565b6108585760405162461bcd60e51b81526004016104009061154e565b50505050565b6060632800659560e01b84848460405160240161087d939291906114d5565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915290505b9392505050565b805160208201fd5b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061052d575050151592915050565b60405180604001604052806002906020820280388339509192915050565b6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b8035610270816116b8565b600082601f83011261096357600080fd5b8135610976610971826115d3565b6115ac565b81815260209384019390925082018360005b838110156109b4578135860161099e8882610a6f565b8452506020928301929190910190600101610988565b5050505092915050565b600082601f8301126109cf57600080fd5b81356109dd610971826115d3565b81815260209384019390925082018360005b838110156109b45781358601610a058882610b41565b84525060209283019291909101906001016109ef565b8051610270816116cc565b60008083601f840112610a3857600080fd5b50813567ffffffffffffffff811115610a5057600080fd5b602083019150836001820283011115610a6857600080fd5b9250929050565b600082601f830112610a8057600080fd5b8135610a8e610971826115f4565b91508082526020830160208301858383011115610aaa57600080fd5b610ab5838284611669565b50505092915050565b600060a08284031215610ad057600080fd5b610ada60a06115ac565b90506000610ae88484610cf1565b8252506020610af984848301610cf1565b6020830152506040610b0d84828501610cf1565b6040830152506060610b2184828501610cf1565b6060830152506080610b3584828501610cf1565b60808301525092915050565b60006101c08284031215610b5457600080fd5b610b5f6101c06115ac565b90506000610b6d8484610947565b8252506020610b7e84848301610947565b6020830152506040610b9284828501610947565b6040830152506060610ba684828501610947565b6060830152506080610bba84828501610ce6565b60808301525060a0610bce84828501610ce6565b60a08301525060c0610be284828501610ce6565b60c08301525060e0610bf684828501610ce6565b60e083015250610100610c0b84828501610ce6565b61010083015250610120610c2184828501610ce6565b6101208301525061014082013567ffffffffffffffff811115610c4357600080fd5b610c4f84828501610a6f565b6101408301525061016082013567ffffffffffffffff811115610c7157600080fd5b610c7d84828501610a6f565b6101608301525061018082013567ffffffffffffffff811115610c9f57600080fd5b610cab84828501610a6f565b610180830152506101a082013567ffffffffffffffff811115610ccd57600080fd5b610cd984828501610a6f565b6101a08301525092915050565b8035610270816116d5565b8051610270816116d5565b600060208284031215610d0e57600080fd5b600061052d8484610947565b60008060408385031215610d2d57600080fd5b6000610d398585610947565b9250506020610d4a85828601610ce6565b9150509250929050565b60008060008060808587031215610d6a57600080fd5b843567ffffffffffffffff811115610d8157600080fd5b610d8d878288016109be565b945050602085013567ffffffffffffffff811115610daa57600080fd5b610db687828801610952565b9350506040610dc787828801610ce6565b9250506060610dd887828801610ce6565b91505092959194509250565b600060208284031215610df657600080fd5b600061052d8484610a1b565b60008060208385031215610e1557600080fd5b823567ffffffffffffffff811115610e2c57600080fd5b610e3885828601610a26565b92509250509250929050565b600060a08284031215610e5657600080fd5b600061052d8484610abe565b600060208284031215610e7457600080fd5b600061052d8484610cf1565b60006108b28383611016565b60006108b283836112f3565b6000610ea4838361142e565b505060200190565b610eb581611638565b82525050565b6000610ec682611625565b610ed0818561162f565b935083602082028501610ee28561161c565b8060005b85811015610f1c5784840389528151610eff8582610e80565b9450610f0a8361161c565b60209a909a0199925050600101610ee6565b5091979650505050505050565b6000610f3482611625565b610f3e818561162f565b935083602082028501610f508561161c565b8060005b85811015610f1c5784840389528151610f6d8582610e8c565b9450610f788361161c565b60209a909a0199925050600101610f54565b610f9381611629565b610f9d818461030e565b9250610fa882611622565b8060005b83811015610fd6578151610fc08782610e98565b9650610fcb8361161c565b925050600101610fac565b505050505050565b610eb581611643565b6000610ff282611625565b610ffc818561030e565b935061100c818560208601611675565b9290920192915050565b600061102182611625565b61102b818561162f565b935061103b818560208601611675565b611044816116a1565b9093019392505050565b610eb58161165e565b600061106460368361162f565b7f4174206c65617374206f6e65206f7264657220616e64206d61746368696e672081527539b4b3b730ba3ab9329034b9903932b8bab4b932b21760511b602082015260400192915050565b60006110bc60208361162f565b7f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815260200192915050565b60006110f560318361162f565b7f4d69736d61746368206265747765656e206e756d626572206f66206f72646572815270399030b7321039b4b3b730ba3ab932b99760791b602082015260400192915050565b6000611148602f8361162f565b7f54616b65722061737365742066696c6c20616d6f756e74206d7573742062652081526e33b932b0ba32b9103a3430b710181760891b602082015260400192915050565b6000611199602a8361162f565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e8152691bdd081cdd58d8d9595960b21b602082015260400192915050565b60006111e560178361162f565b7f496e76616c69642061737365742070726f78792049442e000000000000000000815260200192915050565b600061121e60368361162f565b7f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f81527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b602082015260400192915050565b6000611276602f8361162f565b7f4d616b65722061737365742066696c6c20616d6f756e74206d7573742062652081526e33b932b0ba32b9103a3430b710181760891b602082015260400192915050565b60006112c7601f8361162f565b7f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400815260200192915050565b80516000906101c08401906113088582610eac565b50602083015161131b6020860182610eac565b50604083015161132e6040860182610eac565b5060608301516113416060860182610eac565b506080830151611354608086018261142e565b5060a083015161136760a086018261142e565b5060c083015161137a60c086018261142e565b5060e083015161138d60e086018261142e565b506101008301516113a261010086018261142e565b506101208301516113b761012086018261142e565b506101408301518482036101408601526113d18282611016565b9150506101608301518482036101608601526113ed8282611016565b9150506101808301518482036101808601526114098282611016565b9150506101a08301518482036101a08601526114258282611016565b95945050505050565b610eb581611622565b60006108b28284610fe7565b602081016102708284610eac565b6040810161145f8285610eac565b6108b26020830184610eac565b6040810161147a8285610eac565b6108b2602083018461142e565b606080825281016114988186610f29565b90506114a7602083018561142e565b81810360408301526114258184610ebb565b604081016102708284610f8a565b602081016102708284610fde565b606081016114e3828661104e565b6114f0602083018561142e565b61052d604083018461142e565b602080825281016108b28184611016565b6020808252810161030b81611057565b6020808252810161030b816110af565b6020808252810161030b816110e8565b6020808252810161030b8161113b565b6020808252810161030b8161118c565b6020808252810161030b816111d8565b6020808252810161030b81611211565b6020808252810161030b81611269565b6020808252810161030b816112ba565b60208101610270828461142e565b60405181810167ffffffffffffffff811182821017156115cb57600080fd5b604052919050565b600067ffffffffffffffff8211156115ea57600080fd5b5060209081020190565b600067ffffffffffffffff82111561160b57600080fd5b506020601f91909101601f19160190565b60200190565b90565b5190565b50600290565b90815260200190565b600061030b82611652565b151590565b8061030e816116ab565b6001600160a01b031690565b600061030b82611648565b82818337506000910152565b60005b83811015611690578181015183820152602001611678565b838111156108585750506000910152565b601f01601f191690565b600881106116b557fe5b50565b6116c181611638565b81146116b557600080fd5b6116c181611643565b6116c18161162256fea365627a7a72315820320625b14b3f19a6be82be3388b25f627738ddf9d059c6cc37d27524ddb93d0c6c6578706572696d656e74616cf564736f6c63430005110040",
  "sourceMap": "1711:4750:14:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24",
  "deployedSourceMap": "1711:4750:14:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3548:434;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3548:434:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3094:168;;;;;;;;;:::i;:::-;;;;;;;;2641:299;;;;;;;;;:::i;:::-;;;;;;;;4500:732;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4500:732:14;;;;;;;;:::i;:::-;;;;;;;;5728:730;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5728:730:14;;;;;;;;:::i;1953:40::-;;;:::i;:::-;;;;;;;;3548:434;3707:52;;-1:-1:-1;;;3707:52:14;;3622:4;;3661:13;;3622:4;;-1:-1:-1;;;;;3707:15:14;;;;;:52;;3731:4;;2415:42;;3707:52;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3707:52:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3707:52:14;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3707:52:14;;;;;;;;;3686:73;;3788:6;3774:10;:20;3770:37;;;3803:4;3796:11;;;;;;3770:37;3831:1;3822:6;:10;:28;;;;;3849:1;3836:10;:14;3822:28;3818:76;;;3852:42;-1:-1:-1;;;;;3852:17:14;;2415:42;3892:1;3852:42;:17;:42;:::i;:::-;3905:47;-1:-1:-1;;;;;3905:17:14;;2415:42;3945:6;3905:47;:17;:47;:::i;:::-;3970:4;3963:11;;;;3548:434;;;;;:::o;3094:168::-;3186:68;;-1:-1:-1;;;3186:68:14;;3159:7;;-1:-1:-1;;;;;3186:31:14;;;;;:68;;3226:4;;2415:42;;3186:68;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3186:68:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3186:68:14;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3186:68:14;;;;;;;;;3179:75;;3094:168;;;;:::o;2641:299::-;2718:7;2738:19;2760:23;2781:1;2760:9;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2760:20:14;;:23;-1:-1:-1;;2760:23:14;:20;:23;;-1:-1:-1;2760:23:14:i;:::-;2738:45;-1:-1:-1;;;;;;;;;;2798:26:14;;;;:56;;-1:-1:-1;;;;;;;;;;2828:26:14;;;2798:56;2794:94;;;2863:25;2885:2;2863:9;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2863:21:14;;:25;-1:-1:-1;;2863:25:14;:21;:25;;-1:-1:-1;2863:25:14:i;:::-;2856:32;;;;;2794:94;2899:33;;-1:-1:-1;;;2899:33:14;;;;;;;;;;;;;;;;4500:732;4662:17;;:::i;:::-;4716:1;4700:6;:13;:17;4692:84;;;;-1:-1:-1;;;4692:84:14;;;;;;;;;4812:10;:17;4795:6;:13;:34;4787:96;;;;-1:-1:-1;;;4787:96:14;;;;;;;;;4925:1;4902:20;:24;4894:84;;;;-1:-1:-1;;;4894:84:14;;;;;;;;;4989:45;;:::i;:::-;5037:97;;-1:-1:-1;;;5037:97:14;;2111:42;;5037:36;;5080:11;;5037:97;;5093:6;;5101:20;;5123:10;;5037:97;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5037:97:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5037:97:14;;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5037:97:14;;;;;;;;;4989:145;;5145:79;;;;;;;;5153:11;:34;;;5145:79;;;;5189:11;:34;;;5145:79;;;;;;4500:732;;;;;;;:::o;5728:730::-;5889:17;;:::i;:::-;5943:1;5927:6;:13;:17;5919:84;;;;-1:-1:-1;;;5919:84:14;;;;;;;;;6039:10;:17;6022:6;:13;:34;6014:96;;;;-1:-1:-1;;;6014:96:14;;;;;;;;;6152:1;6129:20;:24;6121:84;;;;-1:-1:-1;;;6121:84:14;;;;;;;;;6216:45;;:::i;:::-;6264:96;;-1:-1:-1;;;6264:96:14;;2111:42;;6264:35;;6306:11;;6264:96;;6319:6;;6327:20;;6349:10;;6264:96;;;;1953:40;;;;;;;;;;;;;;-1:-1:-1;;;1953:40:14;;;;:::o;1050:612:55:-;1415:10;;;1414:62;;-1:-1:-1;1431:39:55;;-1:-1:-1;;;1431:39:55;;-1:-1:-1;;;;;1431:15:55;;;;;:39;;1455:4;;1462:7;;1431:39;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1431:39:55;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1431:39:55;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1431:39:55;;;;;;;;;:44;1414:62;1406:150;;;;-1:-1:-1;;;1406:150:55;;;;;;;;;1592:62;;1566:89;;1585:5;;-1:-1:-1;;;1615:22:55;1592:62;;1639:7;;1648:5;;1592:62;;;;;;;;-1:-1:-1;;26:21;;;22:32;6:49;;1592:62:55;;;49:4:-1;25:18;;61:17;;-1:-1;;;;;182:15;-1:-1;;;;;;1592:62:55;;;179:29:-1;;;;160:49;;;1566:18:55;:89::i;:::-;1050:612;;;:::o;16814:871:37:-;16934:13;16978:5;16986:1;16978:9;16967:1;:8;:20;16963:290;;;17003:239;17025:216;17087:87;17192:1;:8;17218:5;17226:1;17218:9;17025:44;:216::i;:::-;17003:21;:239::i;:::-;-1:-1:-1;17426:13:37;17329:2;17426:13;17420:20;-1:-1:-1;;;;;;17567:79:37;;16814:871::o;10753:1071::-;10874:14;10919:5;10927:2;10919:10;10908:1;:8;:21;10904:321;;;10945:269;10967:246;11029:89;11136:1;:8;11162:5;11170:2;11162:10;10967:44;:246::i;10945:269::-;-1:-1:-1;11726:13:37;11471:2;11726:13;11720:20;-1:-1:-1;;;;;11716:69:37;;10753:1071::o;2666:1095:55:-;3261:27;3269:5;-1:-1:-1;;;;;3261:25:55;;:27::i;:::-;3253:71;;;;-1:-1:-1;;;3253:71:55;;;;;;;;;3395:12;3409:23;3444:5;-1:-1:-1;;;;;3436:19:55;3456:4;3436:25;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3394:67:55;;;;3479:7;3471:52;;;;-1:-1:-1;;;3471:52:55;;;;;;;;;3538:17;;:21;3534:221;;3678:10;3667:30;;;;;;;;;;;;;;3659:85;;;;-1:-1:-1;;;3659:85:55;;;;;;;;;2666:1095;;;;:::o;1292:378:38:-;1480:12;1232:10;1551:37;;1602:9;1625:6;1645:8;1515:148;;;;;;;;;;;;;;;-1:-1:-1;;26:21;;;22:32;6:49;;1515:148:38;;;49:4:-1;25:18;;61:17;;-1:-1;;;;;182:15;-1:-1;;;;;;1515:148:38;;;179:29:-1;;;;160:49;;;1515:148:38;-1:-1:-1;1292:378:38;;;;;;:::o;1511:170:40:-;1654:9;1648:16;1641:4;1630:9;1626:20;1619:46;686:610:56;746:4;1207:20;;1052:66;1246:23;;;;;;:42;;-1:-1:-1;;1273:15:56;;;1238:51;-1:-1:-1;;686:610:56:o;1711:4750:14:-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;-1:-1;1711:4750:14;;;-1:-1:-1;;1711:4750:14:o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;72:20;;97:33;72:20;97:33;;158:693;;280:3;273:4;265:6;261:17;257:27;247:2;;298:1;295;288:12;247:2;335:6;322:20;357:85;372:69;434:6;372:69;;;357:85;;;470:21;;;514:4;502:17;;;;348:94;;-1:-1;527:14;;502:17;622:1;607:238;632:6;629:1;626:13;607:238;;;715:3;702:17;694:6;690:30;739:42;777:3;765:10;739:42;;;727:55;;-1:-1;805:4;796:14;;;;824;;;;;654:1;647:9;607:238;;;611:14;240:611;;;;;;;;891:735;;1027:3;1020:4;1012:6;1008:17;1004:27;994:2;;1045:1;1042;1035:12;994:2;1082:6;1069:20;1104:99;1119:83;1195:6;1119:83;;1104:99;1231:21;;;1275:4;1263:17;;;;1095:108;;-1:-1;1288:14;;1263:17;1383:1;1368:252;1393:6;1390:1;1387:13;1368:252;;;1476:3;1463:17;1455:6;1451:30;1500:56;1552:3;1540:10;1500:56;;;1488:69;;-1:-1;1580:4;1571:14;;;;1599;;;;;1415:1;1408:9;1368:252;;1634:128;1709:13;;1727:30;1709:13;1727:30;;1783:336;;;1897:3;1890:4;1882:6;1878:17;1874:27;1864:2;;1915:1;1912;1905:12;1864:2;-1:-1;1935:20;;1975:18;1964:30;;1961:2;;;2007:1;2004;1997:12;1961:2;2041:4;2033:6;2029:17;2017:29;;2092:3;2084:4;2076:6;2072:17;2062:8;2058:32;2055:41;2052:2;;;2109:1;2106;2099:12;2052:2;1857:262;;;;;;2128:432;;2225:3;2218:4;2210:6;2206:17;2202:27;2192:2;;2243:1;2240;2233:12;2192:2;2280:6;2267:20;2302:60;2317:44;2354:6;2317:44;;2302:60;2293:69;;2382:6;2375:5;2368:21;2418:4;2410:6;2406:17;2451:4;2444:5;2440:16;2486:3;2477:6;2472:3;2468:16;2465:25;2462:2;;;2503:1;2500;2493:12;2462:2;2513:41;2547:6;2542:3;2537;2513:41;;;2185:375;;;;;;;;2608:1033;;2737:4;2725:9;2720:3;2716:19;2712:30;2709:2;;;2755:1;2752;2745:12;2709:2;2773:20;2788:4;2773:20;;;2764:29;-1:-1;2861:1;2893:60;2949:3;2929:9;2893:60;;;2868:86;;-1:-1;3033:2;3066:60;3122:3;3098:22;;;3066:60;;;3059:4;3052:5;3048:16;3041:86;2975:163;3196:2;3229:60;3285:3;3276:6;3265:9;3261:22;3229:60;;;3222:4;3215:5;3211:16;3204:86;3148:153;3359:2;3392:60;3448:3;3439:6;3428:9;3424:22;3392:60;;;3385:4;3378:5;3374:16;3367:86;3311:153;3525:3;3559:60;3615:3;3606:6;3595:9;3591:22;3559:60;;;3552:4;3545:5;3541:16;3534:86;3474:157;2703:938;;;;;3676:2714;;3784:6;3772:9;3767:3;3763:19;3759:32;3756:2;;;3804:1;3801;3794:12;3756:2;3822:22;3837:6;3822:22;;;3813:31;-1:-1;3902:1;3934:49;3979:3;3959:9;3934:49;;;3909:75;;-1:-1;4053:2;4086:49;4131:3;4107:22;;;4086:49;;;4079:4;4072:5;4068:16;4061:75;4005:142;4212:2;4245:49;4290:3;4281:6;4270:9;4266:22;4245:49;;;4238:4;4231:5;4227:16;4220:75;4157:149;4365:2;4398:49;4443:3;4434:6;4423:9;4419:22;4398:49;;;4391:4;4384:5;4380:16;4373:75;4316:143;4521:3;4555:49;4600:3;4591:6;4580:9;4576:22;4555:49;;;4548:4;4541:5;4537:16;4530:75;4469:147;4678:3;4712:49;4757:3;4748:6;4737:9;4733:22;4712:49;;;4705:4;4698:5;4694:16;4687:75;4626:147;4827:3;4861:49;4906:3;4897:6;4886:9;4882:22;4861:49;;;4854:4;4847:5;4843:16;4836:75;4783:139;4976:3;5010:49;5055:3;5046:6;5035:9;5031:22;5010:49;;;5003:4;4996:5;4992:16;4985:75;4932:139;5138:3;5174:49;5219:3;5210:6;5199:9;5195:22;5174:49;;;5165:6;5158:5;5154:18;5147:77;5081:154;5285:3;5321:49;5366:3;5357:6;5346:9;5342:22;5321:49;;;5312:6;5305:5;5301:18;5294:77;5245:137;5470:3;5459:9;5455:19;5442:33;5495:18;5487:6;5484:30;5481:2;;;5527:1;5524;5517:12;5481:2;5564:54;5614:3;5605:6;5594:9;5590:22;5564:54;;;5555:6;5548:5;5544:18;5537:82;5392:238;5718:3;5707:9;5703:19;5690:33;5743:18;5735:6;5732:30;5729:2;;;5775:1;5772;5765:12;5729:2;5812:54;5862:3;5853:6;5842:9;5838:22;5812:54;;;5803:6;5796:5;5792:18;5785:82;5640:238;5969:3;5958:9;5954:19;5941:33;5994:18;5986:6;5983:30;5980:2;;;6026:1;6023;6016:12;5980:2;6063:54;6113:3;6104:6;6093:9;6089:22;6063:54;;;6054:6;6047:5;6043:18;6036:82;5888:241;6220:3;6209:9;6205:19;6192:33;6245:18;6237:6;6234:30;6231:2;;;6277:1;6274;6267:12;6231:2;6314:54;6364:3;6355:6;6344:9;6340:22;6314:54;;;6305:6;6298:5;6294:18;6287:82;6139:241;3750:2640;;;;;6397:130;6464:20;;6489:33;6464:20;6489:33;;6534:134;6612:13;;6630:33;6612:13;6630:33;;6675:241;;6779:2;6767:9;6758:7;6754:23;6750:32;6747:2;;;6795:1;6792;6785:12;6747:2;6830:1;6847:53;6892:7;6872:9;6847:53;;6923:366;;;7044:2;7032:9;7023:7;7019:23;7015:32;7012:2;;;7060:1;7057;7050:12;7012:2;7095:1;7112:53;7157:7;7137:9;7112:53;;;7102:63;;7074:97;7202:2;7220:53;7265:7;7256:6;7245:9;7241:22;7220:53;;;7210:63;;7181:98;7006:283;;;;;;7296:937;;;;;7525:3;7513:9;7504:7;7500:23;7496:33;7493:2;;;7542:1;7539;7532:12;7493:2;7577:31;;7628:18;7617:30;;7614:2;;;7660:1;7657;7650:12;7614:2;7680:97;7769:7;7760:6;7749:9;7745:22;7680:97;;;7670:107;;7556:227;7842:2;7831:9;7827:18;7814:32;7866:18;7858:6;7855:30;7852:2;;;7898:1;7895;7888:12;7852:2;7918:83;7993:7;7984:6;7973:9;7969:22;7918:83;;;7908:93;;7793:214;8038:2;8056:53;8101:7;8092:6;8081:9;8077:22;8056:53;;;8046:63;;8017:98;8146:2;8164:53;8209:7;8200:6;8189:9;8185:22;8164:53;;;8154:63;;8125:98;7487:746;;;;;;;;8240:257;;8352:2;8340:9;8331:7;8327:23;8323:32;8320:2;;;8368:1;8365;8358:12;8320:2;8403:1;8420:61;8473:7;8453:9;8420:61;;8504:365;;;8627:2;8615:9;8606:7;8602:23;8598:32;8595:2;;;8643:1;8640;8633:12;8595:2;8678:31;;8729:18;8718:30;;8715:2;;;8761:1;8758;8751:12;8715:2;8789:64;8845:7;8836:6;8825:9;8821:22;8789:64;;;8779:74;;;;8657:202;8589:280;;;;;;8876:322;;9020:3;9008:9;8999:7;8995:23;8991:33;8988:2;;;9037:1;9034;9027:12;8988:2;9072:1;9089:93;9174:7;9154:9;9089:93;;9205:263;;9320:2;9308:9;9299:7;9295:23;9291:32;9288:2;;;9336:1;9333;9326:12;9288:2;9371:1;9388:64;9444:7;9424:9;9388:64;;9476:177;;9587:60;9643:3;9635:6;9587:60;;9662:233;;9801:88;9885:3;9877:6;9801:88;;9904:189;;9999:54;10049:3;10041:6;9999:54;;;-1:-1;;10082:4;10073:14;;9992:101;10101:103;10174:24;10192:5;10174:24;;;10169:3;10162:37;10156:48;;;10486:888;;10641:59;10694:5;10641:59;;;10713:91;10797:6;10792:3;10713:91;;;10706:98;;10827:3;10869:4;10861:6;10857:17;10852:3;10848:27;10896:61;10951:5;10896:61;;;10977:7;11005:1;10990:345;11015:6;11012:1;11009:13;10990:345;;;11077:9;11071:4;11067:20;11062:3;11055:33;11122:6;11116:13;11144:74;11213:4;11198:13;11144:74;;;11136:82;;11235:65;11293:6;11235:65;;;11323:4;11314:14;;;;;11225:75;-1:-1;;11037:1;11030:9;10990:345;;;-1:-1;11348:4;;10620:754;-1:-1;;;;;;;10620:754;11441:1000;;11624:73;11691:5;11624:73;;;11710:105;11808:6;11803:3;11710:105;;;11703:112;;11838:3;11880:4;11872:6;11868:17;11863:3;11859:27;11907:75;11976:5;11907:75;;;12002:7;12030:1;12015:387;12040:6;12037:1;12034:13;12015:387;;;12102:9;12096:4;12092:20;12087:3;12080:33;12147:6;12141:13;12169:102;12266:4;12251:13;12169:102;;;12161:110;;12288:79;12360:6;12288:79;;;12390:4;12381:14;;;;;12278:89;-1:-1;;12062:1;12055:9;12015:387;;12482:684;12623:52;12669:5;12623:52;;;12688:92;12773:6;12768:3;12688:92;;;12681:99;;12801:54;12849:5;12801:54;;;12875:7;12903:1;12888:266;12913:6;12910:1;12907:13;12888:266;;;12980:6;12974:13;13001:71;13068:3;13053:13;13001:71;;;12994:78;;13089:58;13140:6;13089:58;;;13079:68;-1:-1;;12935:1;12928:9;12888:266;;;12892:14;12602:564;;;;;;13174:112;13259:21;13274:5;13259:21;;13293:356;;13421:38;13453:5;13421:38;;;13471:88;13552:6;13547:3;13471:88;;;13464:95;;13564:52;13609:6;13604:3;13597:4;13590:5;13586:16;13564:52;;;13628:16;;;;;13401:248;-1:-1;;13401:248;13656:315;;13752:34;13780:5;13752:34;;;13798:60;13851:6;13846:3;13798:60;;;13791:67;;13863:52;13908:6;13903:3;13896:4;13889:5;13885:16;13863:52;;;13936:29;13958:6;13936:29;;;13927:39;;;;13732:239;-1:-1;;;13732:239;13978:192;14094:70;14158:5;14094:70;;14540:391;;14700:67;14764:2;14759:3;14700:67;;;14800:34;14780:55;;-1:-1;;;14864:2;14855:12;;14848:46;14922:2;14913:12;;14686:245;-1:-1;;14686:245;14940:332;;15100:67;15164:2;15159:3;15100:67;;;15200:34;15180:55;;15263:2;15254:12;;15086:186;-1:-1;;15086:186;15281:386;;15441:67;15505:2;15500:3;15441:67;;;15541:34;15521:55;;-1:-1;;;15605:2;15596:12;;15589:41;15658:2;15649:12;;15427:240;-1:-1;;15427:240;15676:384;;15836:67;15900:2;15895:3;15836:67;;;15936:34;15916:55;;-1:-1;;;16000:2;15991:12;;15984:39;16051:2;16042:12;;15822:238;-1:-1;;15822:238;16069:379;;16229:67;16293:2;16288:3;16229:67;;;16329:34;16309:55;;-1:-1;;;16393:2;16384:12;;16377:34;16439:2;16430:12;;16215:233;-1:-1;;16215:233;16457:323;;16617:67;16681:2;16676:3;16617:67;;;16717:25;16697:46;;16771:2;16762:12;;16603:177;-1:-1;;16603:177;16789:391;;16949:67;17013:2;17008:3;16949:67;;;17049:34;17029:55;;-1:-1;;;17113:2;17104:12;;17097:46;17171:2;17162:12;;16935:245;-1:-1;;16935:245;17189:384;;17349:67;17413:2;17408:3;17349:67;;;17449:34;17429:55;;-1:-1;;;17513:2;17504:12;;17497:39;17564:2;17555:12;;17335:238;-1:-1;;17335:238;17582:331;;17742:67;17806:2;17801:3;17742:67;;;17842:33;17822:54;;17904:2;17895:12;;17728:185;-1:-1;;17728:185;17974:2766;18183:23;;17974:2766;;18107:6;18098:16;;;18212:63;18102:3;18183:23;18212:63;;;18129:152;18362:4;18355:5;18351:16;18345:23;18374:63;18431:4;18426:3;18422:14;18408:12;18374:63;;;18291:152;18531:4;18524:5;18520:16;18514:23;18543:63;18600:4;18595:3;18591:14;18577:12;18543:63;;;18453:159;18694:4;18687:5;18683:16;18677:23;18706:63;18763:4;18758:3;18754:14;18740:12;18706:63;;;18622:153;18860:4;18853:5;18849:16;18843:23;18872:63;18929:4;18924:3;18920:14;18906:12;18872:63;;;18785:156;19026:4;19019:5;19015:16;19009:23;19038:63;19095:4;19090:3;19086:14;19072:12;19038:63;;;18951:156;19184:4;19177:5;19173:16;19167:23;19196:63;19253:4;19248:3;19244:14;19230:12;19196:63;;;19117:148;19342:4;19335:5;19331:16;19325:23;19354:63;19411:4;19406:3;19402:14;19388:12;19354:63;;;19275:148;19513:6;19506:5;19502:18;19496:25;19527:65;19584:6;19579:3;19575:16;19561:12;19527:65;;;19433:165;19671:6;19664:5;19660:18;19654:25;19685:65;19742:6;19737:3;19733:16;19719:12;19685:65;;;19608:148;19839:6;19832:5;19828:18;19822:25;19895:3;19889:4;19885:14;19876:6;19871:3;19867:16;19860:40;19915:67;19977:4;19963:12;19915:67;;;19907:75;;19766:228;20077:6;20070:5;20066:18;20060:25;20133:3;20127:4;20123:14;20114:6;20109:3;20105:16;20098:40;20153:67;20215:4;20201:12;20153:67;;;20145:75;;20004:228;20318:6;20311:5;20307:18;20301:25;20374:3;20368:4;20364:14;20355:6;20350:3;20346:16;20339:40;20394:67;20456:4;20442:12;20394:67;;;20386:75;;20242:231;20559:6;20552:5;20548:18;20542:25;20615:3;20609:4;20605:14;20596:6;20591:3;20587:16;20580:40;20635:67;20697:4;20683:12;20635:67;;;20627:75;18080:2660;-1:-1;;;;;18080:2660;20747:103;20820:24;20838:5;20820:24;;21223:262;;21367:93;21456:3;21447:6;21367:93;;21492:229;21618:2;21603:18;;21632:79;21607:9;21684:6;21632:79;;21728:324;21874:2;21859:18;;21888:71;21863:9;21932:6;21888:71;;;21970:72;22038:2;22027:9;22023:18;22014:6;21970:72;;22059:324;22205:2;22190:18;;22219:71;22194:9;22263:6;22219:71;;;22301:72;22369:2;22358:9;22354:18;22345:6;22301:72;;22390:827;22712:2;22726:47;;;22697:18;;22787:146;22697:18;22919:6;22787:146;;;22779:154;;22944:72;23012:2;23001:9;22997:18;22988:6;22944:72;;;23064:9;23058:4;23054:20;23049:2;23038:9;23034:18;23027:48;23089:118;23202:4;23193:6;23089:118;;23224:321;23396:2;23381:18;;23410:125;23385:9;23508:6;23410:125;;23552:217;23672:2;23657:18;;23686:73;23661:9;23732:6;23686:73;;23776:501;23983:2;23968:18;;23997:104;23972:9;24074:6;23997:104;;;24112:72;24180:2;24169:9;24165:18;24156:6;24112:72;;;24195;24263:2;24252:9;24248:18;24239:6;24195:72;;24284:309;24426:2;24440:47;;;24411:18;;24501:82;24411:18;24569:6;24501:82;;24600:407;24791:2;24805:47;;;24776:18;;24866:131;24776:18;24866:131;;25014:407;25205:2;25219:47;;;25190:18;;25280:131;25190:18;25280:131;;25428:407;25619:2;25633:47;;;25604:18;;25694:131;25604:18;25694:131;;25842:407;26033:2;26047:47;;;26018:18;;26108:131;26018:18;26108:131;;26256:407;26447:2;26461:47;;;26432:18;;26522:131;26432:18;26522:131;;26670:407;26861:2;26875:47;;;26846:18;;26936:131;26846:18;26936:131;;27084:407;27275:2;27289:47;;;27260:18;;27350:131;27260:18;27350:131;;27498:407;27689:2;27703:47;;;27674:18;;27764:131;27674:18;27764:131;;27912:407;28103:2;28117:47;;;28088:18;;28178:131;28088:18;28178:131;;28326:229;28452:2;28437:18;;28466:79;28441:9;28518:6;28466:79;;28562:256;28624:2;28618:9;28650:17;;;28725:18;28710:34;;28746:22;;;28707:62;28704:2;;;28782:1;28779;28772:12;28704:2;28798;28791:22;28602:216;;-1:-1;28602:216;28825:309;;28989:18;28981:6;28978:30;28975:2;;;29021:1;29018;29011:12;28975:2;-1:-1;29056:4;29044:17;;;29109:15;;28912:222;29471:317;;29610:18;29602:6;29599:30;29596:2;;;29642:1;29639;29632:12;29596:2;-1:-1;29773:4;29709;29686:17;;;;-1:-1;;29682:33;29763:15;;29533:255;29795:156;29924:4;29915:14;;29872:79;30135:97;30219:3;30205:27;30239:142;30347:12;;30318:63;30551:108;-1:-1;30645:4;;30623:36;31411:183;31534:19;;;31583:4;31574:14;;31527:67;32631:91;;32693:24;32711:5;32693:24;;32729:85;32795:13;32788:21;;32771:43;32821:176;32918:5;32924:68;32918:5;32924:68;;33004:121;-1:-1;;;;;33066:54;;33049:76;33211:176;;33323:59;33376:5;33323:59;;33395:145;33476:6;33471:3;33466;33453:30;-1:-1;33532:1;33514:16;;33507:27;33446:94;33549:268;33614:1;33621:101;33635:6;33632:1;33629:13;33621:101;;;33702:11;;;33696:18;33683:11;;;33676:39;33657:2;33650:10;33621:101;;;33737:6;33734:1;33731:13;33728:2;;;-1:-1;;33802:1;33784:16;;33777:27;33598:219;33825:97;33913:2;33893:14;-1:-1;;33889:28;;33873:49;33930:126;34034:1;34027:5;34024:12;34014:2;;34040:9;34014:2;34008:48;;34063:117;34132:24;34150:5;34132:24;;;34125:5;34122:35;34112:2;;34171:1;34168;34161:12;34187:111;34253:21;34268:5;34253:21;;34305:117;34374:24;34392:5;34374:24;",
  "source": "/**\r\n * COPYRIGHT © 2020 RARI CAPITAL, INC. ALL RIGHTS RESERVED.\r\n * Anyone is free to integrate the public APIs (described in `API.md` of the `rari-contracts` package) of the official smart contract instances deployed by Rari Capital, Inc. in any application (commercial or noncommercial and under any license) benefitting Rari Capital, Inc.\r\n * Only those with explicit permission from a co-founder of Rari Capital (Jai Bhavnani, Jack Lipstone, or David Lucid) are permitted to study, review, or analyze any part of the source code contained in the `rari-contracts` package.\r\n * Reuse (including deployment of smart contracts other than private testing on a private network), modification, redistribution, or sublicensing of any source code contained in the `rari-contracts` package is not permitted without the explicit permission of David Lucid of Rari Capital, Inc.\r\n * No one is permitted to use the software for any purpose other than those allowed by this license.\r\n * This license is liable to change at any time at the sole discretion of David Lucid of Rari Capital, Inc.\r\n */\r\n\r\npragma solidity ^0.5.7;\r\npragma experimental ABIEncoderV2;\r\n\r\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\";\r\n\r\nimport \"@0x/contracts-exchange-libs/contracts/src/LibFillResults.sol\";\r\nimport \"@0x/contracts-exchange-libs/contracts/src/LibOrder.sol\";\r\nimport \"@0x/contracts-exchange/contracts/src/interfaces/IExchange.sol\";\r\nimport \"@0x/contracts-utils/contracts/src/LibBytes.sol\";\r\n\r\n/**\r\n * @title ZeroExExchangeController\r\n * @author David Lucid <david@rari.capital> (https://github.com/davidlucid)\r\n * @dev This library handles exchanges via 0x.\r\n */\r\nlibrary ZeroExExchangeController {\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IERC20;\r\n    using LibBytes for bytes;\r\n\r\n    /**\r\n     * @notice Package version of `rari-contracts` when this contract was deployed.\r\n     */\r\n    string public constant VERSION = \"2.0.0\";\r\n\r\n    /**\r\n     * @dev 0x v3 Exchange contract address.\r\n     */\r\n    address constant private EXCHANGE_CONTRACT = 0x61935CbDd02287B511119DDb11Aeb42F1593b7Ef;\r\n\r\n    /**\r\n     * @dev 0x v3 Exchange contract object.\r\n     */\r\n    IExchange constant private _exchange = IExchange(EXCHANGE_CONTRACT);\r\n\r\n    /**\r\n     * @dev 0x v3 ERC20Proxy contract address.\r\n     */\r\n    address constant private ERC20_PROXY_CONTRACT = 0x95E6F48254609A6ee006F7D493c8e5fB97094ceF;\r\n\r\n    /**\r\n     * @dev Decodes ERC20 or ERC20Bridge asset data.\r\n     * @param assetData The ERC20 or ERC20Bridge asset data.\r\n     * @return The asset token address.\r\n     */\r\n    function decodeTokenAddress(bytes calldata assetData) external pure returns (address) {\r\n        bytes4 assetProxyId = assetData.readBytes4(0);\r\n        if (assetProxyId == 0xf47261b0 || assetProxyId == 0xdc1600f3) return assetData.readAddress(16);\r\n        revert(\"Invalid asset proxy ID.\");\r\n    }\r\n\r\n    /**\r\n     * @dev Gets allowance of the specified token to 0x.\r\n     * @param erc20Contract The ERC20 contract address of the token.\r\n     */\r\n    function allowance(address erc20Contract) external view returns (uint256) {\r\n        return IERC20(erc20Contract).allowance(address(this), ERC20_PROXY_CONTRACT);\r\n    }\r\n\r\n    /**\r\n     * @dev Approves tokens to 0x without spending gas on every deposit.\r\n     * @param erc20Contract The ERC20 contract address of the token.\r\n     * @param amount Amount of the specified token to approve to dYdX.\r\n     * @return Boolean indicating success.\r\n     */\r\n    function approve(address erc20Contract, uint256 amount) external returns (bool) {\r\n        IERC20 token = IERC20(erc20Contract);\r\n        uint256 _allowance = token.allowance(address(this), ERC20_PROXY_CONTRACT);\r\n        if (_allowance == amount) return true;\r\n        if (amount > 0 && _allowance > 0) token.safeApprove(ERC20_PROXY_CONTRACT, 0);\r\n        token.safeApprove(ERC20_PROXY_CONTRACT, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Market sells to 0x exchange orders up to a certain amount of input.\r\n     * @param orders The limit orders to be filled in ascending order of price.\r\n     * @param signatures The signatures for the orders.\r\n     * @param takerAssetFillAmount The amount of the taker asset to sell (excluding taker fees).\r\n     * @param protocolFee The protocol fee in ETH to pay to 0x.\r\n     * @return Array containing the taker asset filled amount (sold) and maker asset filled amount (bought).\r\n     */\r\n    function marketSellOrdersFillOrKill(LibOrder.Order[] memory orders, bytes[] memory signatures, uint256 takerAssetFillAmount, uint256 protocolFee) public returns (uint256[2] memory) {\r\n        require(orders.length > 0, \"At least one order and matching signature is required.\");\r\n        require(orders.length == signatures.length, \"Mismatch between number of orders and signatures.\");\r\n        require(takerAssetFillAmount > 0, \"Taker asset fill amount must be greater than 0.\");\r\n        LibFillResults.FillResults memory fillResults = _exchange.marketSellOrdersFillOrKill.value(protocolFee)(orders, takerAssetFillAmount, signatures);\r\n        return [fillResults.takerAssetFilledAmount, fillResults.makerAssetFilledAmount];\r\n    }\r\n\r\n    /**\r\n     * @dev Market buys from 0x exchange orders up to a certain amount of output.\r\n     * @param orders The limit orders to be filled in ascending order of price.\r\n     * @param signatures The signatures for the orders.\r\n     * @param makerAssetFillAmount The amount of the maker asset to buy.\r\n     * @param protocolFee The protocol fee in ETH to pay to 0x.\r\n     * @return Array containing the taker asset filled amount (sold) and maker asset filled amount (bought).\r\n     */\r\n    function marketBuyOrdersFillOrKill(LibOrder.Order[] memory orders, bytes[] memory signatures, uint256 makerAssetFillAmount, uint256 protocolFee) public returns (uint256[2] memory) {\r\n        require(orders.length > 0, \"At least one order and matching signature is required.\");\r\n        require(orders.length == signatures.length, \"Mismatch between number of orders and signatures.\");\r\n        require(makerAssetFillAmount > 0, \"Maker asset fill amount must be greater than 0.\");\r\n        LibFillResults.FillResults memory fillResults = _exchange.marketBuyOrdersFillOrKill.value(protocolFee)(orders, makerAssetFillAmount, signatures);\r\n        return [fillResults.takerAssetFilledAmount, fillResults.makerAssetFilledAmount];\r\n    }\r\n}\r\n",
  "sourcePath": "/home/david/rari-contracts-v2.0.0/contracts/lib/exchanges/ZeroExExchangeController.sol",
  "ast": {
    "absolutePath": "/home/david/rari-contracts-v2.0.0/contracts/lib/exchanges/ZeroExExchangeController.sol",
    "exportedSymbols": {
      "ZeroExExchangeController": [
        5516
      ]
    },
    "id": 5517,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5255,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "1091:23:14"
      },
      {
        "id": 5256,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "1116:33:14"
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 5257,
        "nodeType": "ImportDirective",
        "scope": 5517,
        "sourceUnit": 11072,
        "src": "1153:51:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
        "id": 5258,
        "nodeType": "ImportDirective",
        "scope": 5517,
        "sourceUnit": 11537,
        "src": "1206:59:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@0x/contracts-exchange-libs/contracts/src/LibFillResults.sol",
        "file": "@0x/contracts-exchange-libs/contracts/src/LibFillResults.sol",
        "id": 5259,
        "nodeType": "ImportDirective",
        "scope": 5517,
        "sourceUnit": 7924,
        "src": "1269:70:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@0x/contracts-exchange-libs/contracts/src/LibOrder.sol",
        "file": "@0x/contracts-exchange-libs/contracts/src/LibOrder.sol",
        "id": 5260,
        "nodeType": "ImportDirective",
        "scope": 5517,
        "sourceUnit": 8350,
        "src": "1341:64:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@0x/contracts-exchange/contracts/src/interfaces/IExchange.sol",
        "file": "@0x/contracts-exchange/contracts/src/interfaces/IExchange.sol",
        "id": 5261,
        "nodeType": "ImportDirective",
        "scope": 5517,
        "sourceUnit": 8483,
        "src": "1407:71:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@0x/contracts-utils/contracts/src/LibBytes.sol",
        "file": "@0x/contracts-utils/contracts/src/LibBytes.sol",
        "id": 5262,
        "nodeType": "ImportDirective",
        "scope": 5517,
        "sourceUnit": 9432,
        "src": "1480:56:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@title ZeroExExchangeController\n@author David Lucid <david@rari.capital> (https://github.com/davidlucid)\n@dev This library handles exchanges via 0x.",
        "fullyImplemented": true,
        "id": 5516,
        "linearizedBaseContracts": [
          5516
        ],
        "name": "ZeroExExchangeController",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 5265,
            "libraryName": {
              "contractScope": null,
              "id": 5263,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11071,
              "src": "1757:8:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$11071",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1751:27:14",
            "typeName": {
              "id": 5264,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1770:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 5268,
            "libraryName": {
              "contractScope": null,
              "id": 5266,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11536,
              "src": "1790:9:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$11536",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1784:27:14",
            "typeName": {
              "contractScope": null,
              "id": 5267,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11316,
              "src": "1804:6:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$11316",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 5271,
            "libraryName": {
              "contractScope": null,
              "id": 5269,
              "name": "LibBytes",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9431,
              "src": "1823:8:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LibBytes_$9431",
                "typeString": "library LibBytes"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1817:25:14",
            "typeName": {
              "id": 5270,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "1836:5:14",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            }
          },
          {
            "constant": true,
            "id": 5274,
            "name": "VERSION",
            "nodeType": "VariableDeclaration",
            "scope": 5516,
            "src": "1953:40:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 5272,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1953:6:14",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "322e302e30",
              "id": 5273,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1986:7:14",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_b4bcb154e38601c389396fa918314da42d4626f13ef6d0ceb07e5f5d26b2fbc3",
                "typeString": "literal_string \"2.0.0\""
              },
              "value": "2.0.0"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 5277,
            "name": "EXCHANGE_CONTRACT",
            "nodeType": "VariableDeclaration",
            "scope": 5516,
            "src": "2066:87:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5275,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2066:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307836313933354362446430323238374235313131313944446231314165623432463135393362374566",
              "id": 5276,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2111:42:14",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0x61935CbDd02287B511119DDb11Aeb42F1593b7Ef"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 5282,
            "name": "_exchange",
            "nodeType": "VariableDeclaration",
            "scope": 5516,
            "src": "2225:67:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IExchange_$8482",
              "typeString": "contract IExchange"
            },
            "typeName": {
              "contractScope": null,
              "id": 5278,
              "name": "IExchange",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8482,
              "src": "2225:9:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IExchange_$8482",
                "typeString": "contract IExchange"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "id": 5280,
                  "name": "EXCHANGE_CONTRACT",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5277,
                  "src": "2274:17:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 5279,
                "name": "IExchange",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 8482,
                "src": "2264:9:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IExchange_$8482_$",
                  "typeString": "type(contract IExchange)"
                }
              },
              "id": 5281,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2264:28:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IExchange_$8482",
                "typeString": "contract IExchange"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 5285,
            "name": "ERC20_PROXY_CONTRACT",
            "nodeType": "VariableDeclaration",
            "scope": 5516,
            "src": "2367:90:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5283,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2367:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307839354536463438323534363039413665653030364637443439336338653566423937303934636546",
              "id": 5284,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2415:42:14",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0x95E6F48254609A6ee006F7D493c8e5fB97094ceF"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 5316,
              "nodeType": "Block",
              "src": "2727:213:14",
              "statements": [
                {
                  "assignments": [
                    5293
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5293,
                      "name": "assetProxyId",
                      "nodeType": "VariableDeclaration",
                      "scope": 5316,
                      "src": "2738:19:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 5292,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "2738:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5298,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 5296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2781:1:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5294,
                        "name": "assetData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5287,
                        "src": "2760:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      "id": 5295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "readBytes4",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9421,
                      "src": "2760:20:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes4_$bound_to$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory,uint256) pure returns (bytes4)"
                      }
                    },
                    "id": 5297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2760:23:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2738:45:14"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 5305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 5301,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 5299,
                        "name": "assetProxyId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5293,
                        "src": "2798:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30786634373236316230",
                        "id": 5300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2814:10:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4101136816_by_1",
                          "typeString": "int_const 4101136816"
                        },
                        "value": "0xf47261b0"
                      },
                      "src": "2798:26:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 5304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 5302,
                        "name": "assetProxyId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5293,
                        "src": "2828:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30786463313630306633",
                        "id": 5303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2844:10:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3692429555_by_1",
                          "typeString": "int_const 3692429555"
                        },
                        "value": "0xdc1600f3"
                      },
                      "src": "2828:26:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2798:56:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 5311,
                  "nodeType": "IfStatement",
                  "src": "2794:94:14",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3136",
                          "id": 5308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2885:2:14",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          "value": "16"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 5306,
                          "name": "assetData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5287,
                          "src": "2863:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "id": 5307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "readAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9222,
                        "src": "2863:21:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory,uint256) pure returns (address)"
                        }
                      },
                      "id": 5309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2863:25:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "functionReturnParameters": 5291,
                    "id": 5310,
                    "nodeType": "Return",
                    "src": "2856:32:14"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c69642061737365742070726f78792049442e",
                        "id": 5313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2906:25:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ecdecfa8f808da55f41ca6d1ed249544b07bbc847c1ad9b592c9bc860e95b121",
                          "typeString": "literal_string \"Invalid asset proxy ID.\""
                        },
                        "value": "Invalid asset proxy ID."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_ecdecfa8f808da55f41ca6d1ed249544b07bbc847c1ad9b592c9bc860e95b121",
                          "typeString": "literal_string \"Invalid asset proxy ID.\""
                        }
                      ],
                      "id": 5312,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11631,
                        11632
                      ],
                      "referencedDeclaration": 11632,
                      "src": "2899:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 5314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2899:33:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5315,
                  "nodeType": "ExpressionStatement",
                  "src": "2899:33:14"
                }
              ]
            },
            "documentation": "@dev Decodes ERC20 or ERC20Bridge asset data.\n@param assetData The ERC20 or ERC20Bridge asset data.\n@return The asset token address.",
            "id": 5317,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decodeTokenAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5287,
                  "name": "assetData",
                  "nodeType": "VariableDeclaration",
                  "scope": 5317,
                  "src": "2669:24:14",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5286,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2669:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2668:26:14"
            },
            "returnParameters": {
              "id": 5291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5290,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5317,
                  "src": "2718:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5289,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2718:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2717:9:14"
            },
            "scope": 5516,
            "src": "2641:299:14",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5334,
              "nodeType": "Block",
              "src": "3168:94:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5329,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11722,
                            "src": "3226:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ZeroExExchangeController_$5516",
                              "typeString": "library ZeroExExchangeController"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ZeroExExchangeController_$5516",
                              "typeString": "library ZeroExExchangeController"
                            }
                          ],
                          "id": 5328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3218:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 5330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3218:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5331,
                        "name": "ERC20_PROXY_CONTRACT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5285,
                        "src": "3233:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5325,
                            "name": "erc20Contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5319,
                            "src": "3193:13:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5324,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11316,
                          "src": "3186:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$11316_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 5326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3186:21:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$11316",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5327,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "allowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11279,
                      "src": "3186:31:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 5332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3186:68:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5323,
                  "id": 5333,
                  "nodeType": "Return",
                  "src": "3179:75:14"
                }
              ]
            },
            "documentation": "@dev Gets allowance of the specified token to 0x.\n@param erc20Contract The ERC20 contract address of the token.",
            "id": 5335,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5320,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5319,
                  "name": "erc20Contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 5335,
                  "src": "3113:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5318,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3113:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3112:23:14"
            },
            "returnParameters": {
              "id": 5323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5322,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5335,
                  "src": "3159:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5321,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3159:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3158:9:14"
            },
            "scope": 5516,
            "src": "3094:168:14",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5390,
              "nodeType": "Block",
              "src": "3628:354:14",
              "statements": [
                {
                  "assignments": [
                    5345
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5345,
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 5390,
                      "src": "3639:12:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$11316",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 5344,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 11316,
                        "src": "3639:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$11316",
                          "typeString": "contract IERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5349,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5347,
                        "name": "erc20Contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5337,
                        "src": "3661:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5346,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11316,
                      "src": "3654:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$11316_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 5348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3654:21:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$11316",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3639:36:14"
                },
                {
                  "assignments": [
                    5351
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5351,
                      "name": "_allowance",
                      "nodeType": "VariableDeclaration",
                      "scope": 5390,
                      "src": "3686:18:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5350,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3686:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5359,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5355,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11722,
                            "src": "3731:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ZeroExExchangeController_$5516",
                              "typeString": "library ZeroExExchangeController"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ZeroExExchangeController_$5516",
                              "typeString": "library ZeroExExchangeController"
                            }
                          ],
                          "id": 5354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3723:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 5356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3723:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5357,
                        "name": "ERC20_PROXY_CONTRACT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5285,
                        "src": "3738:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5352,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5345,
                        "src": "3707:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$11316",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5353,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "allowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11279,
                      "src": "3707:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 5358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3707:52:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3686:73:14"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 5360,
                      "name": "_allowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5351,
                      "src": "3774:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 5361,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5339,
                      "src": "3788:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3774:20:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 5365,
                  "nodeType": "IfStatement",
                  "src": "3770:37:14",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 5363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3803:4:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "functionReturnParameters": 5343,
                    "id": 5364,
                    "nodeType": "Return",
                    "src": "3796:11:14"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 5372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 5368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 5366,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5339,
                        "src": "3822:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 5367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3831:1:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3822:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 5371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 5369,
                        "name": "_allowance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5351,
                        "src": "3836:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 5370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3849:1:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3836:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3822:28:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 5380,
                  "nodeType": "IfStatement",
                  "src": "3818:76:14",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 5376,
                          "name": "ERC20_PROXY_CONTRACT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5285,
                          "src": "3870:20:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 5377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3892:1:14",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 5373,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5345,
                          "src": "3852:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$11316",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 5375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "safeApprove",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11415,
                        "src": "3852:17:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$11316_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$11316_$",
                          "typeString": "function (contract IERC20,address,uint256)"
                        }
                      },
                      "id": 5378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3852:42:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 5379,
                    "nodeType": "ExpressionStatement",
                    "src": "3852:42:14"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5384,
                        "name": "ERC20_PROXY_CONTRACT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5285,
                        "src": "3923:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5385,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5339,
                        "src": "3945:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5381,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5345,
                        "src": "3905:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$11316",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5383,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11415,
                      "src": "3905:17:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$11316_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$11316_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 5386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3905:47:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5387,
                  "nodeType": "ExpressionStatement",
                  "src": "3905:47:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 5388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3970:4:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 5343,
                  "id": 5389,
                  "nodeType": "Return",
                  "src": "3963:11:14"
                }
              ]
            },
            "documentation": "@dev Approves tokens to 0x without spending gas on every deposit.\n@param erc20Contract The ERC20 contract address of the token.\n@param amount Amount of the specified token to approve to dYdX.\n@return Boolean indicating success.",
            "id": 5391,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5340,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5337,
                  "name": "erc20Contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 5391,
                  "src": "3565:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5336,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3565:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5339,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 5391,
                  "src": "3588:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5338,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3588:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3564:39:14"
            },
            "returnParameters": {
              "id": 5343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5342,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5391,
                  "src": "3622:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5341,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3622:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3621:6:14"
            },
            "scope": 5516,
            "src": "3548:434:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5452,
              "nodeType": "Block",
              "src": "4681:551:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 5409,
                            "name": "orders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5394,
                            "src": "4700:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Order_$8284_memory_$dyn_memory_ptr",
                              "typeString": "struct LibOrder.Order memory[] memory"
                            }
                          },
                          "id": 5410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4700:13:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 5411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4716:1:14",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4700:17:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4174206c65617374206f6e65206f7264657220616e64206d61746368696e67207369676e61747572652069732072657175697265642e",
                        "id": 5413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4719:56:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_10eb0b0c82e34271dd39174b287c19d204b292c5b02e13a52b7d5aed077aa826",
                          "typeString": "literal_string \"At least one order and matching signature is required.\""
                        },
                        "value": "At least one order and matching signature is required."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_10eb0b0c82e34271dd39174b287c19d204b292c5b02e13a52b7d5aed077aa826",
                          "typeString": "literal_string \"At least one order and matching signature is required.\""
                        }
                      ],
                      "id": 5408,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11629,
                        11630
                      ],
                      "referencedDeclaration": 11630,
                      "src": "4692:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4692:84:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5415,
                  "nodeType": "ExpressionStatement",
                  "src": "4692:84:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 5417,
                            "name": "orders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5394,
                            "src": "4795:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Order_$8284_memory_$dyn_memory_ptr",
                              "typeString": "struct LibOrder.Order memory[] memory"
                            }
                          },
                          "id": 5418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4795:13:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 5419,
                            "name": "signatures",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5397,
                            "src": "4812:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                              "typeString": "bytes memory[] memory"
                            }
                          },
                          "id": 5420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4812:17:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4795:34:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d69736d61746368206265747765656e206e756d626572206f66206f726465727320616e64207369676e6174757265732e",
                        "id": 5422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4831:51:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a66891f4a1f5a58bc1164c0caf17efb0dc88c45db4694cbc47cddcba02df0e57",
                          "typeString": "literal_string \"Mismatch between number of orders and signatures.\""
                        },
                        "value": "Mismatch between number of orders and signatures."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a66891f4a1f5a58bc1164c0caf17efb0dc88c45db4694cbc47cddcba02df0e57",
                          "typeString": "literal_string \"Mismatch between number of orders and signatures.\""
                        }
                      ],
                      "id": 5416,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11629,
                        11630
                      ],
                      "referencedDeclaration": 11630,
                      "src": "4787:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4787:96:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5424,
                  "nodeType": "ExpressionStatement",
                  "src": "4787:96:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 5426,
                          "name": "takerAssetFillAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5399,
                          "src": "4902:20:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 5427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4925:1:14",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4902:24:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54616b65722061737365742066696c6c20616d6f756e74206d7573742062652067726561746572207468616e20302e",
                        "id": 5429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4928:49:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9c0a22ccc4fce3408666f0d24bb0b9b76616c444827c5a4a278ea8e5e349935",
                          "typeString": "literal_string \"Taker asset fill amount must be greater than 0.\""
                        },
                        "value": "Taker asset fill amount must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c9c0a22ccc4fce3408666f0d24bb0b9b76616c444827c5a4a278ea8e5e349935",
                          "typeString": "literal_string \"Taker asset fill amount must be greater than 0.\""
                        }
                      ],
                      "id": 5425,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11629,
                        11630
                      ],
                      "referencedDeclaration": 11630,
                      "src": "4894:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4894:84:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5431,
                  "nodeType": "ExpressionStatement",
                  "src": "4894:84:14"
                },
                {
                  "assignments": [
                    5435
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5435,
                      "name": "fillResults",
                      "nodeType": "VariableDeclaration",
                      "scope": 5452,
                      "src": "4989:45:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FillResults_$7267_memory_ptr",
                        "typeString": "struct LibFillResults.FillResults"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 5434,
                        "name": "LibFillResults.FillResults",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 7267,
                        "src": "4989:26:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FillResults_$7267_storage_ptr",
                          "typeString": "struct LibFillResults.FillResults"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5445,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5441,
                        "name": "orders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5394,
                        "src": "5093:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Order_$8284_memory_$dyn_memory_ptr",
                          "typeString": "struct LibOrder.Order memory[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5442,
                        "name": "takerAssetFillAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5399,
                        "src": "5101:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5443,
                        "name": "signatures",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5397,
                        "src": "5123:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_Order_$8284_memory_$dyn_memory_ptr",
                          "typeString": "struct LibOrder.Order memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      ],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 5439,
                          "name": "protocolFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5401,
                          "src": "5080:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 5436,
                            "name": "_exchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5282,
                            "src": "5037:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IExchange_$8482",
                              "typeString": "contract IExchange"
                            }
                          },
                          "id": 5437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "marketSellOrdersFillOrKill",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8910,
                          "src": "5037:36:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_array$_t_struct$_Order_$8284_memory_$dyn_memory_ptr_$_t_uint256_$_t_array$_t_bytes_memory_$dyn_memory_ptr_$returns$_t_struct$_FillResults_$7267_memory_ptr_$",
                            "typeString": "function (struct LibOrder.Order memory[] memory,uint256,bytes memory[] memory) payable external returns (struct LibFillResults.FillResults memory)"
                          }
                        },
                        "id": 5438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5037:42:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_external_payable$_t_array$_t_struct$_Order_$8284_memory_$dyn_memory_ptr_$_t_uint256_$_t_array$_t_bytes_memory_$dyn_memory_ptr_$returns$_t_struct$_FillResults_$7267_memory_ptr_$value_$",
                          "typeString": "function (uint256) pure returns (function (struct LibOrder.Order memory[] memory,uint256,bytes memory[] memory) payable external returns (struct LibFillResults.FillResults memory))"
                        }
                      },
                      "id": 5440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5037:55:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_array$_t_struct$_Order_$8284_memory_$dyn_memory_ptr_$_t_uint256_$_t_array$_t_bytes_memory_$dyn_memory_ptr_$returns$_t_struct$_FillResults_$7267_memory_ptr_$value",
                        "typeString": "function (struct LibOrder.Order memory[] memory,uint256,bytes memory[] memory) payable external returns (struct LibFillResults.FillResults memory)"
                      }
                    },
                    "id": 5444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5037:97:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FillResults_$7267_memory_ptr",
                      "typeString": "struct LibFillResults.FillResults memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4989:145:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5446,
                          "name": "fillResults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5435,
                          "src": "5153:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FillResults_$7267_memory_ptr",
                            "typeString": "struct LibFillResults.FillResults memory"
                          }
                        },
                        "id": 5447,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "takerAssetFilledAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7260,
                        "src": "5153:34:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5448,
                          "name": "fillResults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5435,
                          "src": "5189:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FillResults_$7267_memory_ptr",
                            "typeString": "struct LibFillResults.FillResults memory"
                          }
                        },
                        "id": 5449,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "makerAssetFilledAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7258,
                        "src": "5189:34:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 5450,
                    "isConstant": false,
                    "isInlineArray": true,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5152:72:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                      "typeString": "uint256[2] memory"
                    }
                  },
                  "functionReturnParameters": 5407,
                  "id": 5451,
                  "nodeType": "Return",
                  "src": "5145:79:14"
                }
              ]
            },
            "documentation": "@dev Market sells to 0x exchange orders up to a certain amount of input.\n@param orders The limit orders to be filled in ascending order of price.\n@param signatures The signatures for the orders.\n@param takerAssetFillAmount The amount of the taker asset to sell (excluding taker fees).\n@param protocolFee The protocol fee in ETH to pay to 0x.\n@return Array containing the taker asset filled amount (sold) and maker asset filled amount (bought).",
            "id": 5453,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "marketSellOrdersFillOrKill",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5394,
                  "name": "orders",
                  "nodeType": "VariableDeclaration",
                  "scope": 5453,
                  "src": "4536:30:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$8284_memory_$dyn_memory_ptr",
                    "typeString": "struct LibOrder.Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 5392,
                      "name": "LibOrder.Order",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 8284,
                      "src": "4536:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$8284_storage_ptr",
                        "typeString": "struct LibOrder.Order"
                      }
                    },
                    "id": 5393,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4536:16:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$8284_storage_$dyn_storage_ptr",
                      "typeString": "struct LibOrder.Order[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5397,
                  "name": "signatures",
                  "nodeType": "VariableDeclaration",
                  "scope": 5453,
                  "src": "4568:25:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5395,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "4568:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 5396,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4568:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5399,
                  "name": "takerAssetFillAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 5453,
                  "src": "4595:28:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5398,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4595:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5401,
                  "name": "protocolFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 5453,
                  "src": "4625:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5400,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4625:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4535:110:14"
            },
            "returnParameters": {
              "id": 5407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5406,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5453,
                  "src": "4662:17:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5403,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4662:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 5405,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 5404,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4670:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "4662:10:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4661:19:14"
            },
            "scope": 5516,
            "src": "4500:732:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5514,
              "nodeType": "Block",
              "src": "5908:550:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 5471,
                            "name": "orders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5456,
                            "src": "5927:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Order_$8284_memory_$dyn_memory_ptr",
                              "typeString": "struct LibOrder.Order memory[] memory"
                            }
                          },
                          "id": 5472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5927:13:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 5473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5943:1:14",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5927:17:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4174206c65617374206f6e65206f7264657220616e64206d61746368696e67207369676e61747572652069732072657175697265642e",
                        "id": 5475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5946:56:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_10eb0b0c82e34271dd39174b287c19d204b292c5b02e13a52b7d5aed077aa826",
                          "typeString": "literal_string \"At least one order and matching signature is required.\""
                        },
                        "value": "At least one order and matching signature is required."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_10eb0b0c82e34271dd39174b287c19d204b292c5b02e13a52b7d5aed077aa826",
                          "typeString": "literal_string \"At least one order and matching signature is required.\""
                        }
                      ],
                      "id": 5470,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11629,
                        11630
                      ],
                      "referencedDeclaration": 11630,
                      "src": "5919:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5919:84:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5477,
                  "nodeType": "ExpressionStatement",
                  "src": "5919:84:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 5479,
                            "name": "orders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5456,
                            "src": "6022:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Order_$8284_memory_$dyn_memory_ptr",
                              "typeString": "struct LibOrder.Order memory[] memory"
                            }
                          },
                          "id": 5480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "6022:13:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 5481,
                            "name": "signatures",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5459,
                            "src": "6039:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                              "typeString": "bytes memory[] memory"
                            }
                          },
                          "id": 5482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "6039:17:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6022:34:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d69736d61746368206265747765656e206e756d626572206f66206f726465727320616e64207369676e6174757265732e",
                        "id": 5484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6058:51:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a66891f4a1f5a58bc1164c0caf17efb0dc88c45db4694cbc47cddcba02df0e57",
                          "typeString": "literal_string \"Mismatch between number of orders and signatures.\""
                        },
                        "value": "Mismatch between number of orders and signatures."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a66891f4a1f5a58bc1164c0caf17efb0dc88c45db4694cbc47cddcba02df0e57",
                          "typeString": "literal_string \"Mismatch between number of orders and signatures.\""
                        }
                      ],
                      "id": 5478,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11629,
                        11630
                      ],
                      "referencedDeclaration": 11630,
                      "src": "6014:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6014:96:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5486,
                  "nodeType": "ExpressionStatement",
                  "src": "6014:96:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 5488,
                          "name": "makerAssetFillAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5461,
                          "src": "6129:20:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 5489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6152:1:14",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6129:24:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d616b65722061737365742066696c6c20616d6f756e74206d7573742062652067726561746572207468616e20302e",
                        "id": 5491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6155:49:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f4850f6f6e5f93a93bc4f1a8e75209ff352560236a283275d8ca35a064dfbdd8",
                          "typeString": "literal_string \"Maker asset fill amount must be greater than 0.\""
                        },
                        "value": "Maker asset fill amount must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f4850f6f6e5f93a93bc4f1a8e75209ff352560236a283275d8ca35a064dfbdd8",
                          "typeString": "literal_string \"Maker asset fill amount must be greater than 0.\""
                        }
                      ],
                      "id": 5487,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11629,
                        11630
                      ],
                      "referencedDeclaration": 11630,
                      "src": "6121:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6121:84:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5493,
                  "nodeType": "ExpressionStatement",
                  "src": "6121:84:14"
                },
                {
                  "assignments": [
                    5497
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5497,
                      "name": "fillResults",
                      "nodeType": "VariableDeclaration",
                      "scope": 5514,
                      "src": "6216:45:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FillResults_$7267_memory_ptr",
                        "typeString": "struct LibFillResults.FillResults"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 5496,
                        "name": "LibFillResults.FillResults",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 7267,
                        "src": "6216:26:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FillResults_$7267_storage_ptr",
                          "typeString": "struct LibFillResults.FillResults"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5507,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5503,
                        "name": "orders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5456,
                        "src": "6319:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Order_$8284_memory_$dyn_memory_ptr",
                          "typeString": "struct LibOrder.Order memory[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5504,
                        "name": "makerAssetFillAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5461,
                        "src": "6327:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5505,
                        "name": "signatures",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5459,
                        "src": "6349:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_Order_$8284_memory_$dyn_memory_ptr",
                          "typeString": "struct LibOrder.Order memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      ],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 5501,
                          "name": "protocolFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5463,
                          "src": "6306:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 5498,
                            "name": "_exchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5282,
                            "src": "6264:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IExchange_$8482",
                              "typeString": "contract IExchange"
                            }
                          },
                          "id": 5499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "marketBuyOrdersFillOrKill",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8923,
                          "src": "6264:35:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_array$_t_struct$_Order_$8284_memory_$dyn_memory_ptr_$_t_uint256_$_t_array$_t_bytes_memory_$dyn_memory_ptr_$returns$_t_struct$_FillResults_$7267_memory_ptr_$",
                            "typeString": "function (struct LibOrder.Order memory[] memory,uint256,bytes memory[] memory) payable external returns (struct LibFillResults.FillResults memory)"
                          }
                        },
                        "id": 5500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6264:41:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_external_payable$_t_array$_t_struct$_Order_$8284_memory_$dyn_memory_ptr_$_t_uint256_$_t_array$_t_bytes_memory_$dyn_memory_ptr_$returns$_t_struct$_FillResults_$7267_memory_ptr_$value_$",
                          "typeString": "function (uint256) pure returns (function (struct LibOrder.Order memory[] memory,uint256,bytes memory[] memory) payable external returns (struct LibFillResults.FillResults memory))"
                        }
                      },
                      "id": 5502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6264:54:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_array$_t_struct$_Order_$8284_memory_$dyn_memory_ptr_$_t_uint256_$_t_array$_t_bytes_memory_$dyn_memory_ptr_$returns$_t_struct$_FillResults_$7267_memory_ptr_$value",
                        "typeString": "function (struct LibOrder.Order memory[] memory,uint256,bytes memory[] memory) payable external returns (struct LibFillResults.FillResults memory)"
                      }
                    },
                    "id": 5506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6264:96:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FillResults_$7267_memory_ptr",
                      "typeString": "struct LibFillResults.FillResults memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6216:144:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5508,
                          "name": "fillResults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5497,
                          "src": "6379:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FillResults_$7267_memory_ptr",
                            "typeString": "struct LibFillResults.FillResults memory"
                          }
                        },
                        "id": 5509,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "takerAssetFilledAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7260,
                        "src": "6379:34:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5510,
                          "name": "fillResults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5497,
                          "src": "6415:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FillResults_$7267_memory_ptr",
                            "typeString": "struct LibFillResults.FillResults memory"
                          }
                        },
                        "id": 5511,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "makerAssetFilledAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7258,
                        "src": "6415:34:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 5512,
                    "isConstant": false,
                    "isInlineArray": true,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "6378:72:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                      "typeString": "uint256[2] memory"
                    }
                  },
                  "functionReturnParameters": 5469,
                  "id": 5513,
                  "nodeType": "Return",
                  "src": "6371:79:14"
                }
              ]
            },
            "documentation": "@dev Market buys from 0x exchange orders up to a certain amount of output.\n@param orders The limit orders to be filled in ascending order of price.\n@param signatures The signatures for the orders.\n@param makerAssetFillAmount The amount of the maker asset to buy.\n@param protocolFee The protocol fee in ETH to pay to 0x.\n@return Array containing the taker asset filled amount (sold) and maker asset filled amount (bought).",
            "id": 5515,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "marketBuyOrdersFillOrKill",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5456,
                  "name": "orders",
                  "nodeType": "VariableDeclaration",
                  "scope": 5515,
                  "src": "5763:30:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$8284_memory_$dyn_memory_ptr",
                    "typeString": "struct LibOrder.Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 5454,
                      "name": "LibOrder.Order",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 8284,
                      "src": "5763:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$8284_storage_ptr",
                        "typeString": "struct LibOrder.Order"
                      }
                    },
                    "id": 5455,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5763:16:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$8284_storage_$dyn_storage_ptr",
                      "typeString": "struct LibOrder.Order[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5459,
                  "name": "signatures",
                  "nodeType": "VariableDeclaration",
                  "scope": 5515,
                  "src": "5795:25:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5457,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "5795:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 5458,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5795:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5461,
                  "name": "makerAssetFillAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 5515,
                  "src": "5822:28:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5460,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5822:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5463,
                  "name": "protocolFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 5515,
                  "src": "5852:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5462,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5852:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5762:110:14"
            },
            "returnParameters": {
              "id": 5469,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5468,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5515,
                  "src": "5889:17:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5465,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5889:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 5467,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 5466,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5897:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "5889:10:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5888:19:14"
            },
            "scope": 5516,
            "src": "5728:730:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 5517,
        "src": "1711:4750:14"
      }
    ],
    "src": "1091:5372:14"
  },
  "legacyAST": {
    "absolutePath": "/home/david/rari-contracts-v2.0.0/contracts/lib/exchanges/ZeroExExchangeController.sol",
    "exportedSymbols": {
      "ZeroExExchangeController": [
        5516
      ]
    },
    "id": 5517,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5255,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "1091:23:14"
      },
      {
        "id": 5256,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "1116:33:14"
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 5257,
        "nodeType": "ImportDirective",
        "scope": 5517,
        "sourceUnit": 11072,
        "src": "1153:51:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
        "id": 5258,
        "nodeType": "ImportDirective",
        "scope": 5517,
        "sourceUnit": 11537,
        "src": "1206:59:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@0x/contracts-exchange-libs/contracts/src/LibFillResults.sol",
        "file": "@0x/contracts-exchange-libs/contracts/src/LibFillResults.sol",
        "id": 5259,
        "nodeType": "ImportDirective",
        "scope": 5517,
        "sourceUnit": 7924,
        "src": "1269:70:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@0x/contracts-exchange-libs/contracts/src/LibOrder.sol",
        "file": "@0x/contracts-exchange-libs/contracts/src/LibOrder.sol",
        "id": 5260,
        "nodeType": "ImportDirective",
        "scope": 5517,
        "sourceUnit": 8350,
        "src": "1341:64:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@0x/contracts-exchange/contracts/src/interfaces/IExchange.sol",
        "file": "@0x/contracts-exchange/contracts/src/interfaces/IExchange.sol",
        "id": 5261,
        "nodeType": "ImportDirective",
        "scope": 5517,
        "sourceUnit": 8483,
        "src": "1407:71:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@0x/contracts-utils/contracts/src/LibBytes.sol",
        "file": "@0x/contracts-utils/contracts/src/LibBytes.sol",
        "id": 5262,
        "nodeType": "ImportDirective",
        "scope": 5517,
        "sourceUnit": 9432,
        "src": "1480:56:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@title ZeroExExchangeController\n@author David Lucid <david@rari.capital> (https://github.com/davidlucid)\n@dev This library handles exchanges via 0x.",
        "fullyImplemented": true,
        "id": 5516,
        "linearizedBaseContracts": [
          5516
        ],
        "name": "ZeroExExchangeController",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 5265,
            "libraryName": {
              "contractScope": null,
              "id": 5263,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11071,
              "src": "1757:8:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$11071",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1751:27:14",
            "typeName": {
              "id": 5264,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1770:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 5268,
            "libraryName": {
              "contractScope": null,
              "id": 5266,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11536,
              "src": "1790:9:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$11536",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1784:27:14",
            "typeName": {
              "contractScope": null,
              "id": 5267,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11316,
              "src": "1804:6:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$11316",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 5271,
            "libraryName": {
              "contractScope": null,
              "id": 5269,
              "name": "LibBytes",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9431,
              "src": "1823:8:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LibBytes_$9431",
                "typeString": "library LibBytes"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1817:25:14",
            "typeName": {
              "id": 5270,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "1836:5:14",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            }
          },
          {
            "constant": true,
            "id": 5274,
            "name": "VERSION",
            "nodeType": "VariableDeclaration",
            "scope": 5516,
            "src": "1953:40:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 5272,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1953:6:14",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "322e302e30",
              "id": 5273,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1986:7:14",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_b4bcb154e38601c389396fa918314da42d4626f13ef6d0ceb07e5f5d26b2fbc3",
                "typeString": "literal_string \"2.0.0\""
              },
              "value": "2.0.0"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 5277,
            "name": "EXCHANGE_CONTRACT",
            "nodeType": "VariableDeclaration",
            "scope": 5516,
            "src": "2066:87:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5275,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2066:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307836313933354362446430323238374235313131313944446231314165623432463135393362374566",
              "id": 5276,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2111:42:14",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0x61935CbDd02287B511119DDb11Aeb42F1593b7Ef"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 5282,
            "name": "_exchange",
            "nodeType": "VariableDeclaration",
            "scope": 5516,
            "src": "2225:67:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IExchange_$8482",
              "typeString": "contract IExchange"
            },
            "typeName": {
              "contractScope": null,
              "id": 5278,
              "name": "IExchange",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8482,
              "src": "2225:9:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IExchange_$8482",
                "typeString": "contract IExchange"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "id": 5280,
                  "name": "EXCHANGE_CONTRACT",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5277,
                  "src": "2274:17:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 5279,
                "name": "IExchange",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 8482,
                "src": "2264:9:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IExchange_$8482_$",
                  "typeString": "type(contract IExchange)"
                }
              },
              "id": 5281,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2264:28:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IExchange_$8482",
                "typeString": "contract IExchange"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 5285,
            "name": "ERC20_PROXY_CONTRACT",
            "nodeType": "VariableDeclaration",
            "scope": 5516,
            "src": "2367:90:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5283,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2367:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307839354536463438323534363039413665653030364637443439336338653566423937303934636546",
              "id": 5284,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2415:42:14",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0x95E6F48254609A6ee006F7D493c8e5fB97094ceF"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 5316,
              "nodeType": "Block",
              "src": "2727:213:14",
              "statements": [
                {
                  "assignments": [
                    5293
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5293,
                      "name": "assetProxyId",
                      "nodeType": "VariableDeclaration",
                      "scope": 5316,
                      "src": "2738:19:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 5292,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "2738:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5298,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 5296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2781:1:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5294,
                        "name": "assetData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5287,
                        "src": "2760:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      "id": 5295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "readBytes4",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9421,
                      "src": "2760:20:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes4_$bound_to$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory,uint256) pure returns (bytes4)"
                      }
                    },
                    "id": 5297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2760:23:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2738:45:14"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 5305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 5301,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 5299,
                        "name": "assetProxyId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5293,
                        "src": "2798:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30786634373236316230",
                        "id": 5300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2814:10:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4101136816_by_1",
                          "typeString": "int_const 4101136816"
                        },
                        "value": "0xf47261b0"
                      },
                      "src": "2798:26:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 5304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 5302,
                        "name": "assetProxyId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5293,
                        "src": "2828:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30786463313630306633",
                        "id": 5303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2844:10:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3692429555_by_1",
                          "typeString": "int_const 3692429555"
                        },
                        "value": "0xdc1600f3"
                      },
                      "src": "2828:26:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2798:56:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 5311,
                  "nodeType": "IfStatement",
                  "src": "2794:94:14",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3136",
                          "id": 5308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2885:2:14",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          "value": "16"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 5306,
                          "name": "assetData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5287,
                          "src": "2863:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "id": 5307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "readAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9222,
                        "src": "2863:21:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory,uint256) pure returns (address)"
                        }
                      },
                      "id": 5309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2863:25:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "functionReturnParameters": 5291,
                    "id": 5310,
                    "nodeType": "Return",
                    "src": "2856:32:14"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c69642061737365742070726f78792049442e",
                        "id": 5313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2906:25:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ecdecfa8f808da55f41ca6d1ed249544b07bbc847c1ad9b592c9bc860e95b121",
                          "typeString": "literal_string \"Invalid asset proxy ID.\""
                        },
                        "value": "Invalid asset proxy ID."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_ecdecfa8f808da55f41ca6d1ed249544b07bbc847c1ad9b592c9bc860e95b121",
                          "typeString": "literal_string \"Invalid asset proxy ID.\""
                        }
                      ],
                      "id": 5312,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11631,
                        11632
                      ],
                      "referencedDeclaration": 11632,
                      "src": "2899:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 5314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2899:33:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5315,
                  "nodeType": "ExpressionStatement",
                  "src": "2899:33:14"
                }
              ]
            },
            "documentation": "@dev Decodes ERC20 or ERC20Bridge asset data.\n@param assetData The ERC20 or ERC20Bridge asset data.\n@return The asset token address.",
            "id": 5317,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decodeTokenAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5287,
                  "name": "assetData",
                  "nodeType": "VariableDeclaration",
                  "scope": 5317,
                  "src": "2669:24:14",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5286,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2669:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2668:26:14"
            },
            "returnParameters": {
              "id": 5291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5290,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5317,
                  "src": "2718:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5289,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2718:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2717:9:14"
            },
            "scope": 5516,
            "src": "2641:299:14",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5334,
              "nodeType": "Block",
              "src": "3168:94:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5329,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11722,
                            "src": "3226:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ZeroExExchangeController_$5516",
                              "typeString": "library ZeroExExchangeController"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ZeroExExchangeController_$5516",
                              "typeString": "library ZeroExExchangeController"
                            }
                          ],
                          "id": 5328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3218:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 5330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3218:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5331,
                        "name": "ERC20_PROXY_CONTRACT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5285,
                        "src": "3233:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5325,
                            "name": "erc20Contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5319,
                            "src": "3193:13:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5324,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11316,
                          "src": "3186:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$11316_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 5326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3186:21:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$11316",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5327,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "allowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11279,
                      "src": "3186:31:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 5332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3186:68:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5323,
                  "id": 5333,
                  "nodeType": "Return",
                  "src": "3179:75:14"
                }
              ]
            },
            "documentation": "@dev Gets allowance of the specified token to 0x.\n@param erc20Contract The ERC20 contract address of the token.",
            "id": 5335,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5320,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5319,
                  "name": "erc20Contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 5335,
                  "src": "3113:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5318,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3113:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3112:23:14"
            },
            "returnParameters": {
              "id": 5323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5322,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5335,
                  "src": "3159:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5321,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3159:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3158:9:14"
            },
            "scope": 5516,
            "src": "3094:168:14",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5390,
              "nodeType": "Block",
              "src": "3628:354:14",
              "statements": [
                {
                  "assignments": [
                    5345
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5345,
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 5390,
                      "src": "3639:12:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$11316",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 5344,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 11316,
                        "src": "3639:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$11316",
                          "typeString": "contract IERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5349,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5347,
                        "name": "erc20Contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5337,
                        "src": "3661:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5346,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11316,
                      "src": "3654:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$11316_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 5348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3654:21:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$11316",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3639:36:14"
                },
                {
                  "assignments": [
                    5351
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5351,
                      "name": "_allowance",
                      "nodeType": "VariableDeclaration",
                      "scope": 5390,
                      "src": "3686:18:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5350,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3686:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5359,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5355,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11722,
                            "src": "3731:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ZeroExExchangeController_$5516",
                              "typeString": "library ZeroExExchangeController"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ZeroExExchangeController_$5516",
                              "typeString": "library ZeroExExchangeController"
                            }
                          ],
                          "id": 5354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3723:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 5356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3723:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5357,
                        "name": "ERC20_PROXY_CONTRACT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5285,
                        "src": "3738:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5352,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5345,
                        "src": "3707:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$11316",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5353,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "allowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11279,
                      "src": "3707:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 5358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3707:52:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3686:73:14"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 5360,
                      "name": "_allowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5351,
                      "src": "3774:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 5361,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5339,
                      "src": "3788:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3774:20:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 5365,
                  "nodeType": "IfStatement",
                  "src": "3770:37:14",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 5363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3803:4:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "functionReturnParameters": 5343,
                    "id": 5364,
                    "nodeType": "Return",
                    "src": "3796:11:14"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 5372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 5368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 5366,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5339,
                        "src": "3822:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 5367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3831:1:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3822:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 5371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 5369,
                        "name": "_allowance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5351,
                        "src": "3836:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 5370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3849:1:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3836:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3822:28:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 5380,
                  "nodeType": "IfStatement",
                  "src": "3818:76:14",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 5376,
                          "name": "ERC20_PROXY_CONTRACT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5285,
                          "src": "3870:20:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 5377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3892:1:14",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 5373,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5345,
                          "src": "3852:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$11316",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 5375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "safeApprove",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11415,
                        "src": "3852:17:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$11316_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$11316_$",
                          "typeString": "function (contract IERC20,address,uint256)"
                        }
                      },
                      "id": 5378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3852:42:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 5379,
                    "nodeType": "ExpressionStatement",
                    "src": "3852:42:14"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5384,
                        "name": "ERC20_PROXY_CONTRACT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5285,
                        "src": "3923:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5385,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5339,
                        "src": "3945:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5381,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5345,
                        "src": "3905:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$11316",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5383,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11415,
                      "src": "3905:17:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$11316_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$11316_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 5386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3905:47:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5387,
                  "nodeType": "ExpressionStatement",
                  "src": "3905:47:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 5388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3970:4:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 5343,
                  "id": 5389,
                  "nodeType": "Return",
                  "src": "3963:11:14"
                }
              ]
            },
            "documentation": "@dev Approves tokens to 0x without spending gas on every deposit.\n@param erc20Contract The ERC20 contract address of the token.\n@param amount Amount of the specified token to approve to dYdX.\n@return Boolean indicating success.",
            "id": 5391,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5340,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5337,
                  "name": "erc20Contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 5391,
                  "src": "3565:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5336,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3565:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5339,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 5391,
                  "src": "3588:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5338,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3588:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3564:39:14"
            },
            "returnParameters": {
              "id": 5343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5342,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5391,
                  "src": "3622:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5341,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3622:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3621:6:14"
            },
            "scope": 5516,
            "src": "3548:434:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5452,
              "nodeType": "Block",
              "src": "4681:551:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 5409,
                            "name": "orders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5394,
                            "src": "4700:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Order_$8284_memory_$dyn_memory_ptr",
                              "typeString": "struct LibOrder.Order memory[] memory"
                            }
                          },
                          "id": 5410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4700:13:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 5411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4716:1:14",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4700:17:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4174206c65617374206f6e65206f7264657220616e64206d61746368696e67207369676e61747572652069732072657175697265642e",
                        "id": 5413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4719:56:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_10eb0b0c82e34271dd39174b287c19d204b292c5b02e13a52b7d5aed077aa826",
                          "typeString": "literal_string \"At least one order and matching signature is required.\""
                        },
                        "value": "At least one order and matching signature is required."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_10eb0b0c82e34271dd39174b287c19d204b292c5b02e13a52b7d5aed077aa826",
                          "typeString": "literal_string \"At least one order and matching signature is required.\""
                        }
                      ],
                      "id": 5408,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11629,
                        11630
                      ],
                      "referencedDeclaration": 11630,
                      "src": "4692:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4692:84:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5415,
                  "nodeType": "ExpressionStatement",
                  "src": "4692:84:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 5417,
                            "name": "orders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5394,
                            "src": "4795:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Order_$8284_memory_$dyn_memory_ptr",
                              "typeString": "struct LibOrder.Order memory[] memory"
                            }
                          },
                          "id": 5418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4795:13:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 5419,
                            "name": "signatures",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5397,
                            "src": "4812:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                              "typeString": "bytes memory[] memory"
                            }
                          },
                          "id": 5420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4812:17:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4795:34:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d69736d61746368206265747765656e206e756d626572206f66206f726465727320616e64207369676e6174757265732e",
                        "id": 5422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4831:51:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a66891f4a1f5a58bc1164c0caf17efb0dc88c45db4694cbc47cddcba02df0e57",
                          "typeString": "literal_string \"Mismatch between number of orders and signatures.\""
                        },
                        "value": "Mismatch between number of orders and signatures."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a66891f4a1f5a58bc1164c0caf17efb0dc88c45db4694cbc47cddcba02df0e57",
                          "typeString": "literal_string \"Mismatch between number of orders and signatures.\""
                        }
                      ],
                      "id": 5416,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11629,
                        11630
                      ],
                      "referencedDeclaration": 11630,
                      "src": "4787:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4787:96:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5424,
                  "nodeType": "ExpressionStatement",
                  "src": "4787:96:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 5426,
                          "name": "takerAssetFillAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5399,
                          "src": "4902:20:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 5427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4925:1:14",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4902:24:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54616b65722061737365742066696c6c20616d6f756e74206d7573742062652067726561746572207468616e20302e",
                        "id": 5429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4928:49:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9c0a22ccc4fce3408666f0d24bb0b9b76616c444827c5a4a278ea8e5e349935",
                          "typeString": "literal_string \"Taker asset fill amount must be greater than 0.\""
                        },
                        "value": "Taker asset fill amount must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c9c0a22ccc4fce3408666f0d24bb0b9b76616c444827c5a4a278ea8e5e349935",
                          "typeString": "literal_string \"Taker asset fill amount must be greater than 0.\""
                        }
                      ],
                      "id": 5425,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11629,
                        11630
                      ],
                      "referencedDeclaration": 11630,
                      "src": "4894:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4894:84:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5431,
                  "nodeType": "ExpressionStatement",
                  "src": "4894:84:14"
                },
                {
                  "assignments": [
                    5435
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5435,
                      "name": "fillResults",
                      "nodeType": "VariableDeclaration",
                      "scope": 5452,
                      "src": "4989:45:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FillResults_$7267_memory_ptr",
                        "typeString": "struct LibFillResults.FillResults"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 5434,
                        "name": "LibFillResults.FillResults",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 7267,
                        "src": "4989:26:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FillResults_$7267_storage_ptr",
                          "typeString": "struct LibFillResults.FillResults"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5445,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5441,
                        "name": "orders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5394,
                        "src": "5093:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Order_$8284_memory_$dyn_memory_ptr",
                          "typeString": "struct LibOrder.Order memory[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5442,
                        "name": "takerAssetFillAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5399,
                        "src": "5101:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5443,
                        "name": "signatures",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5397,
                        "src": "5123:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_Order_$8284_memory_$dyn_memory_ptr",
                          "typeString": "struct LibOrder.Order memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      ],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 5439,
                          "name": "protocolFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5401,
                          "src": "5080:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 5436,
                            "name": "_exchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5282,
                            "src": "5037:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IExchange_$8482",
                              "typeString": "contract IExchange"
                            }
                          },
                          "id": 5437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "marketSellOrdersFillOrKill",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8910,
                          "src": "5037:36:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_array$_t_struct$_Order_$8284_memory_$dyn_memory_ptr_$_t_uint256_$_t_array$_t_bytes_memory_$dyn_memory_ptr_$returns$_t_struct$_FillResults_$7267_memory_ptr_$",
                            "typeString": "function (struct LibOrder.Order memory[] memory,uint256,bytes memory[] memory) payable external returns (struct LibFillResults.FillResults memory)"
                          }
                        },
                        "id": 5438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5037:42:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_external_payable$_t_array$_t_struct$_Order_$8284_memory_$dyn_memory_ptr_$_t_uint256_$_t_array$_t_bytes_memory_$dyn_memory_ptr_$returns$_t_struct$_FillResults_$7267_memory_ptr_$value_$",
                          "typeString": "function (uint256) pure returns (function (struct LibOrder.Order memory[] memory,uint256,bytes memory[] memory) payable external returns (struct LibFillResults.FillResults memory))"
                        }
                      },
                      "id": 5440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5037:55:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_array$_t_struct$_Order_$8284_memory_$dyn_memory_ptr_$_t_uint256_$_t_array$_t_bytes_memory_$dyn_memory_ptr_$returns$_t_struct$_FillResults_$7267_memory_ptr_$value",
                        "typeString": "function (struct LibOrder.Order memory[] memory,uint256,bytes memory[] memory) payable external returns (struct LibFillResults.FillResults memory)"
                      }
                    },
                    "id": 5444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5037:97:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FillResults_$7267_memory_ptr",
                      "typeString": "struct LibFillResults.FillResults memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4989:145:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5446,
                          "name": "fillResults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5435,
                          "src": "5153:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FillResults_$7267_memory_ptr",
                            "typeString": "struct LibFillResults.FillResults memory"
                          }
                        },
                        "id": 5447,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "takerAssetFilledAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7260,
                        "src": "5153:34:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5448,
                          "name": "fillResults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5435,
                          "src": "5189:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FillResults_$7267_memory_ptr",
                            "typeString": "struct LibFillResults.FillResults memory"
                          }
                        },
                        "id": 5449,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "makerAssetFilledAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7258,
                        "src": "5189:34:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 5450,
                    "isConstant": false,
                    "isInlineArray": true,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5152:72:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                      "typeString": "uint256[2] memory"
                    }
                  },
                  "functionReturnParameters": 5407,
                  "id": 5451,
                  "nodeType": "Return",
                  "src": "5145:79:14"
                }
              ]
            },
            "documentation": "@dev Market sells to 0x exchange orders up to a certain amount of input.\n@param orders The limit orders to be filled in ascending order of price.\n@param signatures The signatures for the orders.\n@param takerAssetFillAmount The amount of the taker asset to sell (excluding taker fees).\n@param protocolFee The protocol fee in ETH to pay to 0x.\n@return Array containing the taker asset filled amount (sold) and maker asset filled amount (bought).",
            "id": 5453,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "marketSellOrdersFillOrKill",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5394,
                  "name": "orders",
                  "nodeType": "VariableDeclaration",
                  "scope": 5453,
                  "src": "4536:30:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$8284_memory_$dyn_memory_ptr",
                    "typeString": "struct LibOrder.Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 5392,
                      "name": "LibOrder.Order",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 8284,
                      "src": "4536:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$8284_storage_ptr",
                        "typeString": "struct LibOrder.Order"
                      }
                    },
                    "id": 5393,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4536:16:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$8284_storage_$dyn_storage_ptr",
                      "typeString": "struct LibOrder.Order[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5397,
                  "name": "signatures",
                  "nodeType": "VariableDeclaration",
                  "scope": 5453,
                  "src": "4568:25:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5395,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "4568:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 5396,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4568:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5399,
                  "name": "takerAssetFillAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 5453,
                  "src": "4595:28:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5398,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4595:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5401,
                  "name": "protocolFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 5453,
                  "src": "4625:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5400,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4625:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4535:110:14"
            },
            "returnParameters": {
              "id": 5407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5406,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5453,
                  "src": "4662:17:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5403,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4662:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 5405,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 5404,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4670:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "4662:10:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4661:19:14"
            },
            "scope": 5516,
            "src": "4500:732:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5514,
              "nodeType": "Block",
              "src": "5908:550:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 5471,
                            "name": "orders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5456,
                            "src": "5927:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Order_$8284_memory_$dyn_memory_ptr",
                              "typeString": "struct LibOrder.Order memory[] memory"
                            }
                          },
                          "id": 5472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5927:13:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 5473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5943:1:14",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5927:17:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4174206c65617374206f6e65206f7264657220616e64206d61746368696e67207369676e61747572652069732072657175697265642e",
                        "id": 5475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5946:56:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_10eb0b0c82e34271dd39174b287c19d204b292c5b02e13a52b7d5aed077aa826",
                          "typeString": "literal_string \"At least one order and matching signature is required.\""
                        },
                        "value": "At least one order and matching signature is required."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_10eb0b0c82e34271dd39174b287c19d204b292c5b02e13a52b7d5aed077aa826",
                          "typeString": "literal_string \"At least one order and matching signature is required.\""
                        }
                      ],
                      "id": 5470,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11629,
                        11630
                      ],
                      "referencedDeclaration": 11630,
                      "src": "5919:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5919:84:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5477,
                  "nodeType": "ExpressionStatement",
                  "src": "5919:84:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 5479,
                            "name": "orders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5456,
                            "src": "6022:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Order_$8284_memory_$dyn_memory_ptr",
                              "typeString": "struct LibOrder.Order memory[] memory"
                            }
                          },
                          "id": 5480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "6022:13:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 5481,
                            "name": "signatures",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5459,
                            "src": "6039:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                              "typeString": "bytes memory[] memory"
                            }
                          },
                          "id": 5482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "6039:17:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6022:34:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d69736d61746368206265747765656e206e756d626572206f66206f726465727320616e64207369676e6174757265732e",
                        "id": 5484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6058:51:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a66891f4a1f5a58bc1164c0caf17efb0dc88c45db4694cbc47cddcba02df0e57",
                          "typeString": "literal_string \"Mismatch between number of orders and signatures.\""
                        },
                        "value": "Mismatch between number of orders and signatures."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a66891f4a1f5a58bc1164c0caf17efb0dc88c45db4694cbc47cddcba02df0e57",
                          "typeString": "literal_string \"Mismatch between number of orders and signatures.\""
                        }
                      ],
                      "id": 5478,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11629,
                        11630
                      ],
                      "referencedDeclaration": 11630,
                      "src": "6014:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6014:96:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5486,
                  "nodeType": "ExpressionStatement",
                  "src": "6014:96:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 5488,
                          "name": "makerAssetFillAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5461,
                          "src": "6129:20:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 5489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6152:1:14",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6129:24:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d616b65722061737365742066696c6c20616d6f756e74206d7573742062652067726561746572207468616e20302e",
                        "id": 5491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6155:49:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f4850f6f6e5f93a93bc4f1a8e75209ff352560236a283275d8ca35a064dfbdd8",
                          "typeString": "literal_string \"Maker asset fill amount must be greater than 0.\""
                        },
                        "value": "Maker asset fill amount must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f4850f6f6e5f93a93bc4f1a8e75209ff352560236a283275d8ca35a064dfbdd8",
                          "typeString": "literal_string \"Maker asset fill amount must be greater than 0.\""
                        }
                      ],
                      "id": 5487,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11629,
                        11630
                      ],
                      "referencedDeclaration": 11630,
                      "src": "6121:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6121:84:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5493,
                  "nodeType": "ExpressionStatement",
                  "src": "6121:84:14"
                },
                {
                  "assignments": [
                    5497
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5497,
                      "name": "fillResults",
                      "nodeType": "VariableDeclaration",
                      "scope": 5514,
                      "src": "6216:45:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FillResults_$7267_memory_ptr",
                        "typeString": "struct LibFillResults.FillResults"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 5496,
                        "name": "LibFillResults.FillResults",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 7267,
                        "src": "6216:26:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FillResults_$7267_storage_ptr",
                          "typeString": "struct LibFillResults.FillResults"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5507,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5503,
                        "name": "orders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5456,
                        "src": "6319:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Order_$8284_memory_$dyn_memory_ptr",
                          "typeString": "struct LibOrder.Order memory[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5504,
                        "name": "makerAssetFillAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5461,
                        "src": "6327:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5505,
                        "name": "signatures",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5459,
                        "src": "6349:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_Order_$8284_memory_$dyn_memory_ptr",
                          "typeString": "struct LibOrder.Order memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      ],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 5501,
                          "name": "protocolFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5463,
                          "src": "6306:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 5498,
                            "name": "_exchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5282,
                            "src": "6264:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IExchange_$8482",
                              "typeString": "contract IExchange"
                            }
                          },
                          "id": 5499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "marketBuyOrdersFillOrKill",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8923,
                          "src": "6264:35:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_array$_t_struct$_Order_$8284_memory_$dyn_memory_ptr_$_t_uint256_$_t_array$_t_bytes_memory_$dyn_memory_ptr_$returns$_t_struct$_FillResults_$7267_memory_ptr_$",
                            "typeString": "function (struct LibOrder.Order memory[] memory,uint256,bytes memory[] memory) payable external returns (struct LibFillResults.FillResults memory)"
                          }
                        },
                        "id": 5500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6264:41:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_external_payable$_t_array$_t_struct$_Order_$8284_memory_$dyn_memory_ptr_$_t_uint256_$_t_array$_t_bytes_memory_$dyn_memory_ptr_$returns$_t_struct$_FillResults_$7267_memory_ptr_$value_$",
                          "typeString": "function (uint256) pure returns (function (struct LibOrder.Order memory[] memory,uint256,bytes memory[] memory) payable external returns (struct LibFillResults.FillResults memory))"
                        }
                      },
                      "id": 5502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6264:54:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_array$_t_struct$_Order_$8284_memory_$dyn_memory_ptr_$_t_uint256_$_t_array$_t_bytes_memory_$dyn_memory_ptr_$returns$_t_struct$_FillResults_$7267_memory_ptr_$value",
                        "typeString": "function (struct LibOrder.Order memory[] memory,uint256,bytes memory[] memory) payable external returns (struct LibFillResults.FillResults memory)"
                      }
                    },
                    "id": 5506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6264:96:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FillResults_$7267_memory_ptr",
                      "typeString": "struct LibFillResults.FillResults memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6216:144:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5508,
                          "name": "fillResults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5497,
                          "src": "6379:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FillResults_$7267_memory_ptr",
                            "typeString": "struct LibFillResults.FillResults memory"
                          }
                        },
                        "id": 5509,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "takerAssetFilledAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7260,
                        "src": "6379:34:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5510,
                          "name": "fillResults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5497,
                          "src": "6415:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FillResults_$7267_memory_ptr",
                            "typeString": "struct LibFillResults.FillResults memory"
                          }
                        },
                        "id": 5511,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "makerAssetFilledAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7258,
                        "src": "6415:34:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 5512,
                    "isConstant": false,
                    "isInlineArray": true,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "6378:72:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                      "typeString": "uint256[2] memory"
                    }
                  },
                  "functionReturnParameters": 5469,
                  "id": 5513,
                  "nodeType": "Return",
                  "src": "6371:79:14"
                }
              ]
            },
            "documentation": "@dev Market buys from 0x exchange orders up to a certain amount of output.\n@param orders The limit orders to be filled in ascending order of price.\n@param signatures The signatures for the orders.\n@param makerAssetFillAmount The amount of the maker asset to buy.\n@param protocolFee The protocol fee in ETH to pay to 0x.\n@return Array containing the taker asset filled amount (sold) and maker asset filled amount (bought).",
            "id": 5515,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "marketBuyOrdersFillOrKill",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5456,
                  "name": "orders",
                  "nodeType": "VariableDeclaration",
                  "scope": 5515,
                  "src": "5763:30:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$8284_memory_$dyn_memory_ptr",
                    "typeString": "struct LibOrder.Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 5454,
                      "name": "LibOrder.Order",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 8284,
                      "src": "5763:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$8284_storage_ptr",
                        "typeString": "struct LibOrder.Order"
                      }
                    },
                    "id": 5455,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5763:16:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$8284_storage_$dyn_storage_ptr",
                      "typeString": "struct LibOrder.Order[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5459,
                  "name": "signatures",
                  "nodeType": "VariableDeclaration",
                  "scope": 5515,
                  "src": "5795:25:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5457,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "5795:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 5458,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5795:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5461,
                  "name": "makerAssetFillAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 5515,
                  "src": "5822:28:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5460,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5822:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5463,
                  "name": "protocolFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 5515,
                  "src": "5852:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5462,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5852:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5762:110:14"
            },
            "returnParameters": {
              "id": 5469,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5468,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5515,
                  "src": "5889:17:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5465,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5889:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 5467,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 5466,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5897:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "5889:10:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5888:19:14"
            },
            "scope": 5516,
            "src": "5728:730:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 5517,
        "src": "1711:4750:14"
      }
    ],
    "src": "1091:5372:14"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-08-11T13:51:04.207Z",
  "devdoc": {
    "author": "David Lucid <david@rari.capital> (https://github.com/davidlucid)",
    "details": "This library handles exchanges via 0x.",
    "methods": {
      "allowance(address)": {
        "details": "Gets allowance of the specified token to 0x.",
        "params": {
          "erc20Contract": "The ERC20 contract address of the token."
        }
      },
      "approve(address,uint256)": {
        "details": "Approves tokens to 0x without spending gas on every deposit.",
        "params": {
          "amount": "Amount of the specified token to approve to dYdX.",
          "erc20Contract": "The ERC20 contract address of the token."
        },
        "return": "Boolean indicating success."
      },
      "decodeTokenAddress(bytes)": {
        "details": "Decodes ERC20 or ERC20Bridge asset data.",
        "params": {
          "assetData": "The ERC20 or ERC20Bridge asset data."
        },
        "return": "The asset token address."
      },
      "marketBuyOrdersFillOrKill(LibOrder.Order[],bytes[],uint256,uint256)": {
        "details": "Market buys from 0x exchange orders up to a certain amount of output.",
        "params": {
          "makerAssetFillAmount": "The amount of the maker asset to buy.",
          "orders": "The limit orders to be filled in ascending order of price.",
          "protocolFee": "The protocol fee in ETH to pay to 0x.",
          "signatures": "The signatures for the orders."
        },
        "return": "Array containing the taker asset filled amount (sold) and maker asset filled amount (bought)."
      },
      "marketSellOrdersFillOrKill(LibOrder.Order[],bytes[],uint256,uint256)": {
        "details": "Market sells to 0x exchange orders up to a certain amount of input.",
        "params": {
          "orders": "The limit orders to be filled in ascending order of price.",
          "protocolFee": "The protocol fee in ETH to pay to 0x.",
          "signatures": "The signatures for the orders.",
          "takerAssetFillAmount": "The amount of the taker asset to sell (excluding taker fees)."
        },
        "return": "Array containing the taker asset filled amount (sold) and maker asset filled amount (bought)."
      }
    },
    "title": "ZeroExExchangeController"
  },
  "userdoc": {
    "methods": {}
  }
}